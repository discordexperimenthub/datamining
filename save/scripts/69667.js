(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["69667"],
  {
    496559: function (e, t, n) {
      "use strict";
      e.exports =
        "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='271' height='141'><g fill='#000000' fill-rule='evenodd'><rect width='130' height='20' rx='5'/><rect width='254' height='20' y='30' rx='5'/><rect width='190' height='20' y='60' rx='5'/><rect width='66' height='32' y='102' rx='3'/></g></svg>";
    },
    714266: function (e, t, n) {
      "use strict";
      e.exports =
        "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='271' height='165'><path fill='#000000' fill-rule='evenodd' d='M5 0h120c2.761424 0 5 2.23857625 5 5v10c0 2.7614237-2.238576 5-5 5H5c-2.76142375 0-5-2.2385763-5-5V5c0-2.76142375 2.23857625-5 5-5zm0 30h244c2.761424 0 5 2.2385763 5 5v10c0 2.7614237-2.238576 5-5 5H5c-2.76142375 0-5-2.2385763-5-5V35c0-2.7614237 2.23857625-5 5-5zm0 30h180c2.761424 0 5 2.2385763 5 5v10c0 2.7614237-2.238576 5-5 5H5c-2.76142375 0-5-2.2385763-5-5V65c0-2.7614237 2.23857625-5 5-5zm-2 60h60c1.6568542 0 3 1.343146 3 3v26c0 1.656854-1.3431458 3-3 3H3c-1.65685425 0-3-1.343146-3-3v-26c0-1.656854 1.34314575-3 3-3z'/></svg>";
    },
    950899: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9da7ae63b88717a5d4be.png";
    },
    672523: function (e, t, n) {
      "use strict";
      e.exports = n.p + "953458e872948604afbf.svg";
    },
    519352: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6c79e7f4a3f75383bf9a.svg";
    },
    349745: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a1d461025204711133ec.svg";
    },
    309541: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9f3b9c1b6e5f77294951.svg";
    },
    544484: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d0f62b40a7a6093fb535.svg";
    },
    127067: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7378a83d74ce97d83380.svg";
    },
    226315: function (e, t, n) {
      "use strict";
      e.exports = n.p + "192510ade1abc3149b46.svg";
    },
    228165: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8f0034ae5b3cadea4c2b.svg";
    },
    768074: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b1ac808ae7520fa397f3.svg";
    },
    728963: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7ed159b6acb6da5d9593.svg";
    },
    872364: function (e, t, n) {
      "use strict";
      e.exports = n.p + "5f8406ec0f5055bc7919.svg";
    },
    229372: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a7d6af4279f16c27ae9b.svg";
    },
    231050: function (e, t, n) {
      "use strict";
      e.exports = n.p + "1681fafa511fd53e8bfd.svg";
    },
    190368: function (e, t, n) {
      "use strict";
      e.exports = n.p + "cb94fb6f329e5e31cb5c.svg";
    },
    878005: function (e, t, n) {
      "use strict";
      e.exports = n.p + "ddaba4373c0aabfff967.png";
    },
    853477: function (e, t, n) {
      "use strict";
      e.exports = n.p + "89f38a8716e7d56c17dc.svg";
    },
    755219: function (e, t, n) {
      "use strict";
      e.exports = n.p + "cc5cf9eba79040757e67.svg";
    },
    811837: function (e, t, n) {
      "use strict";
      e.exports = n.p + "1c580ea1dad55a12ecd2.svg";
    },
    32982: function (e, t, n) {
      "use strict";
      e.exports = n.p + "24aa6dce5b2a77b7ca45.svg";
    },
    597226: function (e, t, n) {
      "use strict";
      e.exports = n.p + "bed21bc77023cebd07a7.png";
    },
    99739: function (e, t, n) {
      "use strict";
      e.exports = n.p + "27eb704c7cc53936e0fa.svg";
    },
    761545: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d222b7a1291025c8552b.svg";
    },
    689888: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0e2fad70fad77816b728.svg";
    },
    819074: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a6ecd83d0dec80c3b73d.svg";
    },
    96154: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c6385e608fcdaec54ef4.svg";
    },
    976078: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b2bc10c8c9d44f0ff644.svg";
    },
    742203: function (e, t, n) {
      "use strict";
      e.exports = n.p + "838d4bac7b80d28fd676.svg";
    },
    381e3: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8cd255a58ce1af51e9ef.svg";
    },
    637816: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a2c736476ce092c94a5b.svg";
    },
    637099: function (e, t, n) {
      "use strict";
      e.exports = n.p + "55067ac9356cb0674ad3.svg";
    },
    389902: function (e, t, n) {
      "use strict";
      e.exports = n.p + "dcb57f386a6bf90a27c9.svg";
    },
    321211: function (e, t, n) {
      "use strict";
      e.exports = n.p + "bb0ba69615cae0dd25b7.svg";
    },
    786937: function (e, t, n) {
      "use strict";
      e.exports = n.p + "ecc4859664616ed5ad9a.svg";
    },
    283383: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a3ae1eb336230b986e2b.jpg";
    },
    681388: function (e, t, n) {
      "use strict";
      e.exports = n.p + "352ac6facb491ccbade2.jpg";
    },
    249705: function (e, t, n) {
      "use strict";
      e.exports = n.p + "251f0ec86481f9cab3cf.png";
    },
    886531: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8ab3b66bdb2f6fc70ad6.svg";
    },
    760238: function (e, t, n) {
      "use strict";
      e.exports = n.p + "635eaaafc2a09bc126b9.jpg";
    },
    238554: function (e, t, n) {
      "use strict";
      e.exports = n.p + "77c207ff1096718f1d2b.svg";
    },
    728791: function (e, t, n) {
      "use strict";
      e.exports = n.p + "271a2bcb5d7b4f98b5cb.svg";
    },
    429224: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("872717"),
        a = n("913144"),
        l = n("49111"),
        i = {
          createChannelFollower: (e, t) =>
            s.HTTP.post({
              url: l.Endpoints.CHANNEL_FOLLOWERS(t),
              body: { webhook_channel_id: e },
              oldFormErrors: !0,
            }),
          async fetchChannelFollowerStats(e) {
            a.default.dispatch({ type: "CHANNEL_FOLLOWER_STATS_FETCH_START" });
            try {
              let t = await s.HTTP.get({
                url: l.Endpoints.CHANNEL_FOLLOWER_STATS(e),
                body: { channel_id: e },
                oldFormErrors: !0,
              });
              a.default.dispatch({
                type: "CHANNEL_FOLLOWER_STATS_FETCH_SUCCESS",
                stats: t.body,
                channelId: e,
              });
            } catch (t) {
              a.default.dispatch({
                type: "CHANNEL_FOLLOWER_STATS_FETCH_FAILURE",
                channelId: e,
              });
            }
          },
          dismissPublishBump(e) {
            a.default.dispatch({
              type: "CHANNEL_FOLLOWING_PUBLISH_BUMP_DISMISSED",
              messageId: e,
            });
          },
          permanentlyHidePublishBump(e) {
            a.default.dispatch({
              type: "CHANNEL_FOLLOWING_PUBLISH_BUMP_HIDE_PERMANENTLY",
              channelId: e,
            });
          },
        };
    },
    778323: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          dismiss: function () {
            return a;
          },
        });
      var s = n("913144");
      function a(e) {
        s.default.dispatch({
          type: "DETECTED_OFF_PLATFORM_PREMIUM_PERKS_DISMISS",
          skuId: e,
        });
      }
    },
    427495: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openModal: function () {
            return i;
          },
          closeModal: function () {
            return r;
          },
        });
      var s = n("913144"),
        a = n("521012"),
        l = n("850068");
      async function i(e) {
        return (
          null == a.default.getPremiumSubscription() &&
            (await l.fetchSubscriptions()),
          new Promise((t, n) => {
            s.default.dispatch({
              type: "PREMIUM_REQUIRED_MODAL_OPEN",
              context: e,
              resolve: t,
              reject: n,
            });
          })
        );
      }
      function r(e) {
        s.default.dispatch({
          type: "PREMIUM_REQUIRED_MODAL_CLOSE",
          shouldContinue: e,
        });
      }
    },
    73961: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openPurchaseConfirmationModal: function () {
            return l;
          },
          closePurchaseConfirmationModal: function () {
            return i;
          },
        });
      var s = n("913144"),
        a = n("49111");
      function l(e, t, n) {
        let l =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
        return new Promise((i, r) => {
          s.default.dispatch({
            type: "PURCHASE_CONFIRMATION_MODAL_OPEN",
            applicationId: e,
            skuId: t,
            entitlements: n,
            context: null != l.context ? l.context : a.AppContext.APP,
            analyticsSource: l.analyticsSource,
            resolve: i,
            reject: r,
          });
        });
      }
      function i() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        s.default.dispatch({
          type: "PURCHASE_CONFIRMATION_MODAL_CLOSE",
          error: e,
        });
      }
    },
    950926: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("913144"),
        a = {
          clearRemoteDisconnectVoiceChannelId() {
            s.default.dispatch({
              type: "CLEAR_REMOTE_DISCONNECT_VOICE_CHANNEL_ID",
            });
          },
          clearLastSessionVoiceChannelId() {
            s.default.dispatch({ type: "CLEAR_LAST_SESSION_VOICE_CHANNEL_ID" });
          },
        };
    },
    167359: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var s = n("872717"),
        a = n("913144"),
        l = n("49111");
      let i = "".concat(
          l.STATUS_PAGE_ENDPOINT,
          "/api/v2/scheduled-maintenances"
        ),
        r = "".concat(
          l.STATUS_PAGE_ENDPOINT,
          "/api/v2/incidents/unresolved.json"
        );
      var o = {
        checkIncidents() {
          Promise.all([
            s.HTTP.get("".concat(i, "/active.json")),
            s.HTTP.get(r),
          ]).then(e => {
            let [t, n] = e,
              [s] = t.body.scheduled_maintenances,
              [l] = n.body.incidents;
            a.default.dispatch({
              type: "STATUS_PAGE_INCIDENT",
              incident: l || s,
            });
          });
        },
        checkScheduledMaintenances() {
          s.HTTP.get("".concat(i, "/upcoming.json")).then(e => {
            let [t] = e.body.scheduled_maintenances;
            a.default.dispatch({
              type: "STATUS_PAGE_SCHEDULED_MAINTENANCE",
              maintenance: t,
            });
          });
        },
        ackScheduledMaintenance() {
          a.default.dispatch({ type: "STATUS_PAGE_SCHEDULED_MAINTENANCE_ACK" });
        },
      };
    },
    52289: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var s = n("913144"),
        a = {
          setEnabled(e) {
            this.update({ enabled: e });
          },
          update(e) {
            for (let t of Object.keys(e))
              s.default.dispatch({
                type: "STREAMER_MODE_UPDATE",
                key: t,
                value: e[t],
              });
          },
        };
    },
    518888: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          overrideSurvey: function () {
            return d;
          },
          surveyHide: function () {
            return c;
          },
          surveyFetch: function () {
            return E;
          },
          surveySeen: function () {
            return f;
          },
        });
      var s = n("759843"),
        a = n("627929"),
        l = n("913144"),
        i = n("381684"),
        r = n("599110"),
        o = n("840707"),
        u = n("49111");
      function d(e) {
        l.default.dispatch({ type: "SURVEY_OVERRIDE", id: e });
      }
      function c(e, t) {
        l.default.dispatch({ type: "SURVEY_HIDE", key: e }),
          t
            ? r.default.track(u.AnalyticEvents.APP_NOTICE_CLOSED, {
                notice_type: u.NoticeTypes.SURVEY,
                survey_id: e,
                dismissed: t,
              })
            : r.default.track(u.AnalyticEvents.APP_NOTICE_PRIMARY_CTA_OPENED, {
                notice_type: u.NoticeTypes.SURVEY,
              });
      }
      function E(e, t) {
        var n = {};
        return (
          null != e && (n.survey_override = e),
          null != t && (n.disable_auto_seen = t),
          o.default
            .get({
              url: u.Endpoints.USER_SURVEY,
              query: n,
              trackedActionData: {
                event: s.NetworkActionNames.USER_SURVEY_FETCH,
                properties: e => {
                  var t;
                  let n =
                    null == e
                      ? void 0
                      : null === (t = e.body) || void 0 === t
                        ? void 0
                        : t.survey;
                  return (0, a.exact)({ key: null == n ? void 0 : n.key });
                },
              },
            })
            .then(
              e => {
                var t;
                l.default.dispatch({
                  type: "SURVEY_FETCHED",
                  survey:
                    null == e
                      ? void 0
                      : null === (t = e.body) || void 0 === t
                        ? void 0
                        : t.survey,
                });
              },
              () => {
                l.default.dispatch({ type: "SURVEY_FETCHED", survey: null });
              }
            )
        );
      }
      function f(e) {
        let t = i.default.getLastSeenTimestamp();
        if (
          null === t ||
          (null != t && Date.now() - t >= i.SURVEY_REFETCH_INTERVAL)
        )
          return (
            l.default.dispatch({ type: "SURVEY_SEEN", key: e }),
            o.default.post({
              url: u.Endpoints.USER_SURVEY_SEEN(e),
              trackedActionData: {
                event: s.NetworkActionNames.USER_SURVEY_SEEN,
                properties: t => (0, a.exact)({ key: e }),
              },
            })
          );
      }
    },
    70614: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          authorizeAndSetTestModeApplication: function () {
            return E;
          },
          reset: function () {
            return f;
          },
          resetError: function () {
            return _;
          },
        }),
        n("70102"),
        n("702976");
      var s = n("913144"),
        a = n("550766"),
        l = n("651057"),
        i = n("299285"),
        r = n("653047"),
        o = n("568734"),
        u = n("253981"),
        d = n("568131"),
        c = n("49111");
      async function E(e, t) {
        s.default.dispatch({
          applicationId: e,
          type: "DEVELOPER_TEST_MODE_AUTHORIZATION_START",
        });
        try {
          let n = await (0, a.validateTestMode)(e);
          if (!n) throw Error("Do not have access!");
          let E = i.default.getApplication(e);
          null == E &&
            (E = r.default.createFromServer(
              await l.default.fetchApplication(e)
            ));
          let f = (0, o.hasFlag)(E.flags, c.ApplicationFlags.EMBEDDED);
          if (f && (null == t || !u.default.URL_REGEX.test(t)))
            throw Error("Invalid Origin URL for embedded application");
          return (
            !f && d.createTestModeLibraryApplications(E),
            s.default.dispatch({
              type: "DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS",
              applicationId: e,
              originURL: f ? t : null,
            }),
            E
          );
        } catch (t) {
          return (
            s.default.dispatch({
              type: "DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL",
              applicationId: e,
              error: t.message,
            }),
            null
          );
        }
      }
      function f() {
        s.default.dispatch({ type: "DEVELOPER_TEST_MODE_RESET" });
      }
      function _() {
        s.default.dispatch({ type: "DEVELOPER_TEST_MODE_RESET_ERROR" });
      }
    },
    455555: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          dismissCurrentNotice: function () {
            return eS;
          },
          default: function () {
            return eA;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("866227"),
        i = n.n(l),
        r = n("90915"),
        o = n("446674"),
        u = n("77078"),
        d = n("404118"),
        c = n("437822"),
        E = n("778323"),
        f = n("54239"),
        _ = n("215082"),
        T = n("950926"),
        I = n("987317"),
        m = n("167359"),
        N = n("55620"),
        p = n("52289"),
        S = n("518888"),
        C = n("70614"),
        A = n("79112"),
        h = n("376556"),
        g = n("812204"),
        M = n("685665"),
        O = n("299285"),
        R = n("774146"),
        L = n("10641"),
        v = n("935246"),
        P = n("211470"),
        D = n("789563"),
        x = n("381065"),
        y = n("702873"),
        U = n("840968"),
        j = n("233322"),
        b = n("157186"),
        G = n("747554"),
        B = n("740316"),
        k = n("592407"),
        F = n("977169"),
        w = n("363691"),
        H = n("649844"),
        V = n("983424"),
        Y = n("538620"),
        K = n("425538"),
        W = n("448881"),
        z = n("703537"),
        Q = n("55282"),
        Z = n("42203"),
        J = n("305961"),
        q = n("42887"),
        X = n("945956"),
        $ = n("162771"),
        ee = n("697218"),
        et = n("552712"),
        en = n("167726"),
        es = n("600133"),
        ea = n("145131"),
        el = n("216422"),
        ei = n("489622"),
        er = n("599110"),
        eo = n("701909"),
        eu = n("308757"),
        ed = n("389696"),
        ec = n("650044"),
        eE = n("49111"),
        ef = n("646718"),
        e_ = n("586269"),
        eT = n("353927"),
        eI = n("782340"),
        em = n("231537");
      let eN = () =>
          (0, s.jsxs)(ei.default, {
            color: ei.NoticeColors.DANGER,
            children: [
              (0, s.jsx)(ei.NoticeCloseButton, {
                onClick: () => {
                  eS(), (0, ec.open)();
                },
              }),
              eI.default.Messages.NOTICE_NO_INPUT_DETECTED,
              (0, s.jsx)(ei.NoticeButtonAnchor, {
                href: eo.default.getArticleURL(
                  eE.HelpdeskArticles.NO_INPUT_DETECTED
                ),
                children:
                  eI.default.Messages.NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT,
              }),
            ],
          }),
        ep = () =>
          (0, s.jsxs)(ei.default, {
            color: ei.NoticeColors.DANGER,
            children: [
              (0, s.jsx)(ei.NoticeCloseButton, {
                onClick: () => {
                  eS(), (0, ec.open)();
                },
              }),
              eI.default.Messages.NOTICE_NO_INPUT_DETECTED_SETTINGS,
              (0, s.jsx)(ei.NoticeButton, {
                onClick: () => {
                  (0, f.pushLayer)(eE.Layers.USER_SETTINGS),
                    A.default.setSection(eE.UserSettingsSections.VOICE);
                },
                children:
                  eI.default.Messages
                    .NOTICE_NO_INPUT_DETECTED_SETTINGS_LINK_TEXT,
              }),
            ],
          });
      function eS(e) {
        _.default.dismiss(null != e ? { untilAtLeast: i(e) } : void 0);
      }
      let eC = a.memo(function () {
        var e, t, l;
        let _ = (0, o.useStateFromStores)([ee.default], () =>
            ee.default.getCurrentUser()
          ),
          g = (0, o.useStateFromStores)([$.default], () =>
            $.default.getGuildId()
          ),
          ec = (0, o.useStateFromStores)([es.default], () =>
            es.default.getNotice()
          ),
          eC = (0, o.useStateFromStores)([J.default], () =>
            J.default.getGuild(g)
          ),
          { analyticsLocations: eA } = (0, M.default)(),
          eh = null == ec ? void 0 : ec.type,
          eg = (0, b.useShowMemberVerificationGate)(g);
        a.useEffect(() => {
          null != eh &&
            !(function (e, t) {
              let n = { notice_type: e };
              null != t && (n.guild_id = t),
                er.default.track(eE.AnalyticEvents.APP_NOTICE_VIEWED, n);
            })(eh, g);
        }, [eh, g]),
          a.useEffect(() => {
            if (
              null != ec &&
              ec.type === eE.NoticeTypes.SURVEY &&
              null != ec.metadata
            ) {
              let { metadata: e } = ec,
                t = D.default.getUserExperimentDescriptor(e.id);
              null != t && (0, P.trackExposureToExperiment)(e.id, t);
              let n = async () => {
                var e, t;
                (null === (e = ec.metadata) || void 0 === e ? void 0 : e.id) !=
                  null &&
                  (await (0, S.surveySeen)(
                    null === (t = ec.metadata) || void 0 === t ? void 0 : t.id
                  ));
              };
              n();
            }
          }, [ec]);
        let eM = (function (e) {
          let { enabled: t } = (0, V.default)(
            !0,
            e !== eE.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING
          );
          return t || null == e ? null : es.typeToDismissibleContent[e];
        })(eh);
        if (null == ec) return null;
        if (null != eM)
          return (0, s.jsx)(v.DismissibleContentNotices, {
            dismissibleContent: eM,
            noticeType: ec.type,
          });
        let eO =
          null === (e = ec.metadata) || void 0 === e ? void 0 : e.premiumType;
        switch (ec.type) {
          case eE.NoticeTypes.LURKING_GUILD:
            return (0, s.jsx)(w.default, {});
          case eE.NoticeTypes.PENDING_MEMBER:
            return (0, s.jsx)(G.default, {});
          case eE.NoticeTypes.INVITED_TO_SPEAK:
            return (0, s.jsx)(Q.default, {});
          case eE.NoticeTypes.GUILD_RAID_NOTIFICATION:
            let { dismissUntil: eR } = ec.metadata;
            return (0, s.jsx)(x.default, { onDismiss: () => eS(eR) });
          case eE.NoticeTypes.WIN32_DEPRECATED_MESSAGE:
            let { dismissUntil: eL } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(eL),
                  noticeType: eE.NoticeTypes.WIN32_DEPRECATED_MESSAGE,
                }),
                eI.default.Messages.WINDOWS_32_BIT_DEPRECATED_WARNING.format({
                  helpCenterLink: eo.default.getArticleURL(
                    eE.HelpdeskArticles.WIN32_DEPRECATE
                  ),
                }),
              ],
            });
          case eE.NoticeTypes.WIN7_8_DEPRECATED_MESSAGE:
            let { dismissUntil: ev } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(ev),
                  noticeType: eE.NoticeTypes.WIN7_8_DEPRECATED_MESSAGE,
                }),
                eI.default.Messages.WINDOWS_7_8_DEPRECATED_WARNING.format({
                  helpCenterLink: eo.default.getArticleURL(
                    eE.HelpdeskArticles.WIN7_8_DEPRECATE
                  ),
                }),
              ],
            });
          case eE.NoticeTypes.MACOS_17_18_DEPRECATED_MESSAGE:
            let { dismissUntil: eP } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(eP),
                  noticeType: eE.NoticeTypes.MACOS_17_18_DEPRECATED_MESSAGE,
                }),
                eI.default.Messages.MACOS_DEPRECATED_WARNING.format({
                  helpCenterLink: eo.default.getArticleURL(
                    eE.HelpdeskArticles.MACOS_17_18_DEPRECATE
                  ),
                }),
              ],
            });
          case eE.NoticeTypes.GENERIC:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.GENERIC,
                }),
                ec.message,
                null != ec.buttonText
                  ? (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                      onClick: ec.callback,
                      noticeType: eE.NoticeTypes.GENERIC,
                      children: ec.buttonText,
                    })
                  : null,
              ],
            });
          case eE.NoticeTypes.LAUNCH_GAME_FAILURE:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.LAUNCH_GAME_FAILURE,
                }),
                ec.message,
                null != ec.buttonText
                  ? (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                      onClick: ec.callback,
                      noticeType: eE.NoticeTypes.LAUNCH_GAME_FAILURE,
                      children: ec.buttonText,
                    })
                  : null,
              ],
            });
          case eE.NoticeTypes.VOICE_DISABLED:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => {
                    T.default.clearRemoteDisconnectVoiceChannelId(), eS();
                  },
                  noticeType: eE.NoticeTypes.VOICE_DISABLED,
                }),
                eI.default.Messages.NOTICE_CONNECTION_CONFLICT,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  onClick: () => {
                    let e = X.default.getRemoteDisconnectVoiceChannelId();
                    if (null != e) {
                      let t = Z.default.getChannel(e);
                      null != t && I.default.selectVoiceChannel(e);
                    }
                  },
                  noticeType: eE.NoticeTypes.VOICE_DISABLED,
                  children: eI.default.Messages.RECONNECT,
                }),
              ],
            });
          case eE.NoticeTypes.VOICE_CONNECTED_LAST_SESSION:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => {
                    T.default.clearLastSessionVoiceChannelId(), eS();
                  },
                  noticeType: eE.NoticeTypes.VOICE_CONNECTED_LAST_SESSION,
                }),
                eI.default.Messages.NOTICE_VOICE_CONNECTED_LAST_SESSION,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  onClick: () => {
                    let e = X.default.getLastSessionVoiceChannelId();
                    if (null != e) {
                      let t = Z.default.getChannel(e);
                      null != t && I.default.selectVoiceChannel(e);
                    }
                  },
                  noticeType: eE.NoticeTypes.VOICE_CONNECTED_LAST_SESSION,
                  children: eI.default.Messages.RECONNECT,
                }),
              ],
            });
          case eE.NoticeTypes.SPOTIFY_AUTO_PAUSED:
            let eD = h.default.get(eE.PlatformTypes.SPOTIFY);
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.SPOTIFY_AUTO_PAUSED,
                }),
                (0, s.jsx)("img", {
                  alt: "",
                  className: em.platformIcon,
                  src: eD.icon.whiteSVG,
                }),
                eI.default.Messages.NOTICE_SPOTIFY_AUTO_PAUSED,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  onClick: () => A.default.open(eE.UserSettingsSections.VOICE),
                  noticeType: eE.NoticeTypes.SPOTIFY_AUTO_PAUSED,
                  children: eI.default.Messages.VOICE_SETTINGS,
                }),
                (0, s.jsx)(u.Anchor, {
                  className: em.textLinkSmall,
                  href: eo.default.getArticleURL(
                    eE.HelpdeskArticles.SPOTIFY_AUTO_PAUSED
                  ),
                  target: "_blank",
                  children: eI.default.Messages.NOTICE_WHATS_THIS,
                }),
              ],
            });
          case eE.NoticeTypes.UNCLAIMED_ACCOUNT:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                eI.default.Messages.NOTICE_UNCLAIMED_ACCOUNT,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.UNCLAIMED_ACCOUNT,
                  onClick: () =>
                    eg && null != g
                      ? (0, j.openMemberVerificationModal)(g)
                      : R.openClaimAccountModal(),
                  children: eI.default.Messages.CLAIM_ACCOUNT,
                }),
              ],
            });
          case eE.NoticeTypes.UNVERIFIED_ACCOUNT:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                eI.default.Messages.NOTICE_UNVERIFIED_ACCOUNT_UU,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.UNVERIFIED_ACCOUNT,
                  onClick: () => {
                    c.default.verifyResend(),
                      d.default.show({
                        title: eI.default.Messages.VERIFICATION_EMAIL_TITLE,
                        body: eI.default.Messages.VERIFICATION_EMAIL_BODY.format(
                          { email: null == _ ? void 0 : _.email }
                        ),
                        secondaryConfirmText: eI.default.Messages.CHANGE_EMAIL,
                        onConfirmSecondary: R.openClaimAccountModal,
                      });
                  },
                  children: eI.default.Messages.RESEND_EMAIL_SHORT,
                }),
              ],
            });
          case eE.NoticeTypes.SCHEDULED_MAINTENANCE:
            if (null == ec.metadata) return null;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => m.default.ackScheduledMaintenance(),
                  noticeType: eE.NoticeTypes.SCHEDULED_MAINTENANCE,
                }),
                eI.default.Messages.NOTICE_SCHEDULED_MAINTENANCE.format(
                  ec.metadata
                ),
                (0, s.jsx)(ei.NoticeButtonAnchor, {
                  href: ""
                    .concat(eE.Links.STATUS, "/incidents/")
                    .concat(ec.metadata.id),
                  children: eI.default.Messages.LEARN_MORE,
                }),
              ],
            });
          case eE.NoticeTypes.NO_INPUT_DETECTED:
            if (!q.default.supports(eT.Features.LOOPBACK))
              return (0, s.jsx)(eN, {});
            return (0, s.jsx)(ep, {});
          case eE.NoticeTypes.HARDWARE_MUTE:
            if (null == ec.metadata) return null;
            let { vendor: ex, model: ey } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                eI.default.Messages.NOTICE_HARDWARE_MUTE.format({
                  vendorName: ex.name,
                  modelName: ey.name,
                }),
                (0, s.jsx)(ei.NoticeButtonAnchor, {
                  href: ey.url,
                  target: "_blank",
                  rel: "noreferrer noopener",
                  children: eI.default.Messages.SUPPORT,
                }),
              ],
            });
          case eE.NoticeTypes.STREAMER_MODE:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.STREAMER_MODE,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.STREAMER_MODE,
                }),
                eI.default.Messages.NOTICE_STREAMER_MODE_TEXT,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  onClick: () => p.default.setEnabled(!1),
                  noticeType: eE.NoticeTypes.STREAMER_MODE,
                  children: eI.default.Messages.DISABLE,
                }),
              ],
            });
          case eE.NoticeTypes.H264_DISABLED:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => {
                    eS();
                  },
                }),
                eI.default.Messages.NOTICE_H264_DISABLED_SETTINGS,
                (0, s.jsx)(ei.NoticeButton, {
                  onClick: () => {
                    (0, f.pushLayer)(eE.Layers.USER_SETTINGS),
                      A.default.setSection(eE.UserSettingsSections.VOICE);
                  },
                  children:
                    eI.default.Messages.NOTICE_H264_DISABLED_SETTINGS_LINK_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK:
            if (null == ec.metadata) return null;
            let { skuId: eU, applicationId: ej } = ec.metadata,
              eb = et.default.get(eU),
              eG = O.default.getApplication(ej);
            if (null == eb || null == eG) return null;
            let eB = { page: eE.AnalyticsPages.IN_APP };
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.PREMIUM_TIER_1,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => E.dismiss(eb.id),
                  noticeType: eE.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK,
                }),
                (0, s.jsx)(el.default, { className: em.premiumIcon }),
                eI.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_MESSAGE.format(
                  { applicationName: eG.name, skuName: eb.name }
                ),
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK,
                  onClick: () =>
                    (0, eu.openIAPPurchaseModal)({
                      applicationId: eG.id,
                      skuId: eb.id,
                      openPremiumPaymentModal: () => {
                        (0, H.default)({
                          initialPlanId: null,
                          subscriptionTier: ef.PremiumSubscriptionSKUs.TIER_2,
                          analyticsLocations: eA,
                          analyticsObject: eB,
                        });
                      },
                      analyticsLocations: eA,
                      analyticsLocationObject: eB,
                      context: __OVERLAY__
                        ? eE.AppContext.OVERLAY
                        : eE.AppContext.APP,
                    }).then(() => E.dismiss(eb.id)),
                  children:
                    eI.default.Messages
                      .NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_BUTTON,
                }),
              ],
            });
          case eE.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL: {
            if (null == ec.metadata) return null;
            let { skuId: e, applicationId: t } = ec.metadata,
              n = et.default.get(e),
              a = O.default.getApplication(t);
            if (null == n || null == a) return null;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.PREMIUM_TIER_1,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType:
                    eE.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL,
                }),
                (0, s.jsx)(el.default, { className: em.premiumIcon }),
                eI.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_NO_PREMIUM_PERK_MESSAGE.format(
                  { applicationName: a.name, skuName: n.name }
                ),
                (0, s.jsx)(ei.NoticeButton, {
                  children: (0, s.jsx)(r.Link, {
                    onClick: () => eS(),
                    to: {
                      pathname: eE.Routes.APPLICATION_STORE_LISTING_SKU(n.id),
                      state: { scrollRestoration: !1 },
                    },
                    children: eI.default.Messages.LEARN_MORE,
                  }),
                }),
              ],
            });
          }
          case eE.NoticeTypes.SURVEY: {
            let e = ec.metadata;
            if (null == e) return null;
            let { key: t, prompt: n, cta: a, url: l } = e;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.CUSTOM,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.SURVEY,
                  onClick: () => {
                    (0, S.surveyHide)(t, !0);
                  },
                }),
                n,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.SURVEY,
                  onClick: () => {
                    window.open(l, "_blank"), (0, S.surveyHide)(t, !1);
                  },
                  children: a,
                }),
              ],
            });
          }
          case eE.NoticeTypes.SERVER_USAGE_SURVEY:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.CUSTOM,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.SERVER_USAGE_SURVEY,
                  onClick: () => {
                    eS();
                  },
                }),
                eI.default.Messages.SERVER_USAGE_SURVEY_BODY.format({
                  guildName:
                    null !== (t = null == eC ? void 0 : eC.name) && void 0 !== t
                      ? t
                      : "this server",
                }),
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.SERVER_USAGE_SURVEY,
                  onClick: () => {
                    window.open(
                      "https://discord.sjc1.qualtrics.com/jfe/form/SV_9AHPmGasQ0EvpdQ?user_id="
                        .concat(null == _ ? void 0 : _.id, "&guild_id=")
                        .concat(null == eC ? void 0 : eC.id),
                      "_blank"
                    ),
                      eS();
                  },
                  additionalTrackingProps: {
                    guild_id: null == eC ? void 0 : eC.id,
                  },
                  children: eI.default.Messages.SERVER_USAGE_SURVEY_CTA,
                }),
              ],
            });
          case eE.NoticeTypes.CORRUPT_INSTALLATION:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                eI.default.Messages.NOTICE_CORRUPT_INSTALLATION,
                (0, s.jsx)(ei.NoticeButtonAnchor, {
                  href: eo.default.getArticleURL(
                    eE.HelpdeskArticles.CORRUPT_INSTALLATION
                  ),
                  target: "_blank",
                  children:
                    eI.default.Messages
                      .NOTICE_CORRUPT_INSTALLATION_HELP_LINK_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
                }),
                eI.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
                  onClick: () => {
                    (0, u.openModalLazy)(async () => {
                      let { default: e } = await n
                        .el("649486")
                        .then(n.bind(n, "649486"));
                      return t =>
                        (0, s.jsx)(e, {
                          source: "Video unsupported browser",
                          ...t,
                        });
                    });
                  },
                  children: eI.default.Messages.DOWNLOAD,
                }),
              ],
            });
          case eE.NoticeTypes.DISPATCH_ERROR:
            if (null == ec.metadata) return null;
            let { error: ek } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.DISPATCH_ERROR,
                }),
                null == ek ? void 0 : ek.displayMessage,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.DISPATCH_ERROR,
                  onClick: () =>
                    (0, u.openModalLazy)(async () => {
                      let { default: e } = await n
                        .el("563912")
                        .then(n.bind(n, "563912"));
                      return t => (0, s.jsx)(e, { ...t });
                    }),
                  children: eI.default.Messages.LEARN_MORE,
                }),
              ],
            });
          case eE.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS:
            if (null == ec.metadata) return null;
            let { progress: eF, total: ew, name: eH } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS,
                }),
                (0, s.jsxs)(ea.default, {
                  justify: ea.default.Justify.CENTER,
                  children: [
                    null != eH
                      ? eI.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS_WITH_NAME.format(
                          {
                            name: "".concat(eH),
                            progress: "".concat(eF),
                            total: "".concat(ew),
                          }
                        )
                      : eI.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS.format(
                          { progress: "".concat(eF), total: "".concat(ew) }
                        ),
                    (0, s.jsx)(u.Spinner, {
                      type: u.Spinner.Type.PULSING_ELLIPSIS,
                      className: em.ellipsis,
                    }),
                  ],
                }),
              ],
            });
          case eE.NoticeTypes.APPLICATION_TEST_MODE:
            if (null == ec.metadata) return null;
            if (null != en.default.testModeEmbeddedApplicationId)
              return (0, s.jsx)(ei.default, {
                color: ei.NoticeColors.WARNING,
                children: (0, s.jsxs)(ea.default, {
                  justify: ea.default.Justify.CENTER,
                  align: ea.default.Align.CENTER,
                  children: [
                    (0, s.jsx)("div", {
                      children:
                        eI.default.Messages.NOTICE_EMBEDDED_APPLICATION_TEST_MODE.format(
                          { applicationName: ec.metadata.applicationName }
                        ),
                    }),
                    (0, s.jsx)(ei.NoticeCloseButton, {
                      onClick: C.reset,
                      noticeType: eE.NoticeTypes.APPLICATION_TEST_MODE,
                    }),
                  ],
                }),
              });
            return (0, s.jsx)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: (0, s.jsxs)(ea.default, {
                justify: ea.default.Justify.CENTER,
                align: ea.default.Align.CENTER,
                children: [
                  (0, s.jsx)("div", {
                    children:
                      eI.default.Messages.NOTICE_APPLICATION_TEST_MODE.format({
                        applicationName: ec.metadata.applicationName,
                      }),
                  }),
                  (0, s.jsx)(ed.default, {
                    dropdownSize: ed.TestModeSKUButtonEnums.DropdownSizes.SMALL,
                    className: em.testModeSKUSelector,
                    color: ed.TestModeSKUButtonEnums.Colors.WHITE,
                    look: ed.TestModeSKUButtonEnums.Looks.OUTLINED,
                    size: ed.TestModeSKUButtonEnums.Sizes.MIN,
                    onSKUSelect: e =>
                      N.goToSKUStoreListing(e.id, {
                        analyticsSource: {
                          page: null,
                          section: eE.AnalyticsSections.NOTIFICATION_BAR,
                          object: eE.AnalyticsObjects.NAVIGATION_LINK,
                        },
                      }),
                    applicationId: ec.metadata.applicationId,
                    children:
                      eI.default.Messages
                        .NOTICE_APPLICATION_TEST_MODE_GO_TO_LISTING,
                  }),
                  (0, s.jsx)(ei.NoticeCloseButton, {
                    onClick: C.reset,
                    noticeType: eE.NoticeTypes.APPLICATION_TEST_MODE,
                  }),
                ],
              }),
            });
          case eE.NoticeTypes.OUTBOUND_PROMOTION:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.PREMIUM_TIER_2,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.OUTBOUND_PROMOTION,
                  onClick: () => {
                    Y.default.dismissOutboundPromotionNotice();
                  },
                }),
                (0, s.jsx)(el.default, { className: em.premiumIcon }),
                eI.default.Messages.OUTBOUND_PROMOTION_NOTICE,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.OUTBOUND_PROMOTION,
                  onClick: () => {
                    er.default.track(
                      eE.AnalyticEvents.OUTBOUND_PROMOTION_NOTICE_CLICKED
                    ),
                      A.default.open(eE.UserSettingsSections.INVENTORY),
                      Y.default.dismissOutboundPromotionNotice();
                  },
                  children: eI.default.Messages.TAKE_ME_THERE,
                }),
              ],
            });
          case eE.NoticeTypes.VIEWING_ROLES:
            return (0, s.jsx)(F.default, {});
          case eE.NoticeTypes.PREMIUM_UNCANCEL:
            return (0, s.jsxs)(ei.default, {
              color:
                eO === ef.PremiumTypes.TIER_1
                  ? ei.NoticeColors.PREMIUM_TIER_1
                  : eO === ef.PremiumTypes.TIER_0
                    ? ei.NoticeColors.PREMIUM_TIER_0
                    : ei.NoticeColors.PREMIUM_TIER_2,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_UNCANCEL,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    );
                  },
                }),
                (0, s.jsx)(el.default, { className: em.premiumIcon }),
                eO === ef.PremiumTypes.TIER_1
                  ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_TEXT.format(
                      { daysLeft: ec.metadata.daysLeft }
                    )
                  : eO === ef.PremiumTypes.TIER_0
                    ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_TEXT.format(
                        { daysLeft: ec.metadata.daysLeft }
                      )
                    : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_NOTICE_TEXT.format(
                        { daysLeft: ec.metadata.daysLeft }
                      ),
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_UNCANCEL,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    ),
                      (0, u.openModalLazy)(async () => {
                        let { default: e } = await n
                          .el("67323")
                          .then(n.bind(n, "67323"));
                        return t =>
                          (0, s.jsx)(e, {
                            ...t,
                            daysLeft: ec.metadata.daysLeft,
                            premiumType: eO,
                            analyticsSource: "Nag Bar",
                            premiumSubscription:
                              ec.metadata.premiumSubscription,
                          });
                      });
                  },
                  children:
                    eO === ef.PremiumTypes.TIER_1
                      ? eI.default.Messages
                          .PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_BUTTON_TEXT
                      : eO === ef.PremiumTypes.TIER_0
                        ? eI.default.Messages
                            .PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_BUTTON_TEXT
                        : eI.default.Messages
                            .PREMIUM_SUBSCRIPTION_ENDING_NOTICE_BUTTON_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT:
            let { daysPastDue: eV, dismissUntil: eY } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eh,
                  onClick: () => {
                    eS(eY);
                  },
                }),
                eI.default.Messages.PREMIUM_SUBSCRIPTION_ONE_TIME_PAYMENT_PAST_DUE_SUBSCRIPTION_TEXT_NO_ACTION.format(
                  { daysPastDue: eV }
                ),
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT,
                  onClick: () => {
                    eS(eY),
                      A.default.open(eE.UserSettingsSections.SUBSCRIPTIONS);
                  },
                  children:
                    eI.default.Messages
                      .PREMIUM_SUBSCRIPTION_PAST_DUE_RENEW_NOW_BUTTON_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    );
                  },
                }),
                eI.default.Messages
                  .PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_TEXT,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    ),
                      A.default.open(eE.UserSettingsSections.SUBSCRIPTIONS);
                  },
                  children:
                    eI.default.Messages
                      .PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_BUTTON_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    );
                  },
                }),
                eI.default.Messages
                  .PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_TEXT,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    ),
                      A.default.open(eE.UserSettingsSections.SUBSCRIPTIONS);
                  },
                  children:
                    eI.default.Messages
                      .PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_BUTTON_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.PREMIUM_MISSING_PAYMENT:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    );
                  },
                }),
                eO === ef.PremiumTypes.TIER_1
                  ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_TEXT.format(
                      { daysLeft: ec.metadata.daysLeft }
                    )
                  : eO === ef.PremiumTypes.TIER_0
                    ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_TEXT.format(
                        { daysLeft: ec.metadata.daysLeft }
                      )
                    : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_TEXT.format(
                        { daysLeft: ec.metadata.daysLeft }
                      ),
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                  onClick: () => {
                    var e, t;
                    eS(
                      null === (t = ec.metadata) || void 0 === t
                        ? void 0
                        : null === (e = t.premiumSubscription) || void 0 === e
                          ? void 0
                          : e.currentPeriodEnd
                    ),
                      A.default.open(eE.UserSettingsSections.SUBSCRIPTIONS);
                  },
                  children:
                    eO === ef.PremiumTypes.TIER_1
                      ? eI.default.Messages
                          .PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_BUTTON_TEXT
                      : eO === ef.PremiumTypes.TIER_0
                        ? eI.default.Messages
                            .PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_BUTTON_TEXT
                        : eI.default.Messages
                            .PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_BUTTON_TEXT,
                }),
              ],
            });
          case eE.NoticeTypes.BACK_TO_PREVIOUS_SCREEN:
            return (0, s.jsx)(B.BackToPreviousScreenNotice, {
              buttonText:
                null !== (l = ec.buttonText) && void 0 !== l
                  ? l
                  : eI.default.Messages.GO_BACK,
              onGoBack: ec.callback,
              onDismiss: () => eS(),
              showCloseButton: !0,
            });
          case eE.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE: {
            let e = { page: eE.AnalyticsPages.IN_APP };
            return (0, s.jsx)(U.default, {
              guildId: g,
              analyticsLocations: eA,
              analyticsLocation: e,
            });
          }
          case eE.NoticeTypes.QUARANTINED:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.CUSTOM,
              className: em.quarantineNotice,
              children: [
                eI.default.Messages.LIMITED_ACCESS_NAG_BAR_NOTICE,
                (0, s.jsx)(ei.NoticeButtonAnchor, {
                  href: e_.QUARANTINE_APPEAL_LINK,
                  target: "_blank",
                  children: eI.default.Messages.LIMITED_ACCESS_NAG_BAR_APPEAL,
                }),
                (0, s.jsx)(u.Anchor, {
                  href: eo.default.getArticleURL(
                    eE.HelpdeskArticles.QUARANTINE
                  ),
                  target: "_blank",
                  className: em.quarantineLearnMoreLink,
                  children: eI.default.Messages.LEARN_MORE,
                }),
              ],
            });
          case eE.NoticeTypes.BLOCKED_BY_PROXY:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                eI.default.Messages.BLOCKED_BY_PROXY_NOTICE,
                (0, s.jsx)(ei.NoticeButtonAnchor, {
                  href: "".concat(eE.Links.STATUS),
                  children: eI.default.Messages.LEARN_MORE,
                }),
                (0, s.jsx)(ei.NoticeCloseButton, {
                  onClick: () => eS(),
                  noticeType: eE.NoticeTypes.BLOCKED_BY_PROXY,
                }),
              ],
            });
          case eE.NoticeTypes.DROPS_PROGRESS_INTERRUPTION:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                eI.default.Messages.DROPS_PROGRESS_INTERRUPTION_WARNING.format({
                  gameTitle: ec.metadata.gameTitle,
                }),
                (0, s.jsx)(ei.NoticeButton, {
                  onClick: ec.metadata.reloadCallback,
                  children: eI.default.Messages.ERRORS_RESTART_APP,
                }),
              ],
            });
          case eE.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION:
            let { dismissUntil: eK, decisionId: eW } = ec.metadata;
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.WARNING,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType:
                    eE.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION,
                  onClick: () => {
                    null != g && (0, y.clearMentionRaidDetected)(g), eS(eK);
                  },
                }),
                eI.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_MESSAGE,
                (0, s.jsx)(ei.NoticeButton, {
                  onClick: () => {
                    null != g &&
                      (0, y.removeMentionRaidRestrictionWithFeedback)(
                        g,
                        eW,
                        () => {
                          eS(eK), (0, y.clearMentionRaidDetected)(g);
                        }
                      );
                  },
                  children:
                    eI.default.Messages
                      .GUILD_AUTOMOD_MENTION_SPAM_NOTICE_REMOVE_RESTRICTION,
                }),
                null != g
                  ? (0, s.jsx)(ei.NoticeButton, {
                      onClick: () =>
                        k.default.open(
                          g,
                          eE.GuildSettingsSections.GUILD_AUTOMOD,
                          void 0,
                          eE.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM
                        ),
                      children:
                        eI.default.Messages
                          .GUILD_AUTOMOD_MENTION_SPAM_NOTICE_CONFIGURE_SETTINGS,
                    })
                  : null,
              ],
            });
          case eE.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.BRAND,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                  onClick: () => {
                    z.markNoticeDismissed(), eS();
                  },
                }),
                eI.default.Messages.SAFETY_USER_SENTIMENT_NOTICE,
                (0, s.jsx)(ei.PrimaryCTANoticeButton, {
                  noticeType: eE.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                  onClick: () => {
                    (0, u.openModalLazy)(async () => {
                      let { default: e } = await n
                        .el("123592")
                        .then(n.bind(n, "123592"));
                      return t => (0, s.jsx)(e, { ...t });
                    }),
                      z.markNoticeDismissed(),
                      eS();
                  },
                  children:
                    eI.default.Messages.SAFETY_USER_SENTIMENT_NOTICE_CTA,
                }),
              ],
            });
          case eE.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING:
            let ez = i().add(5, "days").toDate();
            return (0, s.jsx)(K.default, {
              dismissCurrentNotice: () => {
                (0, L.markDismissibleContentAsDismissed)(
                  es.typeToDismissibleContent[
                    eE.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING
                  ]
                ),
                  eS(ez);
              },
              subscriptionTier: ef.PremiumSubscriptionSKUs.TIER_2,
            });
          case eE.NoticeTypes.QUESTS_PROGRESS_INTERRUPTION:
            return (0, s.jsxs)(ei.default, {
              color: ei.NoticeColors.DANGER,
              children: [
                (0, s.jsx)(ei.NoticeCloseButton, {
                  noticeType: eE.NoticeTypes.QUESTS_PROGRESS_INTERRUPTION,
                  onClick: () => {
                    var e;
                    (null === (e = ec.metadata) || void 0 === e
                      ? void 0
                      : e.streamKey) != null &&
                      (0, W.dismissProgressTrackingFailureNotice)(
                        ec.metadata.streamKey
                      );
                  },
                }),
                eI.default.Messages.QUESTS_PROGRESS_TRACKING_FAILURE_NOTICE,
              ],
            });
          default:
            return null;
        }
      });
      function eA() {
        let { analyticsLocations: e } = (0, M.default)(g.default.NOTICE);
        return (0, s.jsx)(M.AnalyticsLocationProvider, {
          value: e,
          children: (0, s.jsx)(eC, {}),
        });
      }
    },
    803816: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return k;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("260365"),
        o = n("823411"),
        u = n("968194"),
        d = n("658457"),
        c = n("286509"),
        E = n("676223"),
        f = n("407908"),
        _ = n("649486"),
        T = n("860285"),
        I = n("769791"),
        m = n("662285"),
        N = n("866253"),
        p = n("981601"),
        S = n("671071"),
        C = n("766274"),
        A = n("86878"),
        h = n("925758"),
        g = n("26989"),
        M = n("686470"),
        O = n("52028"),
        R = n("697218"),
        L = n("953998"),
        v = n("535974"),
        P = n("763237"),
        D = n("315102"),
        x = n("773336"),
        y = n("602043"),
        U = n("901582"),
        j = n("49111"),
        b = n("954016");
      let G = { spotify: "Spotify" };
      class B extends a.PureComponent {
        getCoverImage() {
          let {
            activity: e,
            connectedApplication: t,
            application: n,
            isPreview: s,
            message: a,
          } = this.props;
          if (null != n && (s || (null != a && (0, E.default)(e, a, n.id)))) {
            let t = (0, c.default)(e, n.id);
            if (null != t) return t;
          }
          return null == n || n instanceof S.default
            ? null
            : D.default.getApplicationIconURL({
                id: n.id,
                icon: null != t ? t.coverImage : n.coverImage,
                size: b.ACTIVITY_INVITE_COVER_IMAGE_SIZE,
              });
        }
        handleOpenSpotifyTrack(e) {
          (0, I.openTrack)(e);
        }
        handleOpenSpotifyArtist(e, t, n) {
          (0, I.openArtist)(e, t, n);
        }
        handleOpenSpotifyAlbum(e, t) {
          (0, I.openAlbum)(e, t);
        }
        shouldRenderCustomButton() {
          let { isLaunchable: e, application: t } = this.props;
          return (
            null != t && null != t.primarySkuId && !e && x.isPlatformEmbedded
          );
        }
        render() {
          return (0, s.jsx)(U.default, {
            section: U.default.Sections.APPLICATION_EMBED,
            children: this.renderEmbed(),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { sending: !1 }),
            (this.handleJoin = () => {
              let {
                activity: e,
                analyticsLocations: t,
                userId: n,
                message: s,
                channelId: a,
              } = this.props;
              if (
                null != e &&
                null != n &&
                null != s &&
                null != e.session_id &&
                null != e.application_id
              ) {
                var l;
                o.default.join({
                  userId: n,
                  sessionId: e.session_id,
                  applicationId: e.application_id,
                  channelId: a,
                  messageId: s.id,
                }),
                  (0, f.default)({
                    type: j.AnalyticsGameOpenTypes.JOIN,
                    source: j.AnalyticsLocations.MESSAGE_EMBED,
                    userId: n,
                    applicationId: e.application_id,
                    partyId:
                      null === (l = e.party) || void 0 === l ? void 0 : l.id,
                    messageId: s.id,
                    analyticsLocations: t,
                  });
              }
            }),
            (this.handleInvite = async () => {
              let { activity: e, channelId: t } = this.props;
              if (null != e && null != t)
                try {
                  this.setState({ sending: !0 }),
                    await r.default.sendActivityInvite({
                      type: j.ActivityActionTypes.JOIN,
                      channelId: t,
                      activity: e,
                      location: j.AnalyticsLocations.MESSAGE_EMBED,
                    });
                } finally {
                  this.setState({ sending: !1 });
                }
            }),
            (this.handleSync = () => {
              let { activity: e, userId: t } = this.props;
              null != e && null != t && u.sync(e, t);
            }),
            (this.handleDownloadApp = () => {
              (0, i.openModal)(e =>
                (0, s.jsx)(_.default, { source: "Game Invite", ...e })
              );
            }),
            (this.renderUserPopout = (e, t) => {
              let {
                channelId: n,
                guildId: a,
                message: l,
                analyticsLocations: i,
              } = this.props;
              return null == n
                ? null
                : (0, s.jsx)(p.default, {
                    ...t,
                    userId: e.id,
                    guildId: null != a ? a : void 0,
                    channelId: n,
                    messageId: null == l ? void 0 : l.id,
                    newAnalyticsLocations: i,
                  });
            }),
            (this.renderSpotifyJoinButton = e => {
              let { channelId: t, guildId: n } = this.props;
              return (0, s.jsx)(N.default, {
                guildId: null != n ? n : void 0,
                channelId: t,
                source: "Invite Embed",
                ...e,
              });
            }),
            (this.renderCustomButton = e => {
              let { application: t } = this.props;
              return (0, s.jsx)(d.default, {
                ...e,
                source: j.AnalyticsLocations.MESSAGE_EMBED,
                application: t,
              });
            }),
            (this.renderEmbed = () => {
              let e;
              let {
                activity: t,
                partyId: n,
                myPartyId: a,
                application: l,
                partyMembers: i,
                isPreview: r,
                isLaunching: o,
                isSender: u,
                activityActionType: d,
                className: c,
                channelId: E,
                message: f,
                hideParty: _,
                isSyncable: T,
                isLaunchable: I,
                guildId: m,
              } = this.props;
              if (null != l) e = l.name;
              else if (null != n) {
                let [t] = n.split(":");
                e = G[t];
              }
              return (0, s.jsx)(P.default, {
                activity: t,
                partyId: n,
                myPartyId: a,
                applicationId: null != l ? l.id : null,
                name: e,
                partyMembers: i,
                className: c,
                coverImage: this.getCoverImage(),
                isPreview: r,
                isGameLaunchable: I,
                isLoading: o || this.state.sending,
                activityActionType: d,
                isInBrowser: !x.isPlatformEmbedded,
                isSyncable: T,
                isSender: u,
                channelId: E,
                guildId: null != m ? m : void 0,
                message: f,
                hideParty: _,
                onJoin: this.handleJoin,
                onInvite: this.handleInvite,
                onSync: this.handleSync,
                onDownloadApp: this.handleDownloadApp,
                onOpenSpotifyTrack: this.handleOpenSpotifyTrack,
                onOpenSpotifyArtist: this.handleOpenSpotifyArtist,
                onOpenSpotifyAlbum: this.handleOpenSpotifyAlbum,
                renderUserPopout: this.renderUserPopout,
                renderSpotifyJoinButton: this.renderSpotifyJoinButton,
                renderCustomButton: this.shouldRenderCustomButton()
                  ? this.renderCustomButton
                  : null,
              });
            });
        }
      }
      B.defaultProps = { isPreview: !1 };
      var k = l.default.connectStores(
        [
          m.default,
          h.default,
          O.default,
          M.default,
          T.default,
          v.default,
          A.default,
          L.default,
          R.default,
          g.default,
        ],
        e => {
          let {
              activity: t,
              analyticsLocations: n,
              application: s,
              partyId: a,
              userId: l,
              guildId: i,
            } = e,
            { id: r } = null != s ? s : {},
            o =
              null != t && null != t.party && t.party.id === a
                ? h.default.getParty(t.party.id)
                : null,
            u =
              null != r
                ? O.default.getApplicationActivity(r)
                : O.default.findActivity(
                    e => e.type === j.ActivityTypes.LISTENING
                  ),
            d = !1;
          null != r &&
            (d =
              L.default.getState(r, j.ActivityActionTypes.JOIN) ===
              j.ActivityActionStates.LOADING);
          let c = Array.from(null != o ? o : []).map(e => {
              let t = null != i ? g.default.getMember(i, e) : null,
                n = null != t ? t.nick : null,
                s = R.default.getUser(e),
                a = null == s;
              return (
                null == s && (s = new C.default({ discriminator: "0005" })),
                { user: s, unknownUser: a, nick: n }
              );
            }),
            E = null != t && m.default.canPlay(t),
            f = m.default.getSyncingWith(),
            _ = null != f && null != l && f.userId === l;
          return {
            analyticsLocations: n,
            partyMembers: c,
            connectedApplication:
              null != r ? A.default.getApplication(r) : null,
            myPartyId: null != u && null != u.party ? u.party.id : null,
            isLaunching: d,
            isSyncable: E && !_,
            isLaunchable:
              null != r &&
              (0, y.isLaunchable)({
                LibraryApplicationStore: M.default,
                LaunchableGameStore: T.default,
                DispatchApplicationStore: v.default,
                ConnectedAppsStore: A.default,
                applicationId: r,
              }),
          };
        }
      )(B);
    },
    658457: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("77078"),
        i = n("686470"),
        r = n("552712"),
        o = n("964889"),
        u = n("790219"),
        d = n("159467"),
        c = n("827825");
      function E(e) {
        let {
            application: t,
            fullWidth: n = !1,
            size: E = l.Button.Sizes.LARGE,
            color: f,
            customDisabledColor: _,
            hideNotLaunchable: T,
            tooltipPosition: I,
            onClick: m,
            className: N,
            source: p,
            storeListingAnalyticsProperties: S,
            pauseAnimation: C,
            hover: A,
            innerClassName: h,
          } = e,
          g = {
            fullWidth: n,
            size: E,
            color: f,
            customDisabledColor: _,
            tooltipPosition: I,
            onClick: m,
            className: N,
            hover: A,
            innerClassName: h,
          },
          M = (0, a.useStateFromStores)([i.default], () =>
            i.default.getActiveLibraryApplication(t.id)
          ),
          O = null != M ? M.sku.id : null,
          R = null != O ? O : t.primarySkuId,
          L = (0, a.useStateFromStores)(
            [r.default],
            () => null != R && !r.default.didFetchingSkuFail(R)
          );
        return null != M && (0, o.isUserEntitledToLibraryApplication)(M)
          ? (0, s.jsx)(c.default, { ...g, libraryApplication: M, source: p })
          : L
            ? (0, s.jsx)(u.default, {
                ...g,
                skuId: null != M ? M.sku.id : null,
                applicationId: t.id,
                pauseAnimation: C,
                storeListingAnalyticsProperties: S,
              })
            : (0, s.jsx)(d.default, {
                ...g,
                hideNotLaunchable: T,
                applicationId: t.id,
              });
      }
    },
    790219: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return B;
          },
        }),
        n("702976"),
        n("222007"),
        n("70102");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("730290"),
        o = n("446674"),
        u = n("77078"),
        d = n("404118"),
        c = n("73961"),
        E = n("465527"),
        f = n("55620"),
        _ = n("79112"),
        T = n("308757"),
        I = n("997289"),
        m = n("84460"),
        N = n("299285"),
        p = n("661579"),
        S = n("393414"),
        C = n("915639"),
        A = n("697218"),
        h = n("437712"),
        g = n("622839"),
        M = n("552712"),
        O = n("167726"),
        R = n("471671"),
        L = n("181114"),
        v = n("216422"),
        P = n("599110"),
        D = n("568734"),
        x = n("719923"),
        y = n("882941"),
        U = n("49111"),
        j = n("782340"),
        b = n("683372");
      class G extends a.Component {
        get analyticsLocation() {
          let { storeListingAnalyticsProperties: e, asGift: t } = this.props,
            n = null != e ? e.promotionId : null;
          return {
            ...this.props.analyticsContext.location,
            object: U.AnalyticsObjects.BUTTON_CTA,
            objectType: t
              ? U.AnalyticsObjectTypes.GIFT
              : U.AnalyticsObjectTypes.BUY,
            promotionId: n,
          };
        }
        get hover() {
          let { hover: e, color: t } = this.props;
          return null != e
            ? e
            : null != t
              ? u.Button.Hovers.GREEN
              : u.Button.Hovers.DEFAULT;
        }
        componentDidMount() {
          let { sku: e, applicationId: t, targetSkuId: n } = this.props;
          null == e && null != n && E.fetchSKU(t, n).catch(() => {});
        }
        componentDidUpdate(e) {
          this.props.locale !== e.locale &&
            null != this.props.targetSkuId &&
            E.fetchSKU(this.props.applicationId, this.props.targetSkuId).catch(
              () => {}
            );
        }
        async purchaseOrGrantSKU(e) {
          let {
            channelId: t,
            entitlementBranchId: n,
            analyticsContext: s,
          } = this.props;
          if (null != t && null != n) {
            let n = await E.grantChannelBranchEntitlement(
              e.applicationId,
              t,
              e.id
            );
            return n;
          }
          let a = await E.purchaseSKU(e.applicationId, e.id, {
            analyticsLoadId: s.loadId,
          });
          return a.entitlements;
        }
        wrapWithDisabledTooltip(e, t) {
          let { className: n, tooltipPosition: a } = this.props;
          return (0, s.jsxs)("div", {
            className: i(b.disabledButtonWrapper, n),
            children: [
              e,
              (0, s.jsx)(u.Tooltip, {
                text: t,
                position: a,
                children: e =>
                  (0, s.jsx)("div", {
                    className: b.disabledButtonOverlay,
                    ...e,
                  }),
              }),
            ],
          });
        }
        renderButton(e) {
          let t,
            n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : Object.freeze({}),
            {
              isPurchasing: a,
              wrapperClassName: l,
              className: r,
              fullWidth: o,
              size: d,
              isWindowFocused: c,
              color: E,
              customDisabledColor: f,
              pauseAnimation: _,
              isEntitled: T,
              asGift: I,
              sku: m,
              entitlementBranchId: N,
              isInTestMode: p,
              innerClassName: S,
            } = this.props,
            C = !0 === T && (null == m || m.type !== U.SKUTypes.CONSUMABLE),
            A =
              !0 === n.disabled ||
              (null != m && !m.available && !(null != N) && !p) ||
              (C && !I),
            h = n.disabledTooltipText,
            g = {
              wrapperClassName: l,
              className: r,
              fullWidth: o,
              size: d,
              color: A && null != f ? f : null != E ? E : u.Button.Colors.GREEN,
              hover: this.hover,
              innerClassName: i(null != S ? S : null, b.applicationBuyButton),
              disabled: A,
              submitting: a || !0 === n.submitting,
              onClick: null != n.onClick ? n.onClick : this.handleClick,
            };
          return ((t =
            !0 === n.useShinyButton
              ? (0, s.jsxs)(L.default, {
                  ...g,
                  pauseAnimation: !c || _,
                  children: [n.buttonIcon, e],
                })
              : (0, s.jsxs)(u.Button, { ...g, children: [n.buttonIcon, e] })),
          null != h)
            ? this.wrapWithDisabledTooltip(t, h)
            : t;
        }
        renderFreeButton(e, t) {
          let {
            isEntitled: n,
            isUserPremium: s,
            isInTestMode: a,
            forceDistribution: l,
            entitlementBranchId: i,
          } = this.props;
          if (null != i)
            return (0, y.canUserInstall)(e) && !n
              ? this.renderButton(j.default.Messages.GAME_ACTION_BUTTON_INSTALL)
              : this.renderButton(
                  j.default.Messages.GAME_ACTION_BUTTON_ADD_TO_LIBRARY
                );
          let r = e.getPrice();
          if (e.premium && !l && (s || a))
            return (0, y.canUserInstall)(e) && !n
              ? this.renderButton(
                  j.default.Messages.GAME_ACTION_BUTTON_INSTALL,
                  t
                )
              : this.renderButton(
                  j.default.Messages.GAME_ACTION_BUTTON_ADD_TO_LIBRARY,
                  t
                );
          if (
            null != r &&
            0 === r.amount &&
            (!e.premium ||
              (0, D.hasFlag)(e.flags, U.SKUFlags.PREMIUM_AND_DISTRIBUTION))
          )
            return (0, y.canUserInstall)(e) && !n
              ? this.renderButton(j.default.Messages.GAME_ACTION_BUTTON_INSTALL)
              : this.renderButton(
                  j.default.Messages.GAME_ACTION_BUTTON_ADD_TO_LIBRARY
                );
        }
        render() {
          let {
              isAuthenticated: e,
              sku: t,
              onStoreListing: n,
              shouldRenderPrice: a,
              forceDistribution: l,
              asGift: i,
              isInTestMode: r,
            } = this.props,
            o = {
              useShinyButton: !0,
              buttonIcon: (0, s.jsx)(v.default, { className: b.premiumIcon }),
            };
          if (null == t) return this.renderButton(null, { submitting: !0 });
          if (i)
            return t.isPreorder()
              ? this.renderButton(
                  j.default.Messages.APPLICATION_STORE_PREORDER_AS_GIFT
                )
              : this.renderButton(
                  j.default.Messages.APPLICATION_STORE_BUY_AS_GIFT
                );
          let u = this.renderFreeButton(t, o);
          if (null != u) return u;
          if (!n)
            return this.renderButton(
              j.default.Messages.GAME_ACTION_BUTTON_VIEW_IN_STORE,
              { onClick: this.handleViewInStore }
            );
          let d = t.getPrice();
          return (t.available || r) && (t.premium || null != d)
            ? t.restricted
              ? this.renderButton(j.default.Messages.APPLICATION_STORE_BUY, {
                  disabledTooltipText:
                    j.default.Messages.GAME_ACTION_BUTTON_RESTRICTED_IN_REGION,
                })
              : t.premium && !l
                ? this.renderButton(
                    j.default.Messages.APPLICATION_STORE_GET_PREMIUM,
                    o
                  )
                : e || null != t.externalPurchaseUrl
                  ? t.isPreorder()
                    ? this.renderButton(
                        a
                          ? j.default.Messages.APPLICATION_STORE_PREORDER_FOR_PRICE.format(
                              { price: (0, p.default)(t, !0, !0) }
                            )
                          : j.default.Messages.APPLICATION_STORE_PREORDER
                      )
                    : this.renderButton(
                        a
                          ? j.default.Messages.APPLICATION_STORE_BUY_FOR_PRICE.format(
                              { price: (0, p.default)(t, !0, !0) }
                            )
                          : j.default.Messages.APPLICATION_STORE_BUY
                      )
                  : this.renderButton(
                      j.default.Messages.GAME_ACTION_BUTTON_LOGIN_TO_BUY
                    )
            : this.renderButton(
                j.default.Messages.GAME_ACTION_BUTTON_UNAVAILABLE,
                { disabled: !0 }
              );
        }
        constructor(...e) {
          super(...e),
            (this.handleViewInStore = e => {
              let { sku: t, skuId: n, application: s, onClick: a } = this.props;
              if (null == t) throw Error("Unexpected missing sku");
              null != a && a(e),
                null != n
                  ? (0, f.goToSKUStoreListing)(t.id, {
                      analyticsSource: this.analyticsLocation,
                      slug: t.slug,
                    })
                  : null != s &&
                    (0, f.goToApplicationStoreListing)(s.id, {
                      analyticsSource: this.analyticsLocation,
                      slug: s.slug,
                    });
            }),
            (this.handleClick = async e => {
              let {
                isAuthenticated: t,
                applicationId: n,
                sku: s,
                targetSkuId: a,
                entitlementBranchId: l,
                isUserPremium: i,
                onClick: o,
                isInTestMode: u,
                storeListingAnalyticsProperties: E,
                asGift: f,
                forceDistribution: I,
              } = this.props;
              if (null == s)
                throw Error("should not be able to buy without sku");
              if (
                (null != o && null != e && o(e), null != s.externalPurchaseUrl)
              ) {
                window.open(s.externalPurchaseUrl);
                return;
              }
              if (!t) {
                let e = {
                  redirect_to: U.Routes.APPLICATION_STORE_LISTING_SKU(
                    s.id,
                    s.slug
                  ),
                };
                (0, S.transitionTo)(U.Routes.LOGIN, {
                  search: (0, r.stringify)(e),
                });
                return;
              }
              let m = null != l;
              if (!s.premium || I || i || u || m) {
                if ((s.requiresPayment || I) && !m) {
                  if (null != a)
                    try {
                      await (0, T.openSKUPaymentModal)(
                        n,
                        a,
                        this.analyticsLocation,
                        {
                          promotionId: null != E ? E.promotionId : null,
                          isGift: f,
                        }
                      );
                    } catch (e) {
                      e === U.PaymentModalPriceChangedError &&
                        d.default.show({
                          title: j.default.Messages.PAYMENT_PRICE_CHANGE_TITLE,
                          body: j.default.Messages.PAYMENT_PRICE_CHANGE_BODY,
                          confirmText: j.default.Messages.OKAY,
                        });
                    }
                } else
                  try {
                    let e = await this.purchaseOrGrantSKU(s);
                    (0, c.openPurchaseConfirmationModal)(
                      s.applicationId,
                      s.id,
                      e,
                      { analyticsSource: this.analyticsLocation }
                    );
                  } catch (e) {}
              } else {
                var N;
                (N = this.analyticsLocation),
                  P.default.track(U.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                    location: N,
                  }),
                  _.default.open(U.UserSettingsSections.PREMIUM);
              }
            });
        }
      }
      G.defaultProps = {
        tooltipPosition: "top",
        onStoreListing: !1,
        shouldRenderPrice: !1,
        pauseAnimation: !1,
        asGift: !1,
        forceDistribution: !1,
      };
      var B = a.forwardRef((e, t) => {
        let {
            entitlementBranchId: n,
            applicationId: a,
            channelId: l,
            skuId: i,
            ...r
          } = e,
          u = (0, o.useStateFromStores)(
            [m.default, O.default],
            () =>
              O.default.inTestModeForApplication(a) ||
              m.default.inDevModeForApplication(a),
            [a]
          ),
          [d, c, E, f, _, T] = (0, o.useStateFromStoresArray)(
            [N.default, A.default, M.default, h.default],
            () => {
              let e = N.default.getApplication(a),
                t = A.default.getCurrentUser(),
                s = null == i && null != e ? e.destinationSkuId : i,
                l = null != s ? M.default.get(s) : null,
                r = null != n ? n : a,
                o = null != s ? h.default.isEntitledToSku(t, s, a, r) : null,
                u = x.default.canInstallPremiumApplications(t);
              return [e, t, l, o, u, s];
            }
          ),
          p = (0, o.useStateFromStores)([R.default], () =>
            R.default.isFocused()
          ),
          S = (0, o.useStateFromStores)(
            [g.default],
            () => g.default.isPurchasingSKU
          ),
          L = (0, o.useStateFromStores)([C.default], () => C.default.locale),
          v = (0, I.useAnalyticsContext)();
        if (null != n && null == l)
          throw Error("Unexpected entitlementBranchId without a channelId");
        return (0, s.jsx)(G, {
          ...r,
          applicationId: a,
          skuId: i,
          entitlementBranchId: n,
          channelId: l,
          application: d,
          sku: E,
          isAuthenticated: null != c,
          isInTestMode: u,
          isEntitled: f,
          isUserPremium: _,
          isWindowFocused: p,
          isPurchasing: S,
          locale: L,
          analyticsContext: v,
          ref: t,
          targetSkuId: T,
        });
      });
    },
    159467: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007"),
        n("70102");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("272030"),
        d = n("997289"),
        c = n("161454"),
        E = n("860285"),
        f = n("86878"),
        _ = n("535974"),
        T = n("181114"),
        I = n("837899"),
        m = n("773336"),
        N = n("780009"),
        p = n("49111"),
        S = n("782340"),
        C = n("434118");
      class A extends a.PureComponent {
        get analyticsLocation() {
          return {
            ...this.props.analyticsContext.location,
            object: p.AnalyticsObjects.BUTTON_CTA,
          };
        }
        renderDropdown() {
          let { dispatchState: e } = this.props,
            t =
              null != e &&
              null != e.launchOptions &&
              Object.keys(e.launchOptions).length > 1;
          return t
            ? (0, s.jsxs)(o.Clickable, {
                "aria-label":
                  S.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH_OPTIONS,
                className: C.dropdownArrowHitbox,
                onClick: this.handleDropdownClick,
                children: [
                  (0, s.jsx)("div", { className: C.arrowSeparator }),
                  (0, s.jsx)(I.default, { className: C.dropdownArrow }),
                ],
              })
            : null;
        }
        renderDisabledButton(e, t) {
          let {
            className: n,
            fullWidth: a,
            size: l,
            customDisabledColor: i,
            tooltipPosition: r,
          } = this.props;
          return (0, s.jsxs)("div", {
            className: C.disabledButtonWrapper,
            children: [
              (0, s.jsx)(o.Button, {
                className: n,
                fullWidth: a,
                size: l,
                color: null != i ? i : C.disabledButtonColor,
                disabled: !0,
                children: e,
              }),
              (0, s.jsx)(o.Tooltip, {
                text: t,
                position: r,
                children: e =>
                  (0, s.jsx)("div", {
                    className: C.disabledButtonOverlay,
                    ...e,
                  }),
              }),
            ],
          });
        }
        render() {
          let {
            className: e,
            fullWidth: t,
            size: n,
            color: a,
            isLaunchable: l,
            isLaunching: r,
            isRunning: u,
            isShiny: d,
            hideNotLaunchable: c,
          } = this.props;
          if (!l)
            return c
              ? null
              : this.renderDisabledButton(
                  S.default.Messages.GAME_ACTION_BUTTON_PLAY,
                  m.isPlatformEmbedded
                    ? S.default.Messages.GAME_ACTION_BUTTON_GAME_NOT_DETECTED
                    : S.default.Messages
                        .GAME_ACTION_BUTTON_PLAY_DISABLED_DESKTOP_APP
                );
          if (u)
            return this.renderDisabledButton(
              S.default.Messages.GAME_ACTION_BUTTON_NOW_PLAYING
            );
          let E = d ? T.default : o.Button;
          return (0, s.jsxs)(E, {
            className: i(C.playButton, e),
            innerClassName: C.playButtonContents,
            fullWidth: t,
            size: n,
            color: null != a ? a : o.Button.Colors.GREEN,
            hover: null != a ? o.Button.Hovers.GREEN : o.Button.Hovers.DEFAULT,
            submitting: r,
            onClick: this.handleClick,
            children: [
              (0, s.jsx)("div", {
                className: C.buttonText,
                children: S.default.Messages.GAME_ACTION_BUTTON_PLAY,
              }),
              this.renderDropdown(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleDropdownClick = e => {
              e.stopPropagation();
              let {
                libraryApplication: t,
                onDropdownOpen: a,
                onDropdownClose: l,
              } = this.props;
              if ((null == a || a(e), null == t))
                throw Error("Unexpected missing libraryApplication");
              u.openContextMenuLazy(
                e,
                async () => {
                  let { default: e } = await n
                    .el("220792")
                    .then(n.bind(n, "220792"));
                  return n =>
                    (0, s.jsx)(e, {
                      ...n,
                      libraryApplication: t,
                      onPlay: this.handleClick,
                    });
                },
                { onClose: l }
              );
            }),
            (this.handleClick = () => {
              let {
                applicationId: e,
                libraryApplication: t,
                analyticsListSort: n,
                analyticsListIndex: s,
              } = this.props;
              N.playApplication(e, t, {
                analyticsParams: {
                  location: this.analyticsLocation,
                  list_sort: n,
                  list_index: s,
                },
              });
            });
        }
      }
      function h(e) {
        let { applicationId: t, libraryApplication: n } = e,
          a = (0, d.useAnalyticsContext)(),
          [l, i] = (0, r.useStateFromStoresArray)(
            [f.default, E.default, _.default],
            () => [
              f.default.isConnected(t) ||
                E.default.isLaunchable(t) ||
                (null != n && _.default.isLaunchable(n.id, n.branchId)),
              E.default.launchingGames.has(t),
            ],
            [t, n]
          ),
          o = (0, r.useStateFromStores)(
            [c.default],
            () => new Set(c.default.getRunningVerifiedApplicationIds()).has(t),
            [t]
          ),
          u = (0, r.useStateFromStores)(
            [_.default],
            () => (null != n ? _.default.getState(n.id, n.branchId) : null),
            [n]
          );
        return (0, s.jsx)(A, {
          ...e,
          analyticsContext: a,
          isLaunchable: l,
          isLaunching: i,
          isRunning: o,
          dispatchState: u,
        });
      }
      A.defaultProps = {
        fullWidth: !1,
        size: o.Button.Sizes.LARGE,
        tooltipPosition: "top",
        isShiny: !1,
        hideNotLaunchable: !1,
      };
    },
    741130: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s,
        a,
        l = n("37983");
      n("884691");
      var i = n("77078"),
        r = n("145131"),
        o = n("837899"),
        u = n("430158");
      ((s = a || (a = {})).SMALL = "SMALL"),
        (s.MEDIUM = "MEDIUM"),
        (s.LARGE = "LARGE");
      let d = {
          SMALL: u.dropdownSmall,
          MEDIUM: u.dropdownMedium,
          LARGE: u.dropdownLarge,
        },
        c = e => {
          let {
            onDropdownClick: t,
            children: n,
            contentClassName: s,
            dropdownSize: a = "MEDIUM",
            ...c
          } = e;
          return (0, l.jsx)(i.Button, {
            ...c,
            children: (0, l.jsxs)(r.default, {
              align: r.default.Align.CENTER,
              children: [
                (0, l.jsx)(r.default.Child, { className: s, children: n }),
                null != t
                  ? (0, l.jsxs)(i.Clickable, {
                      className: d[a],
                      onClick: e => {
                        e.stopPropagation(), null != t && t(e);
                      },
                      children: [
                        (0, l.jsx)("div", { className: u.arrowSeparator }),
                        (0, l.jsx)(o.default, { className: u.dropdownArrow }),
                      ],
                    })
                  : null,
              ],
            }),
          });
        };
      (c.DropdownSizes = a),
        (c.Sizes = i.Button.Sizes),
        (c.Colors = i.Button.Colors),
        (c.Looks = i.Button.Looks);
      var E = c;
    },
    827825: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("70102"),
        n("222007");
      var s,
        a,
        l = n("37983"),
        i = n("884691"),
        r = n("446674"),
        o = n("669491"),
        u = n("77078"),
        d = n("438931"),
        c = n("997289"),
        E = n("605250"),
        f = n("393414"),
        _ = n("677225"),
        T = n("9377"),
        I = n("148813"),
        m = n("535974"),
        N = n("352326"),
        p = n("964889"),
        S = n("773336"),
        C = n("882941"),
        A = n("780009"),
        h = n("159467"),
        g = n("49111"),
        M = n("782340"),
        O = n("176153");
      ((a = s || (s = {})).PLAY = "play"),
        (a.NOW_PLAYING = "now_playing"),
        (a.INSTALL = "install"),
        (a.UPDATE = "update"),
        (a.PAUSED = "paused"),
        (a.LOCATE = "locate"),
        (a.UNINSTALLING = "uninstalling"),
        (a.QUEUED = "queued"),
        (a.DOWNLOADING = "downloading"),
        (a.UNSUPPORTED_OS = "unsupported_os"),
        (a.ADD_TO_LIBRARY = "add_to_library"),
        (a.PREORDER_WAIT = "preorder_wait");
      let R = Object.freeze({
          [g.LibraryApplicationActions.PLAY]: "play",
          [g.LibraryApplicationActions.INSTALL]: "install",
          [g.LibraryApplicationActions.UPDATE]: "update",
          [g.LibraryApplicationActions.PAUSE]: "downloading",
          [g.LibraryApplicationActions.MOVE_UP]: "queued",
          [g.LibraryApplicationActions.RESUME]: "paused",
        }),
        L = () => [
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_1,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_2,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_3,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_4,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_5,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_6,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_7,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_8,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_9,
          M.default.Messages.GAME_ACTION_BUTTON_UNINSTALLING_10,
        ];
      class v extends i.Component {
        get analyticsLocation() {
          return {
            ...this.props.analyticsContext.location,
            object: g.AnalyticsObjects.BUTTON_CTA,
          };
        }
        getText(e) {
          switch (
            ("uninstalling" !== e && (this._uninstallStringIndex = null), e)
          ) {
            case "install":
            case "unsupported_os":
              return M.default.Messages.GAME_ACTION_BUTTON_INSTALL;
            case "update":
              return M.default.Messages.GAME_ACTION_BUTTON_UPDATE;
            case "paused":
              return M.default.Messages.GAME_ACTION_BUTTON_PAUSED;
            case "locate":
              return M.default.Messages.GAME_ACTION_BUTTON_LOCATE;
            case "uninstalling":
              let t = L();
              return (
                null == this._uninstallStringIndex &&
                  (this._uninstallStringIndex = Math.floor(
                    Math.random() * t.length
                  )),
                t[this._uninstallStringIndex]
              );
            case "queued":
              return M.default.Messages.GAME_ACTION_BUTTON_QUEUED;
            case "downloading":
              return M.default.Messages.GAME_ACTION_BUTTON_DOWNLOADING;
            case "preorder_wait":
              return M.default.Messages.GAME_ACTION_BUTTON_PREORDER_WAIT;
            case "add_to_library":
              return M.default.Messages.GAME_ACTION_BUTTON_ADD_TO_LIBRARY;
            default:
              throw Error("Unexpected button state");
          }
        }
        getButtonState() {
          let {
            libraryApplication: e,
            dispatchState: t,
            actionState: n,
          } = this.props;
          if (e.isHidden()) return "add_to_library";
          if (e.isPreorder()) return "preorder_wait";
          let s = null != n ? R[n] : null;
          return null != s
            ? s
            : null != t &&
                t.type === g.LocalDispatchApplicationStates.UNINSTALLING
              ? "uninstalling"
              : (0, S.isWeb)()
                ? "play"
                : "unsupported_os";
        }
        renderPlayButton() {
          let {
            libraryApplication: e,
            fullWidth: t,
            size: n,
            color: s,
            customDisabledColor: a,
            isPlayShiny: i,
            onDropdownOpen: r,
            onDropdownClose: o,
            analyticsListSort: u,
            analyticsListIndex: d,
          } = this.props;
          return (0, l.jsx)(h.default, {
            applicationId: e.id,
            libraryApplication: e,
            fullWidth: t,
            size: n,
            color: s,
            customDisabledColor: a,
            isShiny: i,
            onDropdownOpen: r,
            onDropdownClose: o,
            analyticsListSort: u,
            analyticsListIndex: d,
          });
        }
        renderDisabledButton(e, t) {
          let {
            className: n,
            fullWidth: s,
            size: a,
            customDisabledColor: i,
            tooltipPosition: r,
          } = this.props;
          return (0, l.jsxs)("div", {
            className: O.disabledButtonWrapper,
            children: [
              (0, l.jsxs)(u.Button, {
                className: n,
                fullWidth: s,
                size: a,
                color: null != i ? i : O.disabledButtonColor,
                disabled: !0,
                children: [this.getText(e), this.renderProgressBar()],
              }),
              (0, l.jsx)(u.Tooltip, {
                text: t,
                position: r,
                children: e =>
                  (0, l.jsx)("div", {
                    className: O.disabledButtonOverlay,
                    ...e,
                  }),
              }),
            ],
          });
        }
        renderProgressBar() {
          let { hideProgress: e, dispatchState: t } = this.props;
          if (e) return null;
          let n = p.convertToTransitionState(t);
          if (null == n) return null;
          let s =
            n.type === g.LocalDispatchApplicationStates.UNINSTALLING
              ? u.Progress.INDETERMINATE
              : p.calculateProgressPercentage(
                  Number(n.progress),
                  Number(n.total)
                );
          return (0, l.jsx)(u.Progress, {
            percent: s,
            size: u.Progress.Sizes.XSMALL,
            foregroundColor: n.paused
              ? o.default.unsafe_rawColors.PRIMARY_500.css
              : o.default.unsafe_rawColors.GREEN_360.css,
            backgroundColor: o.default.unsafe_rawColors.TRANSPARENT.css,
            className: O.progress,
          });
        }
        renderActionButton(e, t) {
          let {
            className: n,
            fullWidth: s,
            size: a,
            color: i,
            isCloudSyncing: r,
          } = this.props;
          return (0, l.jsxs)(u.Button, {
            className: n,
            fullWidth: s,
            size: a,
            color: null != i ? i : u.Button.Colors.GREEN,
            hover: null != i ? u.Button.Hovers.GREEN : u.Button.Hovers.DEFAULT,
            submitting: "uninstalling" === e || r,
            onClick: e => this.handleClick(e, t),
            children: [this.getText(e), this.renderProgressBar()],
          });
        }
        render() {
          let { hasNoBuild: e, libraryApplication: t } = this.props,
            n = this.getButtonState();
          if ("play" === n) return this.renderPlayButton();
          if ("preorder_wait" === n)
            return this.renderDisabledButton(
              n,
              (function (e) {
                let t = C.getReadablePreorderReleaseDate(e.sku);
                return null != t
                  ? M.default.Messages.GAME_ACTION_BUTTON_PREORDER_WAIT_TOOLTIP.format(
                      { date: t }
                    )
                  : null;
              })(t)
            );
          if ("unsupported_os" === n)
            return this.renderDisabledButton(
              n,
              M.default.Messages.GAME_ACTION_BUTTON_UNAVAILABLE_TOOLTIP.format({
                operatingSystem: M.default.Messages.WINDOWS,
              })
            );
          if ("install" === n && e)
            return this.renderDisabledButton(
              n,
              M.default.Messages.GAME_ACTION_BUTTON_CANNOT_INSTALL
            );
          let s = this.onClickHandlers[n];
          return null == s
            ? this.renderDisabledButton(n)
            : this.renderActionButton(n, s);
        }
        constructor(...e) {
          super(...e),
            (this._uninstallStringIndex = null),
            (this.handleAddToLibrary = async () => {
              try {
                let { libraryApplication: e } = this.props;
                await d.updateFlags(
                  e.id,
                  e.branchId,
                  e.getFlags() & ~g.LibraryApplicationFlags.HIDDEN
                ),
                  (0, f.transitionTo)(g.Routes.APPLICATION_LIBRARY);
              } catch (e) {
                new (0, E.default)("LibraryApplicationButton").error(e);
              }
            }),
            (this.handleInstall = () => {
              let { libraryApplication: e, source: t } = this.props;
              A.installApplication(e.id, e.branchId, t);
            }),
            (this.handleUpdate = () => {
              let { libraryApplication: e } = this.props;
              A.updateApplication(e.id, e.branchId);
            }),
            (this.onClickHandlers = {
              add_to_library: this.handleAddToLibrary,
              install: this.handleInstall,
              update: this.handleUpdate,
            }),
            (this.handleClick = (e, t) => {
              let { onClick: n } = this.props;
              null == n || n(e), t(e);
            });
        }
      }
      function P(e) {
        let { libraryApplication: t } = e,
          n = (0, c.useAnalyticsContext)(),
          [s, a] = (0, r.useStateFromStoresArray)(
            [m.default, N.default],
            () => [
              (0, T.getDefaultLibraryApplicationAction)(
                t,
                m.default,
                N.default
              ),
              m.default.getState(t.id, t.branchId),
            ],
            [t]
          ),
          i = (0, r.useStateFromStores)(
            [I.default],
            () => I.default.isSyncing(t.id, t.branchId),
            [t]
          ),
          o = (0, r.useStateFromStores)(
            [_.default],
            () => _.default.hasNoBuild(t.id, t.branchId),
            [t]
          );
        return (0, l.jsx)(v, {
          ...e,
          analyticsContext: n,
          actionState: s,
          dispatchState: a,
          isCloudSyncing: i,
          hasNoBuild: o,
        });
      }
      (v.defaultProps = {
        fullWidth: !1,
        size: u.Button.Sizes.LARGE,
        hideProgress: !1,
        isPlayShiny: !1,
        tooltipPosition: "top",
      }),
        (v.ButtonStates = s);
    },
    359606: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("70102");
      var s,
        a,
        l,
        i,
        r = n("37983"),
        o = n("884691"),
        u = n("414456"),
        d = n.n(u),
        c = n("661579"),
        E = n("880013"),
        f = n("216422"),
        _ = n("782340"),
        T = n("293302");
      ((l = s || (s = {}))[(l.DIRECTORY_HERO = 1)] = "DIRECTORY_HERO"),
        (l[(l.DIRECTORY_TILE = 2)] = "DIRECTORY_TILE"),
        (l[(l.DIRECTORY_SEARCH = 3)] = "DIRECTORY_SEARCH"),
        (l[(l.LISTING = 4)] = "LISTING"),
        (l[(l.EMBED = 5)] = "EMBED"),
        ((i = a || (a = {}))[(i.IN_LIBRARY = 1)] = "IN_LIBRARY"),
        (i[(i.ON_SALE = 2)] = "ON_SALE"),
        (i[(i.PREMIUM = 3)] = "PREMIUM"),
        (i[(i.DEFAULT = 4)] = "DEFAULT"),
        (i[(i.ENTITLEMENT_BRANCH = 5)] = "ENTITLEMENT_BRANCH");
      let I = e => {
          let { className: t } = e;
          return (0, r.jsxs)("div", {
            className: d(T.row, t),
            children: [
              (0, r.jsx)(E.default, { className: T.icon }),
              _.default.Messages.APPLICATION_STORE_IN_LIBRARY,
            ],
          });
        },
        m = e => {
          let { sku: t, className: n } = e;
          return (0, r.jsxs)("div", {
            className: d(T.row, n),
            children: [
              (0, r.jsx)(f.default, { className: T.icon }),
              (0, c.default)(t),
            ],
          });
        },
        N = e => {
          let { sku: t, className: n } = e;
          return (0, r.jsx)("div", {
            className: d(T.salePercentage, n),
            children: t.getDisplaySalePercentage(),
          });
        },
        p = e => {
          let { sku: t, className: n } = e;
          return (0, r.jsx)("div", {
            className: d(T.originalAmount, n),
            children: (0, c.default)(t, !1),
          });
        },
        S = e => {
          let { sku: t, className: n } = e;
          return (0, r.jsx)("div", {
            className: n,
            children: (0, c.default)(t),
          });
        },
        C = e => {
          let { sku: t, className: n } = e;
          return (0, r.jsxs)("div", {
            className: d(T.row, n),
            children: [
              (0, r.jsx)(N, { sku: t }),
              (0, r.jsx)(p, { sku: t }),
              (0, r.jsx)(S, { sku: t }),
            ],
          });
        },
        A = e => {
          let { className: t } = e;
          return (0, r.jsx)("div", {
            className: t,
            children: _.default.Messages.APPLICATION_STORE_FREE,
          });
        };
      class h extends o.PureComponent {
        getState() {
          let { inLibrary: e, sku: t, hasEntitlementBranch: n } = this.props;
          if (n) return 5;
          if (e) return 1;
          if (!t.available) return 4;
          else if (t.premium) return 3;
          else if (t.isOnSale) return 2;
          else if (null != t.getPrice()) return 4;
          return null;
        }
        renderGeneric(e, t) {
          let { className: n, sku: s } = this.props;
          switch (e) {
            case 5:
              return (0, r.jsx)(A, { className: d(t, n) });
            case 1:
              return (0, r.jsx)(I, { className: d(t, n) });
            case 3:
              return (0, r.jsx)(m, { sku: s, className: d(t, n) });
            case 2:
              return (0, r.jsx)(C, { sku: s, className: d(t, n) });
            default:
              return (0, r.jsx)(S, { className: d(t, n), sku: s });
          }
        }
        renderDirectoryHero(e) {
          let { className: t, sku: n } = this.props;
          switch (e) {
            case 5:
              return (0, r.jsx)(A, { className: d(t) });
            case 3:
              return (0, r.jsx)(m, {
                sku: n,
                className: d(T.directoryHeroPricePremium, t),
              });
            case 2:
              return (0, r.jsx)(C, {
                sku: n,
                className: d(T.directoryHeroPrice, t),
              });
            default:
              return (0, r.jsx)(S, {
                className: d(T.directoryHeroPrice, t),
                sku: n,
              });
          }
        }
        renderListing(e) {
          let t;
          let { className: n, sku: s } = this.props;
          switch (e) {
            case 5:
              t = (0, r.jsx)(A, {});
              break;
            case 2:
              t = (0, r.jsxs)(o.Fragment, {
                children: [
                  (0, r.jsxs)("div", {
                    className: T.row,
                    children: [
                      (0, r.jsx)(S, { sku: s }),
                      (0, r.jsx)(N, { sku: s }),
                    ],
                  }),
                  (0, r.jsx)(p, { sku: s }),
                ],
              });
              break;
            default:
              t = (0, r.jsx)(S, { sku: s });
          }
          return (0, r.jsx)("div", {
            className: d(T.listingPrice, n),
            children: t,
          });
        }
        render() {
          let e = this.getState();
          if (null == e) return null;
          switch (this.props.type) {
            case 1:
              return this.renderDirectoryHero(e);
            case 2:
              return this.renderGeneric(e, T.directoryTilePrice);
            case 3:
              return this.renderGeneric(e, T.directorySearchPrice);
            case 4:
              return this.renderListing(e);
            case 5:
              return this.renderGeneric(e, T.embedPrice);
            default:
              throw Error("Invalid Price Unit Type");
          }
        }
      }
      h.Types = s;
      var g = h;
    },
    883610: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("790219"),
        u = n("359606"),
        d = n("206100"),
        c = n("85871"),
        E = n("231561"),
        f = n("347374"),
        _ = n("271560"),
        T = n("4919"),
        I = n("458331"),
        m = n("49111"),
        N = n("705853");
      class p extends a.PureComponent {
        render() {
          let {
              sku: e,
              storeListing: t,
              isHorizontal: n,
              className: a,
              renderCustomTagline: l,
              renderCustomTitle: i,
              renderCustomMedia: r,
              isEmbed: o,
            } = this.props,
            u = o ? T.ResponsiveEmbedTile : I.default;
          return (0, s.jsx)(u, {
            className: a,
            renderMedia: null != r ? r : this.renderMedia,
            renderTitle: null != i ? i : () => e.name,
            renderTagline: null != l ? l : () => t.tagline,
            renderActions: this.renderActions,
            isHorizontal: n,
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderActions = () => {
              let {
                  inLibrary: e,
                  sku: t,
                  renderCustomActions: n,
                  isMouseOver: a,
                  showBuyInline: l,
                } = this.props,
                i = (l || !t.requiresPayment) && !e,
                c = i && a;
              return null != n
                ? n()
                : (0, s.jsxs)("div", {
                    className: N.priceOs,
                    children: [
                      (0, s.jsx)(u.default, {
                        type: u.default.Types.DIRECTORY_TILE,
                        sku: t,
                        inLibrary: e,
                        className: c
                          ? N.tilePriceWithVisibleBuyButton
                          : N.tilePrice,
                      }),
                      (0, s.jsx)(d.OperatingSystemSection, {
                        systems: [m.OperatingSystems.WINDOWS],
                        className: N.platform,
                      }),
                      i
                        ? (0, s.jsx)(o.default, {
                            skuId: t.id,
                            applicationId: t.applicationId,
                            size: r.Button.Sizes.SMALL,
                            shouldRenderPrice: !0,
                            onStoreListing: !0,
                            onClick: e => e.preventDefault(),
                            className: c
                              ? N.tileBuyButtonVisible
                              : N.tileBuyButton,
                          })
                        : null,
                    ],
                  });
            }),
            (this.renderMedia = () => {
              let {
                playing: e,
                muted: t,
                showMediaPlaceholder: n,
                onToggleMute: l,
                sku: r,
                isHorizontal: o,
                storeListing: u,
              } = this.props;
              return (0, s.jsxs)(a.Fragment, {
                children: [
                  (0, s.jsx)(f.default, {
                    className: i(N.splashContainer, {
                      [N.splashContainerHorizontal]: o,
                    }),
                    video:
                      null != u.previewVideo
                        ? (0, _.getAssetURL)(r.applicationId, u.previewVideo)
                        : void 0,
                    image:
                      null != u.thumbnail
                        ? (0, _.getAssetURL)(r.applicationId, u.thumbnail, 600)
                        : null,
                    title: r.name,
                    playing: e,
                    muted: t,
                    placeholder: n,
                    onToggleMute: l,
                    splashClassName: N.splashVideo,
                    splashPlaceholderClassName: N.splashPlaceholder,
                  }),
                  r.exclusive
                    ? (0, s.jsx)(c.default, {
                        className: i(N.exclusiveRegular, {
                          [N.exclusivePlaying]: e,
                        }),
                      })
                    : r.isTheGameAwardsWinner
                      ? (0, s.jsx)(E.default, {
                          className: i(N.exclusiveRegular, {
                            [N.exclusivePlaying]: e,
                          }),
                        })
                      : null,
                ],
              });
            });
        }
      }
      p.defaultProps = {
        showMediaPlaceholder: !1,
        isMouseOver: !1,
        showBuyInline: !1,
        isHorizontal: !1,
        isEmbed: !1,
      };
      var S = p;
    },
    4919: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HORIZONTAL_EMBED_BREAKPOINT: function () {
            return o;
          },
          ResponsiveEmbedTile: function () {
            return u;
          },
          ResponsiveLoadingEmbedTile: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("458331"),
        r = n("300391");
      let o = 660,
        u = e =>
          (0, s.jsx)(i.default, {
            ...e,
            className: l(e.className, {
              [r.embedVertical]: !e.isHorizontal,
              [r.embedHorizontal]: e.isHorizontal,
            }),
          }),
        d = e => {
          let { isHorizontal: t } = e;
          return (0, s.jsx)(u, {
            ...e,
            media: () =>
              (0, s.jsx)("div", {
                className: l(r.loadingDescription),
                children: (0, s.jsx)("div", {
                  className: l(r.loadingBackgroundWrapper, {
                    [r.loadingBackgroundWrapperHorizontal]: t,
                  }),
                  children: (0, s.jsx)("div", {
                    className: r.loadingBackground,
                  }),
                }),
              }),
            title: () =>
              (0, s.jsx)("div", {
                className: l(r.loadingImage, { [r.loadingImageHorizontal]: t }),
              }),
          });
        };
    },
    458331: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("503496"),
        o = e => {
          let {
            renderTitle: t,
            renderTagline: n,
            renderActions: a,
            renderMedia: o,
            className: u,
            isHorizontal: d = !1,
          } = e;
          return (0, s.jsxs)("div", {
            className: l(r.tile, { [r.tileHorizontal]: d }, u),
            children: [
              (0, s.jsx)("div", {
                className: l(r.media, { [r.mediaHorizontal]: d }),
                children: null == o ? void 0 : o(),
              }),
              (0, s.jsxs)("div", {
                className: r.description,
                children: [
                  (0, s.jsx)(i.H, {
                    className: r.title,
                    children: null == t ? void 0 : t(),
                  }),
                  (0, s.jsx)("div", {
                    className: r.tagline,
                    children: null == n ? void 0 : n(),
                  }),
                  (0, s.jsx)("div", {
                    className: r.actions,
                    children: null == a ? void 0 : a(),
                  }),
                ],
              }),
            ],
          });
        };
    },
    710306: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return K;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("866227"),
        o = n.n(r),
        u = n("446674"),
        d = n("77078"),
        c = n("79112"),
        E = n("4919"),
        f = n("86621"),
        _ = n("737960"),
        T = n("206230"),
        I = n("491232"),
        m = n("210721"),
        N = n("583711"),
        p = n("65324"),
        S = n("393414"),
        C = n("271938"),
        A = n("55411"),
        h = n("686470"),
        g = n("697218"),
        M = n("10514"),
        O = n("552712"),
        R = n("145131"),
        L = n("880013"),
        v = n("943519"),
        P = n("181108"),
        D = n("599110"),
        x = n("659632"),
        y = n("719923"),
        U = n("380186"),
        j = n("158998"),
        b = n("501076"),
        G = n("49111"),
        B = n("646718"),
        k = n("782340"),
        F = n("120704");
      function w(e) {
        let { onClick: t, libraryApplication: n } = e;
        return (0, s.jsxs)(d.Clickable, {
          className: F.libraryLink,
          onClick: t,
          children: [
            (0, s.jsx)(L.default, { className: F.libraryIcon }),
            (0, s.jsx)("div", {
              children: n.isHidden()
                ? k.default.Messages
                    .APPLICATION_STORE_PURCHASE_IN_LIBRARY_HIDDEN
                : k.default.Messages.APPLICATION_STORE_PURCHASE_IN_LIBRARY,
            }),
          ],
        });
      }
      class H extends a.PureComponent {
        get isHorizontal() {
          let { width: e } = this.props;
          return e >= E.HORIZONTAL_EMBED_BREAKPOINT;
        }
        handleViewInventory() {
          c.default.open(G.UserSettingsSections.INVENTORY);
        }
        render() {
          return (0, s.jsx)(E.ResponsiveEmbedTile, {
            isHorizontal: this.isHorizontal,
            renderTitle: this.renderTitle,
            renderTagline: this.renderTagline,
            renderMedia: this.renderMedia,
            renderActions: this.renderActions,
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderMedia = () =>
              (0, s.jsx)("div", {
                className: i(F.invalidPoop, {
                  [F.invalidPoopHorizontal]: this.isHorizontal,
                }),
              })),
            (this.renderTitle = () =>
              this.props.isSelfGift
                ? k.default.Messages.GIFT_EMBED_INVALID_TITLE_SELF
                : k.default.Messages.GIFT_EMBED_INVALID_TITLE_OTHER),
            (this.renderActions = () =>
              this.props.isSelfGift
                ? (0, s.jsx)(d.Button, {
                    size: d.Button.Sizes.SMALL,
                    onClick: this.handleViewInventory,
                    children: k.default.Messages.GIFT_INVENTORY,
                  })
                : (0, s.jsx)(d.Button, {
                    disabled: !0,
                    size: d.Button.Sizes.SMALL,
                    children: k.default.Messages.GIFT_EMBED_BUTTON_ACCEPT,
                  })),
            (this.renderTagline = () =>
              this.props.isSelfGift
                ? k.default.Messages.GIFT_EMBED_INVALID_TAGLINE_SELF
                : k.default.Messages.GIFT_EMBED_INVALID_TAGLINE_OTHER);
        }
      }
      class V extends a.Component {
        get analyticsLocation() {
          let {
            analyticsContext: { location: e },
          } = this.props;
          return { ...e, section: G.AnalyticsSections.GIFT_CODE_EMBED };
        }
        renderActions(e) {
          let { libraryApplication: t } = this.props;
          return (0, s.jsxs)(R.default, {
            justify: R.default.Justify.BETWEEN,
            children: [
              (0, s.jsxs)(R.default, {
                children: [
                  this.renderButton(e),
                  null == t || e.isSubscription
                    ? null
                    : (0, s.jsx)(w, {
                        onClick: this.handleViewLibrary,
                        libraryApplication: t,
                      }),
                ],
              }),
              (0, s.jsxs)(R.default, {
                align: R.default.Align.END,
                justify: R.default.Justify.END,
                className: F.metadata,
                direction: R.default.Direction.VERTICAL,
                children: [
                  e.hasMultipleCopies
                    ? (0, s.jsx)("div", {
                        children: this.renderGiftCodeCopiesLeft(e),
                      })
                    : null,
                  e.redeemed || e.isClaimed || null != t || null == e.expiresAt
                    ? null
                    : (0, s.jsx)("div", {
                        children:
                          k.default.Messages.GIFT_EMBED_EXPIRATION.format({
                            hours: e.expiresAt.diff(o(), "h"),
                          }),
                      }),
                ],
              }),
            ],
          });
        }
        renderGiftCodeCopiesLeft(e) {
          let t = e.isSubscription
            ? k.default.Messages.GIFT_EMBED_SUBSCRIPTIONS_LEFT
            : k.default.Messages.GIFT_EMBED_COPIES_LEFT;
          return t.format({ remaining: e.remainingUses, total: e.maxUses });
        }
        renderButton(e) {
          let {
              libraryApplication: t,
              currentUser: n,
              isSelfGift: a,
            } = this.props,
            l = { onClick: this.handleAccept, color: d.Button.Colors.BRAND },
            i =
              (!e.isSubscription && null != t) ||
              (!e.isSelfRedeemable && a) ||
              (e.isExistingPremiumSubscriptionDisallowed &&
                (0, y.isPremium)(n));
          return (
            (e.redeemed || i || e.isClaimed || !n.verified) &&
              ((l.color = d.Button.Colors.BRAND), (l.disabled = !0)),
            (0, s.jsx)(d.Button, {
              ...l,
              className: (0, I.isCollectiblesGiftCode)(e)
                ? F.collectiblesAcceptButton
                : null,
              size: d.Button.Sizes.SMALL,
              children: e.redeemed
                ? k.default.Messages.GIFT_EMBED_BUTTON_CLAIMED
                : null != e.giftStyle
                  ? k.default.Messages.SEASONAL_GIFTING_OPEN_GIFT
                  : k.default.Messages.GIFT_EMBED_BUTTON_ACCEPT,
            })
          );
        }
        isCustomGiftMessage() {
          let { type: e } = this.props;
          return e === G.MessageTypes.CUSTOM_GIFT;
        }
        renderTitle(e) {
          let { currentUser: t, isSelfGift: n, sku: s } = this.props;
          return this.isCustomGiftMessage() && !n
            ? k.default.Messages.GIFT_RECIPIENT_NOTIFICATION.format({
                recipientDisplayName: j.default.getName(t),
              })
            : null == s
              ? null
              : e.isSubscription
                ? n
                  ? k.default.Messages.GIFT_EMBED_TITLE_SUBSCRIPTION_SELF
                  : k.default.Messages.GIFT_EMBED_TITLE_SUBSCRIPTION
                : n
                  ? k.default.Messages.GIFT_EMBED_TITLE_SELF
                  : k.default.Messages.GIFT_EMBED_TITLE;
        }
        renderBody(e) {
          let {
            libraryApplication: t,
            isSelfGift: n,
            sku: s,
            gifter: a,
            subscriptionPlan: l,
            currentUser: i,
          } = this.props;
          if (null == s) return k.default.Messages.LOADING;
          if (!n && this.isCustomGiftMessage() && !e.redeemed) return;
          let r = s.isPreorder()
            ? k.default.Messages.PREORDER_SKU_NAME.format({ name: s.name })
            : s.name;
          if (e.redeemed)
            return e.isSubscription || (0, I.isCollectiblesGiftCode)(e)
              ? k.default.Messages.GIFT_EMBED_BODY_CLAIMED_SELF_SUBSCRIPTION
              : k.default.Messages.GIFT_EMBED_BODY_CLAIMED_SELF.format({
                  skuName: r,
                  onViewInLibrary: this.handleViewLibrary,
                });
          if (!e.isSubscription && null != t)
            return k.default.Messages.GIFT_EMBED_BODY_OWNED.format({
              skuName: r,
              onViewInLibrary: this.handleViewLibrary,
            });
          if (e.isClaimed)
            return k.default.Messages.GIFT_EMBED_BODY_CLAIMED_OTHER;
          if (!i.verified)
            return k.default.Messages.GIFT_EMBED_BODY_REQUIRES_VERIFICATION.format(
              { onClick: this.handleVerificationClick }
            );
          if (n)
            return e.isSelfRedeemable
              ? k.default.Messages.GIFT_EMBED_BODY_SELF
              : k.default.Messages.GIFT_EMBED_BODY_SELF_NOT_REDEEMABLE.format({
                  skuName: r,
                });
          if (e.isExistingPremiumSubscriptionDisallowed)
            return k.default.Messages
              .GIFT_EMBED_BODY_SUBSCRIPTION_ALREADY_ACTIVE;
          if (e.hasMultipleCopies)
            return null != a
              ? e.isSubscription
                ? k.default.Messages.GIFT_EMBED_BODY_SUBSCRIPTION_GIVEAWAY.format(
                    {
                      username: j.default.getUserTag(a),
                      maxUses: e.maxUses,
                      skuName: r,
                    }
                  )
                : k.default.Messages.GIFT_EMBED_BODY_GIVEAWAY.format({
                    username: j.default.getUserTag(a),
                    totalCopies: e.maxUses,
                    skuName: r,
                  })
              : e.isSubscription
                ? k.default.Messages.GIFT_EMBED_BODY_SUBSCRIPTION_NO_USER_GIVEAWAY.format(
                    { maxUses: e.maxUses, skuName: r }
                  )
                : k.default.Messages.GIFT_EMBED_BODY_NO_USER_GIVEAWAY.format({
                    totalCopies: e.maxUses,
                    skuName: r,
                  });
          if (e.isSubscription) {
            if (null == l) return k.default.Messages.LOADING;
            if (null != a) {
              let e =
                l.interval === B.SubscriptionIntervalTypes.MONTH
                  ? k.default.Messages
                      .GIFT_EMBED_BODY_SUBSCRIPTION_DEFAULT_MONTHS
                  : k.default.Messages
                      .GIFT_EMBED_BODY_SUBSCRIPTION_DEFAULT_YEARS;
              return e.format({
                username: j.default.getUserTag(a),
                skuName: r,
                intervalCount: l.intervalCount,
              });
            }
            let e =
              l.interval === B.SubscriptionIntervalTypes.MONTH
                ? k.default.Messages
                    .GIFT_EMBED_BODY_SUBSCRIPTION_NO_USER_DEFAULT_MONTHS
                : k.default.Messages
                    .GIFT_EMBED_BODY_SUBSCRIPTION_NO_USER_DEFAULT_YEARS;
            return e.format({ skuName: r, intervalCount: l.intervalCount });
          }
          return null != a
            ? k.default.Messages.GIFT_EMBED_BODY_DEFAULT.format({
                username: j.default.getUserTag(a),
              })
            : k.default.Messages.GIFT_EMBED_BODY_NO_USER_DEFAULT;
        }
        renderPromotionActions() {
          return (0, s.jsx)(d.Button, {
            size: d.Button.Sizes.SMALL,
            onClick: this.handleClaimPromotion,
            children: k.default.Messages.GIFT_EMBED_BUTTON_CLAIM,
          });
        }
        renderEmbed() {
          let { giftCode: e, width: t } = this.props;
          return null == e
            ? null
            : (0, s.jsx)(b.StoreEmbedWithoutDimensions, {
                skuId: e.skuId,
                onEmbedClick: this.handleEmbedClick,
                analyticsSection: G.AnalyticsSections.GIFT_CODE_EMBED,
                renderCustomActions: () => this.renderActions(e),
                renderCustomTitle: () => this.renderTitle(e),
                renderCustomTagline: () => this.renderBody(e),
                renderCustomMedia:
                  null == e.giftStyle
                    ? void 0
                    : () => this.renderCustomGiftBox(e),
                width: t,
              });
        }
        render() {
          let {
            giftCode: e,
            resolved: t,
            width: n,
            isSelfGift: a,
          } = this.props;
          if (null != e && null != e.promotion)
            return (0, s.jsx)(b.StoreEmbedWithoutDimensions, {
              skuId: e.skuId,
              onEmbedClick: this.handleClaimPromotion,
              analyticsSection: G.AnalyticsSections.GIFT_CODE_EMBED,
              renderCustomActions: () => this.renderPromotionActions(),
              renderCustomTitle: () =>
                k.default.Messages.GIFT_EMBED_TITLE_PROMOTION,
              renderCustomTagline: () =>
                k.default.Messages.GIFT_EMBED_TAGLINE_PROMOTION,
              width: n,
            });
          if (null == e || e.revoked)
            return t
              ? (0, s.jsx)(H, { isSelfGift: a, width: n })
              : (0, s.jsx)(E.ResponsiveLoadingEmbedTile, {
                  isHorizontal: n >= E.HORIZONTAL_EMBED_BREAKPOINT,
                });
          return (0, I.isCollectiblesGiftCode)(e)
            ? (0, s.jsx)("div", {
                className: F.collectiblesEmbedWrapper,
                children: this.renderEmbed(),
              })
            : this.renderEmbed();
        }
        constructor(...e) {
          super(...e),
            (this.handleViewLibrary = e => {
              let { libraryApplication: t } = this.props;
              e.preventDefault(),
                null != t && t.isHidden()
                  ? (0, S.transitionTo)(G.Routes.APPLICATION_LIBRARY_SETTINGS)
                  : (0, S.transitionTo)(G.Routes.APPLICATION_LIBRARY, {
                      state: { applicationId: null != t ? t.id : null },
                    });
            }),
            (this.handleVerificationClick = e => {
              e.stopPropagation(),
                e.preventDefault(),
                c.default.open(G.UserSettingsSections.ACCOUNT);
            }),
            (this.handleAccept = e => {
              let {
                channelId: t,
                code: n,
                content: s,
                type: a,
                giftInfo: l,
              } = this.props;
              e.preventDefault(),
                e.stopPropagation(),
                D.default.track(G.AnalyticEvents.OPEN_MODAL, {
                  type: "gift_accept",
                  location: {
                    ...this.analyticsLocation,
                    object: G.AnalyticsObjects.BUTTON_CTA,
                  },
                });
              let i = a !== G.MessageTypes.CUSTOM_GIFT ? void 0 : s;
              (0, N.openGiftCodeAcceptModal)({
                processedCode: n,
                channelContext: t,
                customGiftMessage: i,
                giftInfo: l,
              });
            }),
            (this.handleEmbedClick = e => {
              let { giftCode: t } = this.props;
              null != t &&
                t.isSubscription &&
                (e.preventDefault(),
                c.default.open(G.UserSettingsSections.PREMIUM));
            }),
            (this.handleClaimPromotion = e => {
              var t;
              e.stopPropagation(), e.preventDefault();
              let n =
                null === (t = this.props.giftCode) || void 0 === t
                  ? void 0
                  : t.code;
              null != n &&
                window.open(G.Routes.BILLING_PROMOTION_REDEMPTION(n));
            }),
            (this.renderCustomGiftBox = e => {
              let { useReducedMotion: t, width: n } = this.props;
              if (null == e || null == e.giftStyle) return null;
              let a = B.LegacySeasonalGiftStyles.includes(e.giftStyle),
                l = i(F.customGiftEmbedWrapper, {
                  [F.legacySeasonalGiftEmbedWrapper]: a,
                  [F.giftEmbedWrapperHorizontal]:
                    n >= E.HORIZONTAL_EMBED_BREAKPOINT,
                }),
                r = i({
                  [F.legacySeasonalGiftEmbedBox]: a,
                  [F.legacySeasonalGiftEmbedBoxHorizontal]:
                    a && n >= E.HORIZONTAL_EMBED_BREAKPOINT,
                  [F.customGiftEmbedBox]: !a,
                  [F.customGiftEmbedBoxHorizontal]:
                    !a && n >= E.HORIZONTAL_EMBED_BREAKPOINT,
                });
              return (0, s.jsxs)("div", {
                className: l,
                children: [
                  !t &&
                    B.AllSeasonalGiftStyles.includes(e.giftStyle) &&
                    (0, s.jsx)(P.default, { className: F.snow, wind: 5 }),
                  a && (0, s.jsx)(v.default, { className: F.headerIcon }),
                  null != e.giftStyle &&
                    (0, s.jsx)(p.default, {
                      defaultAnimationState: e.redeemed
                        ? m.AnimationState.LOOP
                        : m.AnimationState.IDLE,
                      giftStyle: e.giftStyle,
                      className: r,
                    }),
                ],
              });
            });
        }
      }
      let Y = (0, _.default)((0, f.default)(V));
      var K = u.default.connectStores(
        [
          A.default,
          O.default,
          g.default,
          h.default,
          M.default,
          C.default,
          T.default,
        ],
        e => {
          let { code: t, author: n, currentUser: s } = e,
            a = A.default.get(t),
            l = null != a ? O.default.get(a.skuId) : null,
            i =
              null != a && null != a.userId
                ? g.default.getUser(a.userId)
                : null,
            r = T.default.useReducedMotion;
          return {
            sku: l,
            giftCode: a,
            gifter: i,
            currentUser: s,
            subscriptionPlan:
              null != a && null != a.subscriptionPlanId
                ? (0, U.getOrFetchSubscriptionPlan)(a.subscriptionPlanId)
                : null,
            isSelfGift:
              null != a
                ? C.default.getId() === a.userId
                : C.default.getId() === n.id,
            resolved: A.default.getIsResolved(t),
            libraryApplication:
              null != l && (null == a ? void 0 : a.entitlementBranches) != null
                ? x.firstLibraryApplicationForGiftCode(
                    a.entitlementBranches,
                    l,
                    h.default
                  )
                : null,
            useReducedMotion: r,
          };
        }
      )(Y);
    },
    206100: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OperatingSystemSection: function () {
            return T;
          },
        }),
        n("70102");
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("84084"),
        o = n("260162"),
        u = n("415844"),
        d = n("49111"),
        c = n("782340"),
        E = n("926494");
      let f = {
        [d.OperatingSystems.WINDOWS]: {
          icon: u.default,
          getLabel: () => c.default.Messages.WINDOWS,
        },
        [d.OperatingSystems.MACOS]: {
          icon: o.default,
          getLabel: () => c.default.Messages.MACOS,
        },
        [d.OperatingSystems.LINUX]: {
          icon: r.default,
          getLabel: () => c.default.Messages.LINUX,
        },
      };
      function _(e) {
        let { operatingSystem: t, className: n } = e,
          a = f[t];
        if (null == a) throw Error("Unexpected operating system: ".concat(t));
        let l = a.icon;
        return (0, s.jsx)(i.Tooltip, {
          text: a.getLabel(),
          children: e => (0, s.jsx)(l, { ...e, className: n }),
        });
      }
      let T = e => {
        let { systems: t, className: n, iconClassName: a } = e;
        return (0, s.jsx)("div", {
          className: l(E.OSSection, n),
          children: t.map(e =>
            (0, s.jsx)(
              _,
              {
                operatingSystem: e,
                className: l(E.purchaseUnitOperatingSystem, a),
              },
              e
            )
          ),
        });
      };
    },
    308757: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openIAPPurchaseModal: function () {
            return v;
          },
          openSKUPaymentModal: function () {
            return D;
          },
        }),
        n("70102");
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("77078"),
        r = n("913144"),
        o = n("850068"),
        u = n("427495"),
        d = n("73961"),
        c = n("465527"),
        E = n("55620"),
        f = n("775433"),
        _ = n("308592"),
        T = n("426380"),
        I = n("509167"),
        m = n("292687"),
        N = n("929479"),
        p = n("927078"),
        S = n("713536"),
        C = n("697218"),
        A = n("357957"),
        h = n("521012"),
        g = n("552712"),
        M = n("719923"),
        O = n("49111");
      function R(e, t) {
        let { applicationId: n, id: s } = e;
        return c.purchaseSKU(n, s).then(e => {
          let { entitlements: a } = e;
          return (0, d.openPurchaseConfirmationModal)(n, s, a, { context: t });
        });
      }
      function L() {
        let e = m.default.getWindow(O.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
          t = null != e && !e.closed;
        return t ? i.POPOUT_MODAL_CONTEXT : i.DEFAULT_MODAL_CONTEXT;
      }
      async function v(e) {
        let {
            applicationId: t,
            skuId: n,
            initialPlanId: a,
            openPremiumPaymentModal: i,
            analyticsLocations: r,
            analyticsLocationObject: o,
            context: d,
          } = e,
          c = g.default.get(n);
        if (null == c) {
          let e = await (0, E.fetchAllStoreListingsForApplication)(t),
            s = e.find(e => e.sku.id === n);
          l(null != s, "Could not find store listing for sku"),
            s.sku.type === O.SKUTypes.SUBSCRIPTION_GROUP &&
              (await (0, p.fetchAllSubscriptionListingsDataForApplication)(
                t,
                s.id
              ));
        }
        l(
          null != (c = null != c ? c : g.default.get(n)) &&
            c.applicationId === t,
          "SKU must belong to application"
        ),
          c.type === O.SKUTypes.SUBSCRIPTION &&
            !(0, _.getSubscriptionPlansLoaded)([c.id]) &&
            (await (0, f.fetchSubscriptionPlansForSKU)(c.id));
        let m = L(),
          A = C.default.getCurrentUser();
        if (c.premium) {
          if (M.default.canInstallPremiumApplications(A)) return R(c, d);
          await u.openModal(d),
            await (function (e, t, n, s, a) {
              let l = h.default.getPremiumSubscription(),
                i = { id: e.id, applicationId: e.applicationId };
              if (null != l) {
                let e = M.default.getClosestUpgrade(l.planId);
                if (null == e)
                  return Promise.reject(
                    Error("Could not find premium upgrade.")
                  );
                let t = {
                  initialPlanId: e,
                  followupSKUInfo: i,
                  analyticsLocations: s,
                  analyticsObject: n,
                };
                switch (a) {
                  case O.AppContext.APP:
                    return N.default.openPremiumPaymentModalInApp(t);
                  case O.AppContext.OVERLAY:
                    return N.default.openPremiumPaymentModalInOverlay(t);
                  default:
                    throw Error("Unexpected app context: ".concat(a));
                }
              }
              return t();
            })(c, i, o, r, d),
            await R(c, d);
        } else {
          if (c.type !== O.SKUTypes.SUBSCRIPTION)
            return new Promise(async (e, s) => {
              await (0, I.default)({
                applicationId: t,
                skuId: n,
                analyticsLocationObject: o,
                analyticsLocations: r,
                contextKey: m,
                onComplete: t => {
                  var n;
                  e(
                    null !== (n = null == t ? void 0 : t.entitlements) &&
                      void 0 !== n
                      ? n
                      : []
                  );
                },
                onClose: e => {
                  !e && s();
                },
              });
            });
          await (function (e, t, n, a, l) {
            return (0, T.openActivityApplicationPaymentModal)({
              applicationId: e,
              skuId: t,
              initialPlanId: n,
              analyticsLocationObject: a,
              analyticsLocations: l,
              renderHeader: (e, t, n) =>
                (0, s.jsx)(S.PurchaseHeader, { step: n, onClose: () => t(!1) }),
            });
          })(t, n, a, o, r);
        }
      }
      let P = {
        isIAP: !1,
        context: O.AppContext.APP,
        promotionId: null,
        isGift: !1,
      };
      function D(e, t, a) {
        let l =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          u = Promise.resolve();
        !A.default.hasFetchedPaymentSources && (u = o.fetchPaymentSources());
        let {
            isIAP: d,
            context: c,
            promotionId: E,
            isGift: f,
          } = { ...P, ...l },
          _ = L();
        return u.then(
          () =>
            new Promise((l, o) => {
              r.default.dispatch({
                type: "SKU_PURCHASE_MODAL_OPEN",
                applicationId: e,
                skuId: t,
                isIAP: d,
                isGift: f,
                analyticsLocation: a,
                promotionId: E,
                context: c,
                resolve: l,
                reject: o,
              }),
                (0, i.openModalLazy)(
                  async () => {
                    let { default: a } = await n
                      .el("787598")
                      .then(n.bind(n, "787598"));
                    return n => {
                      let { onClose: l, ...i } = n;
                      return (0, s.jsx)(a, {
                        ...i,
                        onClose: function () {
                          let e =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : null;
                          r.default.dispatch({
                            type: "SKU_PURCHASE_MODAL_CLOSE",
                            error: e,
                          }),
                            l();
                        },
                        applicationId: e,
                        skuId: t,
                        appContext: c,
                      });
                    };
                  },
                  { contextKey: _ }
                );
            })
        );
      }
    },
    501076: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
          StoreEmbedWithoutDimensions: function () {
            return P;
          },
        }),
        n("222007"),
        n("70102");
      var s = n("37983"),
        a = n("884691"),
        l = n("90915"),
        i = n("446674"),
        r = n("77078"),
        o = n("55620"),
        u = n("901582"),
        d = n("658457"),
        c = n("359606"),
        E = n("883610"),
        f = n("4919"),
        _ = n("86621"),
        T = n("737960"),
        I = n("299285"),
        m = n("686470"),
        N = n("290877"),
        p = n("552712"),
        S = n("698041"),
        C = n("271560"),
        A = n("49111"),
        h = n("782340"),
        g = n("728495");
      class M extends a.Component {
        get analyticsLocation() {
          let {
            analyticsContext: { location: e },
            analyticsSection: t,
          } = this.props;
          return {
            ...e,
            section: null != t ? t : A.AnalyticsSections.APPLICATION_EMBED,
            object: A.AnalyticsObjects.CARD,
          };
        }
        componentDidMount() {
          let { sku: e, skuId: t, storeListing: n } = this.props;
          (null == e || null == n) && (0, o.fetchStoreListingForSku)(t);
        }
        renderViewInStoreButton() {
          return (0, s.jsx)(r.Button.Link, {
            to: this.getStoreListingLocation(),
            className: g.actionButton,
            color: r.Button.Colors.GREEN,
            size: r.Button.Sizes.SMALL,
            children: h.default.Messages.GAME_ACTION_BUTTON_VIEW_IN_STORE,
          });
        }
        render() {
          let {
              sku: e,
              storeListing: t,
              width: n,
              fetchFailed: a,
              renderFallback: i,
            } = this.props,
            r = n > f.HORIZONTAL_EMBED_BREAKPOINT;
          if (null == e || null == t)
            return a
              ? i()
              : (0, s.jsx)(f.ResponsiveLoadingEmbedTile, { isHorizontal: r });
          return e.productLine === A.SKUProductLines.COLLECTIBLES
            ? (0, s.jsx)(u.default, {
                section: A.AnalyticsSections.APPLICATION_EMBED,
                children: this.renderApplicationTile(e, t),
              })
            : (0, s.jsx)(u.default, {
                section: A.AnalyticsSections.APPLICATION_EMBED,
                children: (0, s.jsx)(l.Link, {
                  onClick: this.handleLinkClick,
                  to: this.getStoreListingLocation(),
                  onMouseEnter: this.handleMouseEnter,
                  onMouseLeave: this.handleMouseLeave,
                  children: this.renderApplicationTile(e, t),
                }),
              });
        }
        constructor(...e) {
          super(...e),
            (this.state = { playing: !1, muted: !0 }),
            (this.handleToggleMute = () => {
              this.setState({ muted: !this.state.muted });
            }),
            (this.handleMouseEnter = () => {
              this.setState({ playing: !0 });
            }),
            (this.handleMouseLeave = () => {
              this.setState({ playing: !1 });
            }),
            (this.getStoreListingLocation = () => {
              let { sku: e } = this.props;
              if (null == e)
                throw Error(
                  "Should not be link to ApplicationStoreListing without SKU"
                );
              return (0, C.getStoreListingLocation)(e.id, {
                slug: e.slug,
                analyticsSource: this.analyticsLocation,
              });
            }),
            (this.handleActionButtonClick = e => e.preventDefault()),
            (this.handleBuyButtonClick = e => e.preventDefault()),
            (this.handleLinkClick = e => {
              let { onEmbedClick: t } = this.props;
              null != t && t(e);
            }),
            (this.renderApplicationTile = (e, t) => {
              let {
                  inLibrary: n,
                  width: a,
                  renderCustomTitle: l,
                  renderCustomTagline: i,
                  renderCustomMedia: r,
                } = this.props,
                { playing: o, muted: u } = this.state,
                d = a > f.HORIZONTAL_EMBED_BREAKPOINT;
              return (0, s.jsx)(E.default, {
                sku: e,
                storeListing: t,
                playing: o,
                muted: u,
                inLibrary: n,
                onToggleMute: this.handleToggleMute,
                renderCustomActions: () => this.renderActions(e),
                renderCustomTitle: l,
                renderCustomTagline: i,
                renderCustomMedia: r,
                isHorizontal: d,
                isEmbed: !0,
              });
            }),
            (this.renderActions = e => {
              let {
                inLibrary: t,
                application: n,
                skuId: a,
                libraryApplication: l,
                renderCustomActions: i,
              } = this.props;
              if (null != i)
                return (0, s.jsx)("div", {
                  className: g.tileActions,
                  children: i(),
                });
              if (null == n) return null;
              let o = null != n && n.primarySkuId === a,
                u = null != l && l.hasFlag(A.LibraryApplicationFlags.HIDDEN);
              return (0, s.jsxs)("div", {
                className: g.tileActions,
                children: [
                  !o || u
                    ? this.renderViewInStoreButton()
                    : (0, s.jsx)(d.default, {
                        application: n,
                        customDisabledColor: r.Button.Colors.PRIMARY,
                        size: r.Button.Sizes.SMALL,
                        className: g.actionButton,
                        source: A.AnalyticsLocations.MESSAGE_EMBED,
                        onClick: this.handleActionButtonClick,
                      }),
                  (t && !u) || e.premium
                    ? null
                    : (0, s.jsx)(c.default, {
                        type: c.default.Types.EMBED,
                        sku: e,
                        inLibrary: !1,
                      }),
                ],
              });
            });
        }
      }
      M.defaultProps = { renderFallback: A.NOOP };
      let O = [p.default, N.default, m.default, S.default];
      function R(e) {
        let { skuId: t } = e,
          n = p.default.get(t),
          s = null != n ? I.default.getApplication(n.applicationId) : null;
        return {
          sku: n,
          application: s,
          fetchFailed: p.default.didFetchingSkuFail(t),
          inLibrary:
            null != n &&
            m.default.hasApplication(n.applicationId, n.applicationId, !0),
          storeListing: null != n ? S.default.getForSKU(n.id) : null,
          libraryApplication:
            null != n
              ? m.default.getLibraryApplication(
                  n.applicationId,
                  n.applicationId,
                  !0
                )
              : null,
        };
      }
      let L = (0, T.default)((0, _.default)(M));
      var v = i.default.connectStores(O, R)(L);
      let P = (0, _.default)(i.default.connectStores(O, R)(M));
    },
    389696: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TestModeSKUButtonEnums: function () {
            return f;
          },
          default: function () {
            return T;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("272030"),
        o = n("741130"),
        u = n("299285"),
        d = n("552712"),
        c = n("271560"),
        E = n("782340");
      let f = {
        DropdownSizes: o.default.DropdownSizes,
        Sizes: o.default.Sizes,
        Colors: o.default.Colors,
        Looks: o.default.Looks,
      };
      class _ extends a.PureComponent {
        render() {
          let {
            skus: e,
            children: t,
            applicationId: n,
            primarySKU: a,
            onSKUSelect: l,
            ...i
          } = this.props;
          return (0, s.jsx)(o.default, {
            onClick: this.handleClick,
            onDropdownClick: e.length > 0 ? this.handleContextMenu : null,
            onContextMenu: e.length > 0 ? this.handleContextMenu : void 0,
            ...i,
            children: t,
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderContextMenu = () => {
              let { skus: e, onSKUSelect: t, onMenuSelect: n } = this.props;
              return (0, s.jsx)(i.Menu, {
                onSelect: n,
                navId: "test-skus",
                "aria-label": E.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                onClose: r.closeContextMenu,
                children: e.map(e =>
                  (0, s.jsx)(
                    i.MenuItem,
                    {
                      id: "".concat(e.id),
                      label: e.name,
                      action: () => {
                        null == t || t(e);
                      },
                    },
                    "".concat(e.id)
                  )
                ),
              });
            }),
            (this.handleContextMenu = e => {
              e.stopPropagation(), r.openContextMenu(e, this.renderContextMenu);
            }),
            (this.handleClick = () => {
              let { onSKUSelect: e, primarySKU: t } = this.props;
              null != t && (null == e || e(t));
            });
        }
      }
      var T = l.default.connectStores([d.default, u.default], e => {
        var t;
        let { applicationId: n } = e,
          s = (0, c.getPrimarySKUForApplication)(n, u.default, d.default);
        return {
          skus: (null !== (t = d.default.getForApplication(n)) && void 0 !== t
            ? t
            : []
          ).sort((e, t) =>
            null != s && e.id === s.id
              ? -1
              : null != s && t.id === s.id
                ? 1
                : e.name >= t.name
                  ? -1
                  : 1
          ),
          primarySKU: s,
        };
      })(_);
    },
    550762: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078");
      function l(e, t) {
        (0, a.openModalLazy)(async () => {
          let { default: a } = await n.el("557981").then(n.bind(n, "557981"));
          return n => (0, s.jsx)(a, { channelId: e, messageId: t, ...n });
        });
      }
    },
    650044: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          open: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("629109"),
        i = n("135230"),
        r = n("782340");
      let o = null;
      function u() {
        null !== o && (0, a.closeModal)(o), (o = null);
      }
      function d() {
        l.default.setSilenceWarning(!1), u();
      }
      function c() {
        o = (0, a.openModal)(e =>
          (0, s.jsx)(i.default, {
            title: r.default.Messages.CONFIRM_DISABLE_SILENCE_TITLE,
            body: r.default.Messages.CONFIRM_DISABLE_SILENCE_BODY,
            secondaryConfirmText:
              r.default.Messages.CONFIRM_DISABLE_SILENCE_DONT_SHOW,
            onConfirmSecondary: d,
            onConfirm: u,
            confirmText: r.default.Messages.OKAY,
            ...e,
          })
        );
      }
    },
    607387: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("711444");
      n.es(s, t);
    },
    216199: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("457646");
      n.es(s, t);
    },
    249736: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("266415");
      n.es(s, t);
    },
    858994: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("970738");
      n.es(s, t);
    },
    923748: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("254845");
      n.es(s, t);
    },
    729: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("157082");
      n.es(s, t);
    },
    582601: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("331801");
      n.es(s, t);
    },
    779807: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("528993");
      n.es(s, t);
    },
    876927: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("222007");
      var s = n("884691"),
        a = n("731898");
      function l() {
        let { ref: e, width: t } = (0, a.default)(),
          [n, l] = s.useState();
        return (
          s.useEffect(() => {
            null == n && null != t && l(t);
          }, [n, t]),
          [e, n]
        );
      }
    },
    722525: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          transitionToChannel: function () {
            return o;
          },
          transitionToPage: function () {
            return u;
          },
        });
      var s = n("77078"),
        a = n("255397"),
        l = n("406189"),
        i = n("393027"),
        r = n("49111");
      function o(e, t) {
        let n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
          o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        !(0, s.hasAnyModalOpen)() &&
          (n && l.default.channelListScrollTo(e, t),
          o && null != t && a.default.updateChatOpen(t, !0),
          i.default.getState().updatePath(r.Routes.CHANNEL(e, t)));
      }
      function u(e) {
        !(0, s.hasAnyModalOpen)() && i.default.getState().updatePath(e);
      }
    },
    286509: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("550368"),
        a = n("954016");
      function l(e, t) {
        return null == e || null == e.assets || null == e.assets.large_image
          ? null
          : (0, s.getAssetImage)(t, e.assets.large_image, [
              a.ACTIVITY_INVITE_COVER_IMAGE_SIZE,
              a.ACTIVITY_INVITE_COVER_IMAGE_SIZE,
            ]);
      }
    },
    549548: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("782340");
      function a(e) {
        return e > 0
          ? s.default.Messages.EMBEDDED_ACTIVITIES_MAX_PARTICIPANTS.format({
              count: e,
            })
          : s.default.Messages.EMBEDDED_ACTIVITIES_UNLIMITED_PARTICIPANTS;
      }
    },
    676223: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("718517"),
        a = n("299039");
      let l = 2 * s.default.Millis.HOUR;
      function i(e, t, n) {
        if (null == e) return !1;
        let s = null != t.activity ? t.activity.party_id : null,
          i = null != s && (null == e.party || e.party.id !== s),
          r = a.default.extractTimestamp(t.id) + l < Date.now(),
          o = null != e.application_id && e.application_id !== n;
        return !i && !r && !o;
      }
    },
    969380: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("222007");
      var s = n("884691"),
        a = n("550368");
      let l = ["embedded_cover", "embedded_background"];
      function i(e) {
        let { applicationId: t, size: n, names: i = l } = e,
          [r, o] = s.useState(null),
          [u, d] = s.useState(!0),
          c = (0, a.getAssetImage)(t, r, n);
        return (
          s.useEffect(() => {
            (0, a.getAssets)(t).then(e => {
              for (let [t, n] of (d(!1), Object.entries(e)))
                if (null != n && "" !== n.id && i.includes(n.name)) {
                  o(n.id);
                  return;
                }
            });
          }, [t]),
          { url: c, state: u ? "loading" : null != c ? "fetched" : "not-found" }
        );
      }
    },
    817039: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("988150"),
        i = n("23619");
      function r(e) {
        let {
            imageBackground: t,
            applicationName: n,
            imageClassName: r,
            imageNotFoundClassName: o,
          } = e,
          [u, d] = a.useState(!1);
        return "not-found" === t.state || u
          ? (0, s.jsx)("div", {
              className: o,
              children: (0, s.jsx)(l.default, { className: i.brokenImageIcon }),
            })
          : "loading" === t.state
            ? null
            : (0, s.jsx)("img", {
                alt: n,
                className: r,
                src: t.url,
                onError: () => d(!0),
              });
      }
    },
    627697: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return b;
          },
        }),
        n("222007"),
        n("702976");
      var s = n("37983");
      n("884691");
      var a = n("90915"),
        l = n("446674"),
        i = n("769846"),
        r = n("77078"),
        o = n("404118"),
        u = n("997289"),
        d = n("812204"),
        c = n("685665"),
        E = n("442939"),
        f = n("870346"),
        _ = n("950104"),
        T = n("42203"),
        I = n("697218"),
        m = n("155207"),
        N = n("811305"),
        p = n("568734"),
        S = n("449008"),
        C = n("159885"),
        A = n("550766"),
        h = n("191225"),
        g = n("602718"),
        M = n("706508"),
        O = n("986214"),
        R = n("549548"),
        L = n("969380"),
        v = n("141962"),
        P = n("478272"),
        D = n("954016"),
        x = n("49111"),
        y = n("782340"),
        U = n("462813");
      let j = (0, C.cssValueToNumber)(
        i.default.ACTIVITY_BOOKMARK_EMBED_IMAGE_WIDTH
      );
      function b(e) {
        var t, n, i, C;
        let { applicationId: b, message: G } = e,
          { analyticsLocations: B } = (0, c.default)(
            d.default.ACTIVITY_BOOKMARK
          ),
          k = (0, u.useAnalyticsContext)(),
          F = G.channel_id,
          w = (0, l.useStateFromStores)(
            [T.default],
            () => T.default.getChannel(F),
            [F]
          ),
          H = null == w ? void 0 : w.guild_id,
          V = null != w && (w.isGuildVoice() || w.isPrivate()),
          Y = (0, l.useStateFromStores)([h.default], () =>
            h.default.getSelfEmbeddedActivityForChannel(F)
          ),
          K = (null == Y ? void 0 : Y.applicationId) === b,
          [W, z] = (0, E.default)([
            b,
            null !== (n = null == Y ? void 0 : Y.applicationId) && void 0 !== n
              ? n
              : "",
          ]),
          Q = (0, R.default)(
            null !== (i = null == W ? void 0 : W.maxParticipants) &&
              void 0 !== i
              ? i
              : 0
          ),
          [Z] = (0, l.useStateFromStoresArray)(
            [h.default],
            () =>
              V
                ? h.default
                    .getEmbeddedActivitiesForChannel(F)
                    .filter(e => e.applicationId === b)
                : [],
            [b, F, V]
          ),
          J = Array.from(
            null !== (C = null == Z ? void 0 : Z.userIds) && void 0 !== C
              ? C
              : []
          ),
          q = (0, l.useStateFromStoresArray)(
            [I.default],
            () => J.map(e => I.default.getUser(e)).filter(S.isNotNullish),
            [J]
          ),
          X = (0, L.default)({ applicationId: b, size: j }),
          $ = f.default.getWindowOpen(x.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
          ee =
            q.length > 0 ? y.default.Messages.JOIN : y.default.Messages.START,
          et = async () => {
            if (V) {
              let { activityConfigs: e, applications: t } = await (0,
                A.fetchShelf)({ guildId: H }),
                n = (0, g.default)({
                  applicationId: b,
                  activityConfigs: e,
                  applications: t,
                });
              if (null != Z && q.length > 0)
                await (0, M.default)({
                  applicationId: Z.applicationId,
                  currentEmbeddedApplication: z,
                  activityChannelId: F,
                  embeddedActivitiesManager: v.default,
                  locationObject: k.location,
                  analyticsLocations: B,
                });
              else {
                let e = w.isPrivate() && !_.default.isCallActive(F),
                  t = () =>
                    (0, O.default)({
                      activityItem: n,
                      currentEmbeddedApplication: z,
                      channelId: F,
                      guildId: H,
                      embeddedActivitiesManager: v.default,
                      analyticsLocations: B,
                    });
                e
                  ? o.default.show({
                      title:
                        y.default.Messages.DEFAULT_CONFIRMATION_MODAL_HEADER,
                      cancelText: y.default.Messages.CANCEL,
                      confirmText: y.default.Messages.CONFIRM,
                      onConfirm: () => t(),
                      body: y.default.Messages
                        .EMBEDDED_ACTIVITIES_DM_START_CONFIRMATION_TEXT,
                    })
                  : t();
              }
            } else
              (0, P.default)({
                guildId: H,
                locationObject: k.location,
                openInPopout: $,
                initialSelectedApplicationId: b,
                initialSlide: D.ActivityShelfSlides.SELECT_CHANNEL,
                analyticsLocations: B,
              });
          };
        return null != W && (0, p.hasFlag)(W.flags, x.ApplicationFlags.EMBEDDED)
          ? (0, s.jsx)(c.AnalyticsLocationProvider, {
              value: B,
              children: (0, s.jsxs)("div", {
                className: U.container,
                children: [
                  (0, s.jsx)("div", {
                    className: U.imgContainer,
                    children: (0, s.jsx)("img", {
                      className: U.img,
                      alt: W.name,
                      src: X.url,
                    }),
                  }),
                  (0, s.jsxs)("div", {
                    className: U.content,
                    children: [
                      (0, s.jsx)(r.Heading, {
                        className: U.heading,
                        variant: "heading-xl/semibold",
                        children: W.name,
                      }),
                      (0, s.jsx)(r.Heading, {
                        className: U.description,
                        variant: "heading-sm/medium",
                        children:
                          null === (t = W.description) || void 0 === t
                            ? void 0
                            : t.trim(),
                      }),
                      (0, s.jsx)(r.Heading, {
                        className: U.learnMore,
                        variant: "heading-sm/medium",
                        children: (0, s.jsx)(a.Link, {
                          to: x.Routes.ACTIVITY_DETAILS(b),
                          children: y.default.Messages.LEARN_MORE,
                        }),
                      }),
                      (0, s.jsxs)("div", {
                        className: U.cta,
                        children: [
                          q.length > 0
                            ? (0, s.jsx)("div", {
                                className: U.avatars,
                                children: (0, s.jsx)(N.default, {
                                  guildId: H,
                                  users: q,
                                  max: 4,
                                }),
                              })
                            : (0, s.jsxs)("div", {
                                className: U.maxParticipants,
                                children: [
                                  (0, s.jsx)(m.default, {
                                    className: U.peopleIcon,
                                  }),
                                  (0, s.jsx)(r.Text, {
                                    variant: "text-xs/semibold",
                                    children: Q,
                                  }),
                                ],
                              }),
                          (0, s.jsx)("div", {
                            className: U.buttonWrapper,
                            children: (0, s.jsx)(r.Button, {
                              onClick: et,
                              className: U.button,
                              color: r.ButtonColors.GREEN,
                              disabled: K,
                              children: ee,
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            })
          : null;
      }
    },
    478272: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("974889"),
        i = n("954016"),
        r = n("49111");
      function o(e) {
        let {
          channel: t,
          guildId: o,
          locationObject: u,
          openInPopout: d,
          initialSelectedApplicationId: c,
          initialSlide: E = i.ActivityShelfSlides.DIRECTORY,
          enableSelectedTextChannelInvite: f = !1,
          analyticsLocations: _,
        } = e;
        d && (0, l.default)(r.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
        let T = d ? a.POPOUT_MODAL_CONTEXT : a.DEFAULT_MODAL_CONTEXT;
        return (0, a.openModalLazy)(
          async () => {
            let { default: e } = await n.el("605455").then(n.bind(n, "605455"));
            return n =>
              (0, s.jsx)(e, {
                ...n,
                channel: t,
                guildId: o,
                locationObject: u,
                initialSlide: E,
                initialSelectedApplicationId: c,
                enableSelectedTextChannelInvite: f,
                analyticsLocations: _,
              });
          },
          { modalKey: i.ACTIVITY_SHELF_WEB_MODAL_KEY, contextKey: T }
        );
      }
    },
    527088: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("394846"),
        i = n("65597"),
        r = n("77078"),
        o = n("811425"),
        u = n("915639"),
        d = n("653047"),
        c = n("162771"),
        E = n("697218"),
        f = n("174622"),
        _ = n("627490"),
        T = n("599110"),
        I = n("613676"),
        m = n("721698"),
        N = n("349503"),
        p = n("412707"),
        S = n("646186"),
        C = n("49111"),
        A = n("782340"),
        h = n("332530");
      function g(e) {
        var t, n;
        let { code: g, message: M } = e,
          [O, R, L] = (0, i.useStateFromStoresArray)(
            [N.default],
            () => [
              N.default.getApplication(g),
              N.default.isInvalidApplication(g),
              N.default.getApplicationFetchState(g),
            ],
            [g]
          ),
          v = (0, i.useStateFromStores)([u.default], () => u.default.locale),
          P = (0, i.useStateFromStores)([c.default], () => {
            var e;
            return null !== (e = c.default.getGuildId()) && void 0 !== e
              ? e
              : void 0;
          }),
          D = (0, i.useStateFromStores)([E.default], () =>
            E.default.getCurrentUser()
          ),
          [x, y] = a.useState(!1),
          U = a.useCallback(e => {
            e && y(!0);
          }, []),
          j = (0, o.useIsVisible)(U);
        a.useEffect(() => {
          (0, m.getEmbedApplication)(g);
        }, [g]),
          a.useEffect(() => {
            x &&
              L === N.FetchState.FETCHED &&
              T.default.track(
                C.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_VIEWED,
                {
                  application_id: g,
                  device_platform: l.isMobile ? "mobile_web" : "desktop_web",
                  sender_user_id: M.author.id,
                  guild_id: P,
                  channel_id: M.channel_id,
                }
              );
          }, [
            x,
            g,
            null == D ? void 0 : D.id,
            M.channel_id,
            P,
            M.author.id,
            L,
          ]),
          a.useEffect(() => {
            x &&
              R &&
              T.default.track(
                C.AnalyticEvents.APP_DIRECTORY_PROFILE_INVALID_EMBED_VIEWED,
                {
                  device_platform: l.isMobile ? "mobile_web" : "desktop_web",
                  sender_user_id: M.author.id,
                  guild_id: P,
                  channel_id: M.channel_id,
                }
              );
          }, [x, P, R, M.author.id, M.channel_id]);
        let b = e => {
          T.default.track(
            C.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_APP_INFO_CLICKED,
            {
              application_id: g,
              device_platform: l.isMobile ? "mobile_web" : "desktop_web",
              clicked_section: e,
              guild_id: P,
              channel_id: M.channel_id,
            }
          ),
            (0, S.goToAppDirectory)({
              view: p.ApplicationDirectoryViews.APPLICATION,
              guildId: P,
              applicationId: g,
              entrypoint: {
                name: p.ApplicationDirectoryEntrypointNames
                  .APPLICATION_DIRECTORY_PROFILE_EMBED,
              },
            });
        };
        if (R)
          return (0, s.jsxs)(f.default, {
            containerRef: j,
            children: [
              (0, s.jsx)(f.default.Header, {
                text: A.default.Messages
                  .APP_DIRECTORY_PROFILE_EMBED_INVALID_HEADER,
              }),
              (0, s.jsx)(f.default.Body, {
                children: (0, s.jsxs)("div", {
                  className: h.invalidBody,
                  children: [
                    (0, s.jsx)(f.default.Icon, { expired: !0 }),
                    (0, s.jsx)(f.default.Info, {
                      expired: !0,
                      title:
                        A.default.Messages
                          .APP_DIRECTORY_PROFILE_EMBED_INVALID_INFO_TITLE,
                      children:
                        A.default.Messages
                          .APP_DIRECTORY_PROFILE_EMBED_INVALID_INFO_BODY,
                    }),
                  ],
                }),
              }),
            ],
          });
        if (null == O || L === N.FetchState.FETCHING)
          return (0, s.jsxs)(f.default, {
            containerRef: j,
            children: [
              (0, s.jsx)(f.default.Header, {
                text: A.default.Messages
                  .APP_DIRECTORY_PROFILE_EMBED_RESOLVING_HEADER,
              }),
              (0, s.jsx)(f.default.Body, { resolving: !0 }),
            ],
          });
        let G = new Intl.NumberFormat(v, {
            notation: "compact",
            compactDisplay: "short",
          }),
          B = G.format(
            null !==
              (n =
                null === (t = O.directory_entry) || void 0 === t
                  ? void 0
                  : t.guild_count) && void 0 !== n
              ? n
              : 0
          );
        return (0, s.jsxs)(f.default, {
          containerRef: j,
          children: [
            (0, s.jsx)(f.default.Header, {
              text: A.default.Messages.APP_DIRECTORY_PROFILE_EMBED_HEADER,
            }),
            (0, s.jsxs)(f.default.Body, {
              children: [
                (0, s.jsxs)("div", {
                  className: h.applicationInfoContainer,
                  children: [
                    (0, s.jsx)(f.default.Icon, {
                      application: d.default.createFromServer(O),
                      className: h.applicationIcon,
                      onClick: () => b("application_icon"),
                    }),
                    (0, s.jsx)(f.default.Info, {
                      title: (0, s.jsx)(r.Clickable, {
                        onClick: () => b("application_name"),
                        children: O.name,
                      }),
                      children: (0, s.jsxs)(r.Clickable, {
                        className: h.guildCountContainer,
                        onClick: () => b("application_guild_count"),
                        children: [
                          (0, s.jsx)(_.default, {
                            width: 16,
                            height: 16,
                            className: h.guildCountIcon,
                          }),
                          A.default.Messages.APP_DIRECTORY_PROFILE_EMBED_GUILD_COUNT.format(
                            { guildCount: B }
                          ),
                        ],
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)(f.default.Button, {
                  onClick: () => {
                    null != O &&
                      (0, I.installApplication)({
                        applicationId: g,
                        customInstallUrl: O.custom_install_url,
                        installParams: O.install_params,
                        integrationTypesConfig: O.integration_types_config,
                        guildId: P,
                        source: "app_directory_profile_embed",
                      });
                  },
                  color: f.default.Button.Colors.GREEN,
                  children:
                    A.default.Messages.APP_DIRECTORY_PROFILE_EMBED_BUTTON,
                }),
              ],
            }),
          ],
        });
      }
    },
    850642: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("222007"),
        n("702976");
      var s = n("446674"),
        a = n("95410"),
        l = n("913144"),
        i = n("271938"),
        r = n("42203"),
        o = n("957255"),
        u = n("697218"),
        d = n("568734"),
        c = n("49111");
      let E = "ChannelFollowingBumpChannels",
        f = new Set(),
        _ = new Set();
      class T extends s.default.Store {
        initialize() {
          this.waitFor(i.default), (f = new Set(a.Storage.get(E)));
        }
        shouldShowBump(e) {
          return _.has(e);
        }
      }
      T.displayName = "ChannelFollowingPublishBumpStore";
      var I = new T(l.default, {
        MESSAGE_CREATE: function (e) {
          var t;
          let { channelId: n, message: s, optimistic: a } = e;
          if (a || f.has(n)) return !1;
          let l = r.default.getChannel(n),
            i = u.default.getCurrentUser(),
            E =
              null != l &&
              l.type === c.ChannelTypes.GUILD_ANNOUNCEMENT &&
              s.type === c.MessageTypes.DEFAULT &&
              (null != i &&
              (null === (t = s.author) || void 0 === t ? void 0 : t.id) === i.id
                ? o.default.can(c.Permissions.SEND_MESSAGES, l)
                : o.default.can(c.Permissions.MANAGE_MESSAGES, l)) &&
              !d.hasFlag(Number(s.flags), c.MessageFlags.CROSSPOSTED);
          if (!E) return !1;
          _.add(s.id);
        },
        MESSAGE_UPDATE: function (e) {
          let { message: t } = e,
            n = _.has(t.id);
          n &&
            d.hasFlag(Number(t.flags), c.MessageFlags.CROSSPOSTED) &&
            _.delete(t.id);
        },
        CHANNEL_SELECT: function (e) {
          _.clear();
        },
        CHANNEL_FOLLOWING_PUBLISH_BUMP_DISMISSED: function (e) {
          let { messageId: t } = e;
          _.delete(t);
        },
        CHANNEL_FOLLOWING_PUBLISH_BUMP_HIDE_PERMANENTLY: function (e) {
          let { channelId: t } = e;
          f.add(t), a.Storage.set(E, f), _.clear();
        },
      });
    },
    222650: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("429224"),
        o = n("550762"),
        u = n("381546"),
        d = n("733160"),
        c = n("713573"),
        E = n("850642"),
        f = n("782340"),
        _ = n("382051"),
        T = e => {
          let { channelId: t, messageId: n } = e,
            T = (0, l.useStateFromStores)(
              [E.default],
              () => E.default.shouldShowBump(n),
              [n]
            ),
            I = a.useCallback(() => {
              r.default.dismissPublishBump(n), (0, o.default)(t, n);
            }, [t, n]),
            m = a.useCallback(() => {
              r.default.dismissPublishBump(n);
            }, [n]),
            N = a.useCallback(() => {
              r.default.permanentlyHidePublishBump(t);
            }, [t]);
          return T
            ? (0, s.jsxs)("div", {
                className: _.container,
                children: [
                  (0, s.jsxs)("div", {
                    className: _.bumpBox,
                    children: [
                      (0, s.jsx)(d.default, { className: _.icon }),
                      (0, s.jsx)(c.default, {
                        className: _.tagline,
                        size: c.default.Sizes.SIZE_14,
                        children: f.default.Messages.NEWS_CHANNEL_PUBLISH_BUMP,
                      }),
                      (0, s.jsx)(i.Button, {
                        color: i.Button.Colors.LINK,
                        look: i.Button.Looks.LINK,
                        size: i.Button.Sizes.MIN,
                        className: _.publish,
                        onClick: I,
                        children: f.default.Messages.NEWS_CHANNEL_PUBLISH,
                      }),
                      (0, s.jsx)(i.Clickable, {
                        onClick: m,
                        children: (0, s.jsx)(u.default, {
                          className: _.closeIcon,
                          width: 16,
                          height: 16,
                        }),
                      }),
                    ],
                  }),
                  (0, s.jsx)(i.Text, {
                    color: "text-muted",
                    className: _.hidePermanently,
                    variant: "text-sm/normal",
                    children: (0, s.jsx)(i.Clickable, {
                      onClick: N,
                      children:
                        f.default.Messages
                          .NEWS_CHANNEL_PUBLISH_BUMP_HIDE_PERMANENTLY,
                    }),
                  }),
                ],
              })
            : null;
        };
    },
    315176: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sendRandomStickerOrEmoji: function () {
            return m;
          },
        }),
        n("834022");
      var s = n("819689"),
        a = n("385976"),
        l = n("884351"),
        i = n("866353"),
        r = n("467094"),
        o = n("364685"),
        u = n("161585"),
        d = n("305961"),
        c = n("697218"),
        E = n("402671"),
        f = n("299039"),
        _ = n("49111"),
        T = n("958706");
      function I(e) {
        let t = d.default.getGuild(e);
        return (
          null != t &&
          (t.nsfwLevel === _.GuildNSFWContentLevel.DEFAULT ||
            t.nsfwLevel === _.GuildNSFWContentLevel.SAFE)
        );
      }
      async function m(e, t) {
        var n, _, m;
        let N = t.getGuildId();
        if (null == N) return;
        let p = d.default.getGuild(N);
        if (null == p) return;
        let S = c.default.getCurrentUser();
        if (null == S) return;
        await (0, r.fetchStickerPacks)();
        let C = Array.from(o.default.getAllStickersIterator()),
          A = C.filter(e => e.type === u.MetaStickerType.GUILD),
          h = A.filter(
            e => I(e.guild_id) && (0, i.isSendableSticker)(e, S, t)
          ).sort((e, t) => -f.default.compare(e.id, t.id));
        if (h.length > 5) {
          let a = [h[Math.floor(Math.pow(Math.random(), 2) * h.length)].id];
          s.default.sendStickers(t.id, a, "", {
            messageReference: {
              guild_id:
                null !== (n = t.getGuildId()) && void 0 !== n ? n : void 0,
              channel_id: t.id,
              message_id: e,
            },
          });
          return;
        }
        let g = d.default
          .getGuildIds()
          .filter(I)
          .map(e => a.default.getUsableGuildEmoji(e))
          .flat()
          .filter(
            e =>
              null ==
              E.default.getEmojiUnavailableReason({
                emoji: e,
                channel: t,
                guildId: N,
                intention: T.EmojiIntention.CHAT,
              })
          )
          .sort((e, t) => -f.default.compare(e.id, t.id));
        if (g.length > 10) {
          let n = g[Math.floor(Math.pow(Math.random(), 2) * g.length)];
          s.default.sendMessage(
            t.id,
            l.default.parse(t, n.allNamesString),
            !1,
            {
              messageReference: {
                guild_id:
                  null !== (_ = t.getGuildId()) && void 0 !== _ ? _ : void 0,
                channel_id: t.id,
                message_id: e,
              },
            }
          );
          return;
        }
        let M = C.filter(e => e.type === u.MetaStickerType.STANDARD),
          O = [M[Math.floor(Math.random() * M.length)].id];
        s.default.sendStickers(t.id, O, "", {
          messageReference: {
            guild_id:
              null !== (m = t.getGuildId()) && void 0 !== m ? m : void 0,
            channel_id: t.id,
            message_id: e,
          },
        });
      }
    },
    881536: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("367376"),
        o = n("560176"),
        u = n("304198"),
        d = n("388142"),
        c = n("49111"),
        E = n("782340"),
        f = n("962960");
      function _(e) {
        let { message: t, channel: a, compact: r } = e,
          o = null != t.embeds && t.embeds.length > 0;
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(u.default, {
              className: l(f.mainContainer, { [f.compact]: r }),
              icon: n("127067"),
              compact: r,
              children: (0, s.jsx)("div", {
                className: l(f.content, { [f.compact]: r }),
                children: (0, s.jsx)("div", {
                  className: l(f.messageContent, { [f.compact]: r }),
                  children: t.content,
                }),
              }),
            }),
            (0, s.jsx)("div", {
              className: l(f.embedContent, { [f.compact]: r }),
              children: (0, s.jsx)(T, { message: t }),
            }),
            (0, s.jsx)("div", {
              className: f.actions,
              children: (0, s.jsx)(i.Button, {
                color: i.Button.Colors.PRIMARY,
                onClick: () => {
                  o
                    ? (0, d.updateGamingStats)(t)
                    : (0, d.sendGamingStatsMessage)(a.guild_id, a.id, t.id);
                },
                children: E.default.Messages.SYSTEM_MESSAGE_GET_GAMING_STATS,
              }),
            }),
          ],
        });
      }
      function T(e) {
        var t;
        let { message: n } = e,
          [a] = null !== (t = n.embeds) && void 0 !== t ? t : [];
        return null == a
          ? null
          : (0, s.jsx)(o.default, {
              className: f.embed,
              embed: a,
              renderTitle: (e, t) =>
                r.default.parseEmbedTitle(t, !0, { channelId: n.channel_id }),
              renderDescription: (e, t, s) =>
                r.default.parse(t, !0, { channelId: n.channel_id }),
              autoPlayGif: !1,
              renderImageComponent: e => (0, c.NOOP_NULL)(),
              renderVideoComponent: e => (0, c.NOOP_NULL)(),
              renderLinkComponent: e => (0, c.NOOP_NULL)(),
            });
      }
    },
    441979: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("834022");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("529805"),
        d = n("364685"),
        c = n("41170"),
        E = n("46829"),
        f = n("840817"),
        _ = n("304198"),
        T = n("599110"),
        I = n("659500"),
        m = n("315176"),
        N = n("49111"),
        p = n("782340"),
        S = n("232979");
      function C(e) {
        let { message: t, channel: l, compact: C } = e,
          A = (0, r.useStateFromStoresArray)([d.default], () => {
            let e = d.default.getAllGuildStickers();
            return Array.from(e.values()).flat();
          }),
          h = A.slice(0, 20),
          [g, M] = a.useState(null);
        return (a.useEffect(() => {
          let e = setInterval(() => {
            h.length > 0 && M(h[Math.floor(Math.random() * h.length)]);
          }, 500);
          return () => clearInterval(e);
        }, [h]),
        null == l.guild_id)
          ? null
          : (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(_.default, {
                  className: i(S.mainContainer, { [S.compact]: C }),
                  icon: n("127067"),
                  compact: C,
                  children: (0, s.jsx)("div", {
                    className: i(S.content, { [S.compact]: C }),
                    children: (0, s.jsx)("div", {
                      className: i(S.messageContent, { [S.compact]: C }),
                      children:
                        "" !== t.content
                          ? t.content
                          : p.default.Messages.DEADCHAT_PROMPT_1,
                    }),
                  }),
                }),
                (0, s.jsxs)("div", {
                  className: S.actions,
                  children: [
                    (0, s.jsx)(o.TooltipContainer, {
                      text: p.default.Messages.CHANNEL_PROMPT_UPLOAD_IMAGE_CTA,
                      children: (0, s.jsx)(o.Button, {
                        color: o.Button.Colors.PRIMARY,
                        onClick: () => {
                          T.default.track(
                            N.AnalyticEvents.CHANNEL_PROMPT_ACTION_CLICKED,
                            {
                              message_id: t.id,
                              channel_id: l.id,
                              guild_id: l.guild_id,
                              action_type: "upload_file",
                            }
                          ),
                            I.ComponentDispatch.dispatch(
                              N.ComponentActions.UPLOAD_FILE
                            ),
                            (0, u.createPendingReply)({
                              message: t,
                              channel: l,
                              shouldMention: !0,
                            });
                        },
                        children: (0, s.jsx)(f.default, {}),
                      }),
                    }),
                    (0, s.jsx)(o.TooltipContainer, {
                      text: p.default.Messages
                        .CHANNEL_PROMPT_RANDOM_STICKER_CTA,
                      children: (0, s.jsx)(o.Button, {
                        color: o.Button.Colors.PRIMARY,
                        onClick: () => {
                          T.default.track(
                            N.AnalyticEvents.CHANNEL_PROMPT_ACTION_CLICKED,
                            {
                              message_id: t.id,
                              channel_id: l.id,
                              guild_id: l.guild_id,
                              action_type: "sticker",
                            }
                          ),
                            (0, m.sendRandomStickerOrEmoji)(t.id, l);
                        },
                        children:
                          null != g
                            ? (0, s.jsx)(c.default, { size: 32, sticker: g })
                            : (0, s.jsx)(E.default, {}),
                      }),
                    }),
                  ],
                }),
              ],
            });
      }
    },
    175528: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("884691"),
        a = n("240249");
      function l(e, t) {
        let n = s.useRef(null),
          l = s.useCallback((e, t) => {
            var s, a, l;
            e.preventDefault(),
              e.clipboardData.setData(
                "application/x-discord-interaction-data",
                JSON.stringify(t)
              ),
              e.clipboardData.setData(
                "text/plain",
                null !==
                  (l =
                    null === (a = n.current) || void 0 === a
                      ? void 0
                      : null === (s = a.textContent) || void 0 === s
                        ? void 0
                        : s.trim()) && void 0 !== l
                  ? l
                  : ""
              );
          }, []);
        return a.useCommand(e, t), { onCopy: l, copyRef: n };
      }
    },
    634388: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildShopDisplayContext: function () {
            return M;
          },
          default: function () {
            return O;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("65597"),
        o = n("151426"),
        u = n("716241"),
        d = n("10641"),
        c = n("837008"),
        E = n("903724"),
        f = n("38654"),
        _ = n("393414"),
        T = n("923959"),
        I = n("305961"),
        m = n("599110"),
        N = n("551254"),
        p = n("991148"),
        S = n("893399"),
        C = n("874146"),
        A = n("500307"),
        h = n("49111");
      let g = a.createContext(void 0);
      function M() {
        let e = a.useContext(g);
        return (
          i(
            null != e,
            "must use useGuildShopDisplayContext within a GuildShopDisplayContextProvider"
          ),
          e
        );
      }
      function O(e) {
        var t;
        let { children: n, initialTab: l, guildId: i } = e,
          M = (0, r.useStateFromStores)([I.default], () =>
            I.default.getGuild(i)
          ),
          O = (0, r.useStateFromStores)([f.default], () =>
            f.default.isViewingServerShop(i)
          ),
          R = (0, p.useGuildShopPreviewVisible)(M, "guild_shop_page"),
          L = (0, N.useIsEligibleForSubscriptionsInGuildShop)(
            i,
            "guild_shop_page"
          ),
          v =
            (null == M
              ? void 0
              : M.hasFeature(
                  h.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE
                )) === !0,
          P = (0, E.useRoleSubscriptionsVisibleInGuild)(
            null == M ? void 0 : M.id
          ),
          D =
            null === (t = (0, c.useSubscriptionsSettings)(i)) || void 0 === t
              ? void 0
              : t.server_shop_tab_order,
          x = [],
          y = S.GuildShopTab.GUILD_SHOP_FULL_PREVIEW;
        O || (v && P)
          ? (x.push(
              D === C.ServerShopTabOrder.PRODUCTS_FIRST
                ? S.GuildShopTab.GUILD_PRODUCTS
                : S.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS
            ),
            x.push(
              D === C.ServerShopTabOrder.PRODUCTS_FIRST
                ? S.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS
                : S.GuildShopTab.GUILD_PRODUCTS
            ),
            (y = x[0]))
          : v && !P
            ? (x.push(S.GuildShopTab.GUILD_PRODUCTS),
              (y = S.GuildShopTab.GUILD_PRODUCTS))
            : !v &&
              P &&
              (x.push(S.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS),
              (y = S.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS),
              R && x.push(S.GuildShopTab.GUILD_PRODUCTS_PREVIEW)),
          (l = null != l ? l : y);
        let [U, j] = a.useState(l),
          b = (R && !(P && L)) || U === S.GuildShopTab.GUILD_PRODUCTS_PREVIEW;
        return (
          a.useEffect(() => {
            j(l);
          }, [l]),
          (0, s.jsx)(g.Provider, {
            value: {
              selectedTab: U,
              setSelectedTab: j,
              categoryTabs: x,
              isPhantomPreview: b,
              handlePreviewDismiss: e => {
                (0, d.markDismissibleContentAsDismissed)(
                  o.DismissibleContent.SERVER_SHOP_PHANTOM_PREVIEW
                );
                let t = { ...(0, u.collectGuildAnalyticsMetadata)(i) };
                if (U === S.GuildShopTab.GUILD_PRODUCTS_PREVIEW)
                  e.stopPropagation(),
                    j(S.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS),
                    (t.action_taken =
                      A.GuildShopPreviewClickActions.DISMISS_TAB_PREVIEW);
                else {
                  var n;
                  (0, _.replaceWith)(
                    h.Routes.CHANNEL(
                      i,
                      null === (n = T.default.getDefaultChannel(i)) ||
                        void 0 === n
                        ? void 0
                        : n.id
                    )
                  ),
                    (t.action_taken =
                      A.GuildShopPreviewClickActions.DISMISS_FULL_PREVIEW);
                }
                m.default.track(h.AnalyticEvents.GUILD_SHOP_PREVIEW_CLICK, t);
              },
            },
            children: n,
          })
        );
      }
    },
    810044: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("759843"),
        o = n("171210"),
        u = n("446674"),
        d = n("77078"),
        c = n("716241"),
        E = n("428958"),
        f = n("442379"),
        _ = n("537325"),
        T = n("305961"),
        I = n("476263"),
        m = n("191814"),
        N = n("898260"),
        p = n("599110"),
        S = n("741515"),
        C = n("3081"),
        A = n("907038"),
        h = n("49111"),
        g = n("782340"),
        M = n("697755");
      function O(e) {
        var t;
        let { guildId: n } = e,
          l = (0, u.useStateFromStores)([T.default], () =>
            T.default.getGuild(n)
          ),
          { loading: O, subscriptionsSettings: R } = (0,
          S.useMonetizationSettings)(n),
          { listingsLoaded: L } = (0, f.useFetchGuildProductListingsForGuild)(
            n
          ),
          v = (0, f.useGuildProductsForGuild)(n, { publishedOnly: !0 }),
          P = a.useCallback(async () => {
            p.default.track(h.AnalyticEvents.GUILD_SHOP_EMBED_CLICKED, {
              ...(0, c.collectGuildAnalyticsMetadata)(n),
            }),
              await (0, _.default)(h.Routes.SERVER_SHOP(n));
          }, [n]);
        (0, E.default)(
          {
            type: r.ImpressionTypes.VIEW,
            name: r.ImpressionNames.GUILD_SHOP_EMBED,
          },
          { disableTrack: null == l }
        );
        let D =
          v.length > 0
            ? new Date(Math.min(...v.map(e => Date.parse(e.published_at))))
            : void 0;
        return O || !L
          ? (0, s.jsx)("div", {
              className: i(M.guildShopEmbed, M.spinnerContainer),
              children: (0, s.jsx)(d.Spinner, {}),
            })
          : null == l || null == R
            ? null
            : (0, s.jsxs)("div", {
                className: M.guildShopEmbed,
                children: [
                  (0, s.jsx)(C.HeroImage, {
                    coverImageAsset:
                      null !== (t = R.cover_image_asset) && void 0 !== t
                        ? t
                        : null,
                  }),
                  (0, s.jsx)(m.default, { size: 16 }),
                  (0, s.jsxs)("div", {
                    className: M.serverShopLabel,
                    children: [
                      (0, s.jsx)(A.default, {
                        height: "16px",
                        width: "16px",
                        color: o.default.INTERACTIVE_NORMAL,
                      }),
                      (0, s.jsx)(d.Heading, {
                        variant: "heading-sm/semibold",
                        color: "interactive-normal",
                        className: M.serverShopLabelText,
                        children: g.default.Messages.GUILD_SHOP_CHANNEL_LABEL,
                      }),
                    ],
                  }),
                  (0, s.jsx)(m.default, { size: 16 }),
                  (0, s.jsx)(d.Heading, {
                    variant: "heading-md/semibold",
                    color: "text-normal",
                    children: g.default.Messages.GUILD_STORE_HERO_TITLE.format({
                      guildName: l.name,
                    }),
                  }),
                  (0, s.jsx)(m.default, { size: 4 }),
                  (0, s.jsx)(d.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    lineClamp: 2,
                    children: R.description,
                  }),
                  (0, s.jsx)(m.default, { size: 16 }),
                  (0, s.jsx)(N.default, {}),
                  (0, s.jsx)(m.default, { size: 16 }),
                  (0, s.jsxs)("div", {
                    className: M.guildShopEmbedFooter,
                    children: [
                      (0, s.jsx)(I.default, { guild: l }),
                      (0, s.jsxs)("ul", {
                        className: M.guildShopSummary,
                        children: [
                          (0, s.jsx)("li", {
                            children: (0, s.jsx)(d.Text, {
                              variant: "text-sm/normal",
                              color: "text-muted",
                              children:
                                g.default.Messages.GUILD_SHOP_EMBED_LISTINGS_AVAILABLE.format(
                                  { listingCount: v.length }
                                ),
                            }),
                          }),
                          null != D &&
                            (0, s.jsx)("li", {
                              children: (0, s.jsx)(d.Text, {
                                variant: "text-sm/normal",
                                color: "text-muted",
                                children:
                                  g.default.Messages.GUILD_SHOP_EMBED_SHOP_AGE.format(
                                    { createdYear: D.getFullYear() }
                                  ),
                              }),
                            }),
                        ],
                      }),
                      (0, s.jsx)(d.Button, {
                        className: M.guildShopEmbedCta,
                        onClick: P,
                        children: (0, s.jsxs)("div", {
                          className: M.guildShopEmbedCtaContent,
                          children: [
                            (0, s.jsx)(A.default, {
                              height: "18px",
                              width: "18px",
                            }),
                            (0, s.jsx)(d.Text, {
                              variant: "text-sm/medium",
                              color: "always-white",
                              children: g.default.Messages.GUILD_SHOP_EMBED_CTA,
                            }),
                          ],
                        }),
                      }),
                    ],
                  }),
                ],
              });
      }
    },
    893399: function (e, t, n) {
      "use strict";
      var s, a;
      n.r(t),
        n.d(t, {
          GuildShopTab: function () {
            return s;
          },
        }),
        ((a = s || (s = {})).GUILD_PRODUCTS = "guild_products"),
        (a.GUILD_ROLE_SUBSCRIPTIONS = "guild_role_subscriptions"),
        (a.GUILD_PRODUCTS_PREVIEW = "guild_products_preview"),
        (a.GUILD_SHOP_FULL_PREVIEW = "guild_shop_full_preview");
    },
    3081: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HeroImage: function () {
            return L;
          },
          default: function () {
            return v;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("834897"),
        d = n("183137"),
        c = n("132349"),
        E = n("845579"),
        f = n("26989"),
        _ = n("697218"),
        T = n("476263"),
        I = n("191814"),
        m = n("246053"),
        N = n("58608"),
        p = n("158998"),
        S = n("866190"),
        C = n("662960"),
        A = n("634388"),
        h = n("893399"),
        g = n("744917"),
        M = n("782340"),
        O = n("947608");
      function R(e) {
        let { onClick: t } = e;
        return (0, s.jsxs)(o.Clickable, {
          onClick: t,
          className: O.showMoreButton,
          children: [
            (0, s.jsx)(o.Text, {
              variant: "text-sm/medium",
              color: "header-primary",
              children:
                M.default.Messages.GUILD_STORE_HERO_SHOW_MORE_DESCRIPTION_LABEL,
            }),
            (0, s.jsx)(I.default, { size: 4, horizontal: !0 }),
            (0, s.jsx)(m.default, {
              direction: m.default.Directions.RIGHT,
              className: O.showMoreArrow,
            }),
          ],
        });
      }
      function L(e) {
        let { coverImageAsset: t, isPreview: n = !1 } = e,
          a = E.GifAutoPlay.useSetting(),
          l = (0, S.useIsWindowFocused)(),
          i = l && a,
          [r, o] = (0, c.default)(t, i),
          u = i
            ? (0, s.jsx)(N.default, {
                autoPlay: !0,
                loop: !0,
                className: O.coverImage,
                width: 655,
                poster: (0, d.getAssetCDNUrl)(
                  "server_products/storefront/default-header.png"
                ),
                src: (0, d.getAssetCDNUrl)(
                  "server_products/storefront/default-header.mov"
                ),
              })
            : (0, s.jsx)("img", {
                src: (0, d.getAssetCDNUrl)(
                  "server_products/storefront/default-header.png"
                ),
                alt: "",
                className: O.coverImage,
              });
        return (0, s.jsx)("div", {
          ref: r,
          className: O.coverImageContainer,
          children:
            null == o || n
              ? u
              : (0, s.jsx)("img", { src: o, alt: "", className: O.coverImage }),
        });
      }
      function v(e) {
        var t, n, l;
        let { guild: c, subscriptionsSettings: E } = e,
          m = c.id;
        let { nickname: N, nickcolor: S } =
            ((l = m),
            (0, r.useStateFromStoresObject)(
              [f.default, _.default],
              () => {
                var e, t;
                let n = _.default.getCurrentUser();
                i(null != n, "user cannot be null");
                let s = f.default.getMember(l, n.id);
                return {
                  nickname:
                    null !== (e = null == s ? void 0 : s.nick) && void 0 !== e
                      ? e
                      : p.default.getName(n),
                  nickcolor:
                    null !== (t = null == s ? void 0 : s.colorString) &&
                    void 0 !== t
                      ? t
                      : void 0,
                };
              },
              [l]
            )),
          { isTruncated: v, ExpandableTextContainer: P } = (0,
          C.useExpandableTextContainer)(),
          D =
            (null !==
              (n =
                null == E
                  ? void 0
                  : null === (t = E.description) || void 0 === t
                    ? void 0
                    : t.trim().length) && void 0 !== n
              ? n
              : 0) > 0,
          [x, y] = a.useState(1),
          U = (0, u.default)("(max-width: ".concat(O.twoColumnWidth, ")")),
          { selectedTab: j, isPhantomPreview: b } = (0,
          A.useGuildShopDisplayContext)(),
          G =
            j === h.GuildShopTab.GUILD_PRODUCTS_PREVIEW
              ? M.default.Messages.GUILD_STORE_HERO_PREVIEW_TAB_DESCRIPTION
              : M.default.Messages.GUILD_STORE_HERO_PREVIEW_PAGE_DESCRIPTION,
          B = D
            ? (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(P, {
                    lineClamp: U || 2 === x ? 2 : 3,
                    children: (0, s.jsx)(o.Text, {
                      variant: "text-sm/normal",
                      color: "text-normal",
                      children: null == E ? void 0 : E.description,
                    }),
                  }),
                  v &&
                    (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsx)(I.default, { size: 4 }),
                        (0, s.jsx)(R, {
                          onClick: () => (0, g.default)({ guildId: m }),
                        }),
                      ],
                    }),
                ],
              })
            : (0, s.jsx)(o.Text, {
                variant: "text-sm/normal",
                color: "text-normal",
                children: b
                  ? G
                  : M.default.Messages.GUILD_STORE_HERO_DEFAULT_DESCRIPTION,
              });
        return (0, s.jsxs)("div", {
          className: O.container,
          children: [
            (0, s.jsxs)("div", {
              className: O.infoContainer,
              children: [
                (0, s.jsx)("div", {
                  children: (0, s.jsx)(T.default, {
                    guild: c,
                    size: T.default.Sizes.LARGER,
                    iconSrc:
                      null == c.icon || b
                        ? (0, d.getAssetCDNUrl)(
                            "server_products/storefront/default-guild-icon.jpg"
                          )
                        : void 0,
                  }),
                }),
                (0, s.jsx)(I.default, { size: 16, horizontal: !0 }),
                (0, s.jsxs)("div", {
                  children: [
                    (0, s.jsx)("div", {
                      ref: e => {
                        null != e && e.clientHeight > 30 && y(2);
                      },
                      children: (0, s.jsx)(o.Heading, {
                        variant: "heading-xl/semibold",
                        color: "header-primary",
                        lineClamp: 2,
                        children: b
                          ? M.default.Messages.GUILD_STORE_HERO_PREVIEW_TITLE
                          : M.default.Messages.GUILD_STORE_HERO_TITLE.format({
                              guildName: c.name,
                            }),
                      }),
                    }),
                    (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsx)(I.default, { size: 8 }),
                        (0, s.jsx)(o.Text, {
                          variant: "text-md/normal",
                          color: "text-normal",
                          children:
                            M.default.Messages.GUILD_STORE_HERO_DESCRIPTION_GREETING.format(
                              {
                                username: N,
                                usernameHook: function (e, t) {
                                  return (0, s.jsx)(
                                    "span",
                                    { style: { color: S }, children: e },
                                    t
                                  );
                                },
                              }
                            ),
                        }),
                        (0, s.jsx)(I.default, { size: 9 }),
                        B,
                      ],
                    }),
                  ],
                }),
              ],
            }),
            (0, s.jsx)(L, {
              coverImageAsset: null == E ? void 0 : E.cover_image_asset,
              isPreview: b,
            }),
          ],
        });
      }
    },
    744917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("551042");
      function l(e) {
        (0, a.openModalLazy)(async () => {
          let { default: t } = await n.el("783165").then(n.bind(n, "783165"));
          return n => (0, s.jsx)(t, { ...e, ...n });
        });
      }
    },
    907038: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, a.default)(i),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          viewBox: "0 0 20 20",
          fill: "none",
          children: [
            (0, s.jsxs)("g", {
              "clip-path": "url(#clip0_2645_182555)",
              children: [
                (0, s.jsx)("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M13.6698 8.91016C14.5646 10.1567 16.3407 10.3342 17.4866 9.44283C17.4957 9.46624 17.5008 9.49191 17.5008 9.51916V15.8337C17.5008 17.2144 16.3815 18.3337 15.0008 18.3337H12.7092C12.5941 18.3337 12.5008 18.2404 12.5008 18.1253V13.3337C12.5008 12.4132 11.7547 11.667 10.8342 11.667H9.16748C8.24699 11.667 7.5008 12.4132 7.5008 13.3337V18.1253C7.5008 18.2404 7.40753 18.3337 7.29247 18.3337H5.0008C3.62009 18.3337 2.5008 17.2144 2.5008 15.8337V9.51916C2.5008 9.36341 2.66628 9.26158 2.81091 9.31949C3.23542 9.48933 3.70172 9.58366 4.19593 9.58366C5.27336 9.58366 6.24385 9.12583 6.92345 8.39408C7.0135 8.29708 7.17004 8.29679 7.26039 8.39349C7.94479 9.12583 8.91932 9.58366 10.0008 9.58366C11.0823 9.58366 12.0568 9.12583 12.7412 8.39349C12.8316 8.29679 12.9882 8.29708 13.0782 8.39408C13.2565 8.58599 13.4548 8.75916 13.6698 8.91016ZM11.7497 6.67891C9.42957 5.8204 9.4179 2.5511 11.7147 1.6683C11.699 1.66743 11.6833 1.66699 11.6675 1.66699H8.33415C7.87391 1.66699 7.50082 2.04009 7.50082 2.50033V5.83366C7.50082 5.87681 7.50191 5.9197 7.50407 5.96231C7.52181 6.31232 7.61153 6.64333 7.75873 6.94085C7.77282 6.96931 7.78743 6.99747 7.80255 7.02531C8.2259 7.80462 9.05157 8.33366 10.0008 8.33366C10.984 8.33366 11.8346 7.76614 12.2429 6.94084L12.2543 6.91751C12.2613 6.90286 12.2682 6.88812 12.2751 6.87331L11.7497 6.67891ZM15.8231 8.3336C15.4338 8.32949 15.0467 8.10931 14.8853 7.67305L14.4606 6.52524C14.2917 6.06904 13.9321 5.70936 13.4759 5.54055L13.3342 5.4881V2.84588L13.4759 2.79343C13.9321 2.62463 14.2917 2.26494 14.4606 1.80874L14.5131 1.66699H15.2462C16.3397 1.66699 17.3062 2.37762 17.6324 3.42131L18.1647 5.12491C18.2057 5.25598 18.2352 5.38724 18.254 5.51775L18.1924 5.54055C17.7361 5.70936 17.3765 6.06904 17.2077 6.52524L16.783 7.67305C16.627 8.09458 16.2603 8.31438 15.8847 8.33245C15.8642 8.33308 15.8437 8.33346 15.8231 8.3336ZM12.5008 3.15424V5.17974L12.3281 5.11583C11.4472 4.78989 11.4472 3.54409 12.3281 3.21816L12.5008 3.15424ZM4.75546 1.66699C3.662 1.66699 2.69541 2.37762 2.36926 3.4213L1.83688 5.12491C1.52876 6.11092 1.8679 7.1068 2.56708 7.72187C2.99643 8.09957 3.56156 8.33366 4.19593 8.33366C5.13437 8.33366 5.95065 7.81064 6.36917 7.04019C6.38619 7.00888 6.40255 6.97714 6.41823 6.94502C6.57788 6.618 6.66748 6.25052 6.66748 5.86211V2.50033C6.66748 2.04009 6.29438 1.66699 5.83415 1.66699H4.75546Z",
                  fill: l,
                }),
                (0, s.jsx)("path", {
                  d: "M14.8838 0.660607C15.2097 -0.220202 16.4556 -0.220202 16.7815 0.660607L17.2062 1.80842C17.375 2.26462 17.7347 2.6243 18.1909 2.79311L19.3387 3.21783C20.2195 3.54377 20.2195 4.78957 19.3387 5.1155L18.1909 5.54023C17.7347 5.70903 17.375 6.06872 17.2062 6.52492L16.7815 7.67272C16.4556 8.5535 15.2097 8.5535 14.8838 7.67272L14.4591 6.52492C14.2903 6.06872 13.9306 5.70903 13.4744 5.54023L12.3266 5.1155C11.4458 4.78957 11.4458 3.54377 12.3266 3.21783L13.4744 2.79311C13.9306 2.6243 14.2903 2.26462 14.4591 1.80842L14.8838 0.660607Z",
                  fill: l,
                }),
              ],
            }),
            (0, s.jsx)("defs", {
              children: (0, s.jsx)("clipPath", {
                id: "clip0_2645_182555",
                children: (0, s.jsx)("rect", {
                  width: "20",
                  height: "20",
                  fill: "white",
                }),
              }),
            }),
          ],
        });
      }
    },
    931164: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("917351"),
        a = n.n(s),
        l = n("270926"),
        i = n("888198"),
        r = n("367376");
      let o = a.omit(i.default.RULES, ["codeBlock", "heading"]),
        u = {
          ...l.default,
          parse: function (e, t, n) {
            var s;
            let a = l.default.parse(e, t, n),
              i = null !== (s = n.initialHeaderLevel) && void 0 !== s ? s : 3,
              r = Math.min(6, i + a.level);
            return { ...a, level: r };
          },
        },
        d = r.default.combineAndInjectMentionRule(o, [
          r.default.createReactRules(r.default.defaultReactRuleOptions),
          { header: u },
        ]),
        c = r.default.reactParserFor(d);
      var E = c;
    },
    228035: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildShopReportModal: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078");
      function l(e) {
        let { listing: t } = e;
        (0, a.openModalLazy)(async () => {
          let { default: e } = await n.el("754559").then(n.bind(n, "754559"));
          return n => (0, s.jsx)(e, { listing: t, ...n });
        });
      }
    },
    662960: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useExpandableTextContainer: function () {
            return o;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("676837");
      function o() {
        let [e, t] = a.useState(!1);
        return {
          isTruncated: e,
          ExpandableTextContainer: a.memo(function (e) {
            let {
              showAll: n = !1,
              className: a,
              children: l,
              lineClamp: o = 2,
            } = e;
            return (0, s.jsx)("div", {
              ref: e => {
                if (null != e) {
                  let n = e.scrollHeight - e.clientHeight > 1;
                  t(n);
                }
              },
              className: i(r.lineClamp, a),
              style: n ? void 0 : { lineClamp: o, WebkitLineClamp: o },
              children: l,
            });
          }),
        };
      }
    },
    17692: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("931164"),
        u = n("667060"),
        d = n("919163");
      function c(e) {
        let { color: t, className: n, variant: l, text: c, lineClamp: E } = e,
          f = (0, r.usePrivateHeadingLevel)(),
          _ = a.useMemo(
            () =>
              null == c
                ? null
                : (0, o.default)(c, !0, {
                    allowHeading: null == E,
                    allowList: null == E,
                    initialHeaderLevel: f,
                  }),
            [c, E, f]
          );
        return (0, s.jsx)(r.Text, {
          className: i(n, d.markup, {
            [u.lineClamp2Plus]: null != E && E > 1,
            [u.lineClamp1]: 1 === E,
          }),
          color: t,
          variant: l,
          lineClamp: E,
          children: _,
        });
      }
    },
    944371: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MonetizationListingDraftBadge: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("956089"),
        i = n("782340"),
        r = n("719229");
      let o = () =>
        (0, s.jsx)(l.TextBadge, {
          color: a.tokens.unsafe_rawColors.YELLOW_300.css,
          text: i.default.Messages
            .GUILD_ROLE_SUBSCRIPTION_TIER_MANAGEMENT_DRAFT_LABEL,
          className: r.draftBadge,
        });
    },
    889293: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("446674"),
        a = n("913144");
      let l = [];
      class i extends s.default.Store {
        getEligibleGuildsForNagActivate() {
          return l;
        }
      }
      i.displayName = "CreatorMonetizationMarketingStore";
      var r = new i(a.default, {
        CREATOR_MONETIZATION_NAG_ACTIVATE_ELIGIBLITY_FETCH_SUCCESS: function (
          e
        ) {
          let { eligibleGuilds: t } = e;
          l = t;
        },
      });
    },
    935246: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DismissibleContentNotices: function () {
            return x;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("151426"),
        i = n("77078"),
        r = n("327037"),
        o = n("79112"),
        u = n("376556"),
        d = n("926994"),
        c = n("889293"),
        E = n("757557"),
        f = n("994750"),
        _ = n("919089"),
        T = n("415133"),
        I = n("363861"),
        m = n("695827"),
        N = n("425538"),
        p = n("393414"),
        S = n("915639"),
        C = n("600133"),
        A = n("936629"),
        h = n("489622"),
        g = n("599110"),
        M = n("384997"),
        O = n("994428"),
        R = n("49111"),
        L = n("935583"),
        v = n("646718"),
        P = n("782340"),
        D = n("231537");
      let x = e => {
        let { dismissibleContent: t, noticeType: x } = e,
          y = (0, a.useStateFromStores)([C.default], () =>
            C.default.getNotice()
          ),
          U = (0, a.useStateFromStores)([S.default], () => S.default.locale);
        return (0, s.jsx)(M.default, {
          contentTypes: [t],
          groupName: O.DismissibleContentGroupName.NOTICE_BAR,
          bypassAutoDismiss: !0,
          children: e => {
            var t, a;
            let { visibleContent: S, markAsDismissed: C } = e;
            switch (S) {
              case l.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR:
                return (0, s.jsx)(_.default, {
                  dismissCurrentNotice: () =>
                    C(O.ContentDismissActionType.UNKNOWN),
                });
              case l.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.DEFAULT,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.NOTICE_NATIVE_APPS_2020_06,
                    (0, s.jsx)("i", { className: D.iconApple }),
                    (0, s.jsx)("i", { className: D.iconAndroid }),
                    (0, s.jsx)("i", { className: D.iconWindows }),
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      noticeType: x,
                      onClick: () => {
                        (0, i.openModalLazy)(async () => {
                          let { default: e } = await n
                            .el("649486")
                            .then(n.bind(n, "649486"));
                          return t =>
                            (0, s.jsx)(e, { source: "Top Bar Nag", ...t });
                        });
                      },
                      children: P.default.Messages.DOWNLOAD,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.SPOTIFY,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    (0, s.jsx)(A.default, { className: D.platformIcon }),
                    P.default.Messages.NOTICE_CONNECT_SPOTIFY,
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      onClick: () =>
                        (0, d.default)(R.PlatformTypes.SPOTIFY, "Notice Bar"),
                      noticeType: x,
                      children: P.default.Messages.CONNECT,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.PLAYSTATION,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                    }),
                    (0, s.jsx)("img", {
                      alt: "",
                      className: D.platformIcon,
                      src: u.default.get(R.PlatformTypes.PLAYSTATION).icon
                        .whiteSVG,
                    }),
                    P.default.Messages.NOTICE_CONNECT_PLAYSTATION,
                    (0, s.jsx)(h.NoticeButton, {
                      onClick: () =>
                        (0, d.default)(
                          R.PlatformTypes.PLAYSTATION,
                          "Notice Bar"
                        ),
                      children: P.default.Messages.CONNECT,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.DEFAULT,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.NOTICE_MFA_SMS_BACKUP,
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      onClick: () =>
                        o.default.open(R.UserSettingsSections.ACCOUNT),
                      noticeType: x,
                      children: P.default.Messages.NOTICE_MFA_SMS_BACKUP_BUTTON,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.PREMIUM_TIER_2,
                  children: [
                    (0, s.jsx)("span", { className: D.premiumLogo }),
                    (0, s.jsx)("span", {
                      className: D.premiumText,
                      children: P.default.Messages.NOTICE_PREMIUM_PROMO_MESSAGE,
                    }),
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      className: D.premiumAction,
                      noticeType: x,
                      onClick: () => {
                        g.default.track(
                          R.AnalyticEvents.PREMIUM_PROMOTION_OPENED,
                          {
                            location_section:
                              R.AnalyticsSections.NOTIFICATION_BAR,
                            location_object: R.AnalyticsObjects.BUTTON_CTA,
                          }
                        ),
                          o.default.open(R.UserSettingsSections.PREMIUM);
                      },
                      children: P.default.Messages.NOTICE_PREMIUM_PROMO_ACTION,
                    }),
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => {
                        C(O.ContentDismissActionType.UNKNOWN),
                          (0, r.setFlag)(
                            R.UserFlags.PREMIUM_PROMO_DISMISSED,
                            !0
                          );
                      },
                      noticeType: x,
                    }),
                  ],
                });
              case l.DismissibleContent
                .NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING:
                return (0, s.jsx)(N.default, {
                  dismissCurrentNotice: () =>
                    C(O.ContentDismissActionType.UNKNOWN),
                  subscriptionTier: v.PremiumSubscriptionSKUs.TIER_2,
                });
              case l.DismissibleContent
                .NAGBAR_NOTICE_PREMIUM_TIER_0_TRIAL_ENDING:
                return (0, s.jsx)(N.default, {
                  dismissCurrentNotice: () =>
                    C(O.ContentDismissActionType.UNKNOWN),
                  subscriptionTier: v.PremiumSubscriptionSKUs.TIER_0,
                });
              case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.PREMIUM_TIER_2,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      noticeType: x,
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                    }),
                    P.default.Messages
                      .PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_TEXT,
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      noticeType: x,
                      onClick: () => {
                        C(O.ContentDismissActionType.UNKNOWN),
                          o.default.open(R.UserSettingsSections.PREMIUM);
                      },
                      children:
                        P.default.Messages
                          .PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_BUTTON_TEXT,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_LOCALIZED_PRICING:
                return (0, s.jsx)(m.default, {
                  notice: y,
                  noticeType: x,
                  dismissCurrentNotice: () =>
                    C(O.ContentDismissActionType.UNKNOWN),
                });
              case l.DismissibleContent.QUEST_1_GO_LIVE_BANNER:
                let M =
                  null == y
                    ? void 0
                    : null === (t = y.metadata) || void 0 === t
                      ? void 0
                      : t.partnerGame;
                return (0, s.jsx)(f.default, {
                  noticeType: x,
                  markAsDismissed: () => C(O.ContentDismissActionType.UNKNOWN),
                  partnerGame: M,
                });
              case l.DismissibleContent.QUEST_1_ENDED_INCOMPLETE:
                let j =
                  null == y
                    ? void 0
                    : null === (a = y.metadata) || void 0 === a
                      ? void 0
                      : a.partnerGame;
                return (0, s.jsx)(E.default, {
                  noticeType: x,
                  markAsDismissed: () => C(O.ContentDismissActionType.UNKNOWN),
                  partnerGame: j,
                });
              case l.DismissibleContent.NAGBAR_BOUNCED_EMAIL_NOTICE:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.DANGER,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.BOUNCED_EMAIL_DETECTED_NOTICE,
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      noticeType: x,
                      onClick: () => {
                        (0, p.transitionTo)(R.Routes.SETTINGS("account"));
                      },
                      children: P.default.Messages.CHANGE_EMAIL_SHORT,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_ACTIVATE_SERVER_SUBSCRIPTION:
                let b = c.default.getEligibleGuildsForNagActivate();
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.DEFAULT,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.GUILD_ROLE_SUBSCRIPTION_NAGBAR_TEXT,
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      noticeType: x,
                      onClick: () => {
                        C(O.ContentDismissActionType.PRIMARY),
                          (0, p.transitionTo)(
                            1 === b.length
                              ? R.Routes.GUILD_SETTINGS(
                                  b[0],
                                  "role-subscriptions"
                                )
                              : R.Routes.PICK_GUILD_SETTINGS(
                                  "role-subscriptions",
                                  void 0,
                                  "server-subscriptions-finish-setting-up"
                                )
                          );
                      },
                      children: P.default.Messages.LETS_GO,
                    }),
                  ],
                });
              case l.DismissibleContent.NAGBAR_NOTICE_POMELO:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.WARNING,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.POMELO_ACTION_NEEDED.format(),
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      onClick: () => (0, I.default)(L.PomeloEntrypoints.NOTICE),
                      noticeType: x,
                      children: P.default.Messages.GET_STARTED,
                    }),
                  ],
                });
              case l.DismissibleContent.UU_MIGRATION_NOTICE:
                return (0, s.jsxs)(h.default, {
                  color: h.NoticeColors.WARNING,
                  children: [
                    (0, s.jsx)(h.NoticeCloseButton, {
                      onClick: () => C(O.ContentDismissActionType.UNKNOWN),
                      noticeType: x,
                    }),
                    P.default.Messages.POMELO_ACTION_NEEDED_FORCE.format({
                      date: (0, T.getLocalizedForcedUUDate)(U),
                    }),
                    (0, s.jsx)(h.PrimaryCTANoticeButton, {
                      onClick: () => (0, I.default)(L.PomeloEntrypoints.NOTICE),
                      noticeType: x,
                      children: P.default.Messages.GET_STARTED,
                    }),
                  ],
                });
            }
          },
        });
      };
    },
    649486: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007");
      var s,
        a,
        l = n("37983"),
        i = n("884691"),
        r = n("414456"),
        o = n.n(r),
        u = n("597755"),
        d = n.n(u),
        c = n("394846"),
        E = n("171718"),
        f = n("446674"),
        _ = n("77078"),
        T = n("774146"),
        I = n("271938"),
        m = n("697218"),
        N = n("476765"),
        p = n("599110"),
        S = n("98013"),
        C = n("439932"),
        A = n("49111"),
        h = n("782340"),
        g = n("847674");
      ((a = s || (s = {}))[(a.OSX = 0)] = "OSX"),
        (a[(a.WINDOWS = 1)] = "WINDOWS"),
        (a[(a.LINUX = 2)] = "LINUX"),
        (a[(a.IOS = 3)] = "IOS"),
        (a[(a.ANDROID = 4)] = "ANDROID");
      let M = [
          {
            getOs: () => h.default.Messages.PLATFORM_MACOS,
            icon: g.apple,
            url: () => (0, S.makeDesktopDownloadURL)("osx", !1),
            platformKey: 0,
          },
          {
            getOs: () => h.default.Messages.PLATFORM_WINDOWS,
            icon: g.windows,
            url: () => (0, S.makeDesktopDownloadURL)("win", !1),
            platformKey: 1,
          },
          {
            getOs: () => h.default.Messages.PLATFORM_LINUX,
            icon: g.linux,
            url: [
              {
                url: () => (0, S.makeDesktopDownloadURL)("linux", !1, "deb"),
                getText: () => h.default.Messages.DEB,
              },
              {
                url: () => (0, S.makeDesktopDownloadURL)("linux", !1, "tar.gz"),
                getText: () => h.default.Messages.TAR_GZ,
              },
            ],
            platformKey: 2,
          },
        ],
        O = [
          {
            getOs: () => h.default.Messages.PLATFORM_IOS,
            icon: g.ios,
            url: () => A.DownloadLinks.IOS,
            platformKey: 3,
          },
          {
            getOs: () => h.default.Messages.PLATFORM_ANDROID,
            icon: g.android,
            url: () => A.DownloadLinks.ANDROID,
            platformKey: 4,
          },
        ],
        R = (0, C.getThemeClass)(A.ThemeTypes.LIGHT),
        L = e => {
          let { url: t, text: n, onClick: s } = e;
          return (0, l.jsx)(_.Anchor, {
            useDefaultUnderlineStyles: !1,
            href: t,
            className: g.downloadButton,
            onClick: s,
            children: n,
          });
        },
        v = e => {
          let t,
            {
              platform: n,
              onClick: s,
              onMouseEnter: a,
              isActive: i,
              claimed: r,
            } = e,
            { getOs: u, icon: d, url: c, platformKey: E } = n,
            f = u(),
            T = o(g.icon, d);
          if (Array.isArray(c))
            t = c.map((e, t) => {
              let n = r ? e.url() : "";
              return (0, l.jsx)(
                L,
                { url: n, onClick: () => s(f), text: e.getText() },
                "".concat(n, "-").concat(t)
              );
            });
          else {
            let e = r ? c() : void 0;
            t = (0, l.jsx)(L, {
              url: e,
              onClick: () => s(f),
              text: h.default.Messages.DOWNLOAD,
            });
          }
          return (0, l.jsx)("li", {
            className: o(g.platform, { [g.active]: i }),
            onMouseEnter: () => a(E),
            children: (0, l.jsxs)("div", {
              className: g.contentWrapper,
              children: [
                (0, l.jsxs)("div", {
                  className: g.iconWrap,
                  children: [
                    (0, l.jsx)("div", { className: T }),
                    (0, l.jsx)("div", { className: o(g.active, T) }),
                  ],
                }),
                (0, l.jsxs)("div", {
                  children: [
                    (0, l.jsx)(_.Heading, {
                      className: g.platformName,
                      variant: "heading-lg/semibold",
                      children: f,
                    }),
                    (0, l.jsx)("div", {
                      className: o(g.downloadButtons, {
                        [g.list]: Array.isArray(t),
                      }),
                      children: t,
                    }),
                  ],
                }),
              ],
            }),
          });
        };
      function P(e) {
        let { source: t, onClose: n, transitionState: s } = e,
          a = (0, f.useStateFromStores)([m.default], () =>
            m.default.getCurrentUser()
          ),
          r = (0, f.useStateFromStores)([I.default], () =>
            I.default.getFingerprint()
          ),
          u = null == a || a.isClaimed(),
          [S, C] = i.useState(
            (function () {
              var e;
              switch (null === (e = d.os) || void 0 === e ? void 0 : e.family) {
                case "OS X":
                  return 0;
                case "Windows":
                  return 1;
                case "Ubuntu":
                case "Debian":
                case "Fedora":
                case "Red Hat":
                case "SuSE":
                case "Linux":
                  return 2;
                case "iOS":
                  return 3;
                case "Android":
                  return 4;
                default:
                  return;
              }
            })()
          );
        function L(e) {
          (null != E.getToken() || null != r) &&
            p.default.track(A.AnalyticEvents.DOWNLOAD_APP, {
              platform: e,
              ptb: !1,
              released: !0,
              has_e_mail: u,
              referring_location: t,
              qr_code: !1,
            }),
            !u && (n(), T.openClaimAccountModal());
        }
        function P(e) {
          C(e);
        }
        i.useEffect(() => {
          p.default.track(A.AnalyticEvents.OPEN_MODAL, {
            type: "Download App",
            source: { location: t },
          });
        }, [t]);
        let D = (0, N.useUID)();
        return (0, l.jsx)(_.ModalRoot, {
          className: o(g.downloadApps, R),
          transitionState: s,
          "aria-labelledby": D,
          children: (0, l.jsx)("div", {
            className: g.inner,
            children: (0, l.jsxs)(_.HeadingLevel, {
              component: (0, l.jsx)(_.HiddenVisually, {
                children: (0, l.jsx)(_.H, {
                  id: D,
                  children: h.default.Messages.DOWNLOAD_APP,
                }),
              }),
              children: [
                (0, l.jsx)(_.ModalCloseButton, {
                  onClick: n,
                  className: g.modalCloseButton,
                }),
                !c.isMobile &&
                  (0, l.jsx)("div", {
                    className: g.platformsWrap,
                    children: (0, l.jsx)(_.HeadingLevel, {
                      component: (0, l.jsx)(_.Heading, {
                        variant: "heading-lg/semibold",
                        className: g.header,
                        children: h.default.Messages.DOWNLOAD_DESKTOP_TITLE,
                      }),
                      children: (0, l.jsx)("ul", {
                        className: g.platforms,
                        children: M.map(e =>
                          (0, l.jsx)(
                            v,
                            {
                              isActive: S === e.platformKey,
                              platform: e,
                              onClick: L,
                              onMouseEnter: P,
                              claimed: u,
                            },
                            e.platformKey
                          )
                        ),
                      }),
                    }),
                  }),
                (0, l.jsx)("div", {
                  className: g.platformsWrap,
                  children: (0, l.jsxs)(_.HeadingLevel, {
                    component: (0, l.jsx)(l.Fragment, {
                      children:
                        !c.isMobile &&
                        (0, l.jsx)(_.Heading, {
                          variant: "heading-lg/semibold",
                          className: g.header,
                          children: h.default.Messages.DOWNLOAD_MOBILE_TITLE,
                        }),
                    }),
                    children: [
                      (0, l.jsx)("ul", {
                        className: g.platforms,
                        children: O.map(e =>
                          (0, l.jsx)(
                            v,
                            {
                              isActive: S === e.platformKey,
                              platform: e,
                              onClick: L,
                              onMouseEnter: P,
                              claimed: u,
                            },
                            e.platformKey
                          )
                        ),
                      }),
                      (0, l.jsx)(_.Text, {
                        className: g.footer,
                        variant: "text-sm/normal",
                        children:
                          h.default.Messages.DOWNLOAD_DESKTOP_FOOTER.format(),
                      }),
                    ],
                  }),
                }),
              ],
            }),
          }),
        });
      }
    },
    376152: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchDropsEligibility: function () {
            return r;
          },
          fetchCodePlatformAvailability: function () {
            return o;
          },
          claimDropsRewardCode: function () {
            return u;
          },
          fetchDropsUserStatus: function () {
            return d;
          },
          unenrollDropsUser: function () {
            return c;
          },
          fetchEnrolledUser: function () {
            return E;
          },
          enrollDropsUser: function () {
            return f;
          },
          sendHeartbeat: function () {
            return _;
          },
          fetchProgress: function () {
            return T;
          },
        });
      var s = n("872717"),
        a = n("913144"),
        l = n("373469"),
        i = n("49111");
      let r = async e => {
          let t = !1;
          try {
            let n = await s.HTTP.get({
              url: i.Endpoints.DROPS_ELIGIBILITY,
              query: { drops_quest_id: e },
            });
            t = n.body.eligible;
          } catch (e) {
            t = !1;
          }
          a.default.dispatch({
            type: "DROPS_ELIGIBILITY_FETCH_SUCCESS",
            isEligible: t,
            dropsQuestId: e,
          });
        },
        o = async e => {
          let t = [];
          try {
            let n = await s.HTTP.get({
              url: i.Endpoints.DROPS_PLATFORM_AVAILABILITY,
              query: { drops_quest_id: e },
            });
            t = n.body.available_platforms;
          } catch (e) {
            t = [];
          }
          a.default.dispatch({
            type: "DROPS_PLATFORM_AVAILABILITY_SUCCESS",
            availablePlatforms: t,
          });
        },
        u = async (e, t) => {
          try {
            let n = await s.HTTP.post({
              url: i.Endpoints.DROPS_CLAIM_REWARD_CODE,
              query: { drops_quest_id: e, platform: t },
            });
            return (
              a.default.dispatch({
                type: "DROPS_REWARD_CODE_CLAIM_SUCCESS",
                rewardCode: n.body.code,
              }),
              n.body.code
            );
          } catch (e) {
            throw e;
          }
        },
        d = async () => {
          try {
            let e = await s.HTTP.get({ url: i.Endpoints.DROPS_USER_STATUS });
            a.default.dispatch({
              type: "DROPS_USER_STATUS_FETCH_SUCCESS",
              codes: e.body,
            });
          } catch (e) {
            a.default.dispatch({ type: "DROPS_USER_STATUS_FETCH_FAILURE" });
          }
        },
        c = async e => {
          await s.HTTP.del({
            url: i.Endpoints.DROPS_ENROLL_USER,
            query: { drops_quest_id: e },
          }),
            a.default.dispatch({
              type: "DROPS_UNENROLL_USER",
              dropsQuestId: e,
            }),
            await d();
        },
        E = async e => {
          let t = await s.HTTP.get({
            url: i.Endpoints.DROPS_ENROLL_USER,
            query: { drops_quest_id: e },
          });
          await a.default.dispatch({
            type: "DROPS_ENROLLED_USER_FETCH_SUCCESS",
            enrolledUser: t.body.user,
            isEnrolled: t.body.enrolled,
            dropsQuestId: e,
          });
        },
        f = async e => {
          await s.HTTP.post({
            url: i.Endpoints.DROPS_ENROLL_USER,
            query: { drops_quest_id: e },
          }),
            a.default.dispatch({ type: "DROPS_ENROLL_SUCCESS" });
        },
        _ = async (e, t, n) => {
          let r = l.default.getViewerIds(t);
          try {
            let l = await s.HTTP.post({
              url: i.Endpoints.DROPS_HEARTBEAT(e),
              query: {
                stream_key: t,
                application_id: n,
                viewer_count: r.length,
              },
              retries: 2,
            });
            a.default.dispatch({
              type: "DROPS_HEARTBEAT_SUCCESS",
              dropsQuestId: e,
              completed: l.body.completed,
              progress: l.body.progress,
            });
          } catch (t) {
            a.default.dispatch({
              type: "DROPS_HEARTBEAT_FAILURE",
              dropsQuestId: e,
              statusCode: null == t ? void 0 : t.status,
            });
          }
        },
        T = async e => {
          try {
            let t = await s.HTTP.get({ url: i.Endpoints.DROPS_PROGRESS(e) });
            a.default.dispatch({
              type: "DROPS_FETCH_PROGRESS_SUCCESS",
              dropsQuestId: e,
              completed: t.body.completed,
              progress: t.body.progress,
            });
          } catch (t) {
            a.default.dispatch({
              type: "DROPS_FETCH_PROGRESS_FAILURE",
              dropsQuestId: e,
            });
          }
        };
    },
    411511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DROPS_PLATFORMS: function () {
            return a;
          },
          DROPS_ELIGIBILITY_SEEN_GAMES_LOOKBACK_SECONDS: function () {
            return l;
          },
          DropsFaqUrl: function () {
            return i;
          },
          PartnerGame: function () {
            return r;
          },
          TooltipActions: function () {
            return o;
          },
          PartnerGameNameToSearchTermMapping: function () {
            return u;
          },
          noticeBannerDateFormat: function () {
            return d;
          },
          FORTNITE_QUEST_ID: function () {
            return c;
          },
          DROPS_GAMES: function () {
            return E;
          },
        });
      var s = n("782340");
      let a = ["XBOX", "PLAYSTATION", "SWITCH", "PC"],
        l = 2592e4,
        i = "https://support.discord.com/hc/en-us/articles/9146392276375",
        r = { FORTNITE: "FORTNITE" },
        o = {
          STREAM_CTA: "STREAM_CTA",
          LOADING_INITIAL_PROGRESS: "LOADING_INITIAL_PROGRESS",
          TRACK_PROGRESS: "TRACK_PROGRESS",
          QUEST_COMPLETION: "QUEST_COMPLETION",
        },
        u = { FORTNITE: ["Fortnite"] },
        d = "YYYY-MM-DD HH:mm",
        c = "1022633972510752774",
        E = {
          [r.FORTNITE]: {
            title: "Fortnite",
            gameSearchTerm: u[r.FORTNITE],
            assets: {
              iconSrc: n("681388"),
              tooltipSrc: n("249705"),
              rewardSrc: n("283383"),
            },
            dropsQuestId: c,
            dropsGameId: "432980957394370572",
            endDate: "2023-05-22 23:59",
            finalClaimDate: "2023-5-29 08:00",
            dropsNoticeBannerDurationDays: 3,
            articleUrl: i,
            messages: {
              claimTip: () =>
                s.default.Messages.FORTNITE_REDEMPTION_TIP.format({
                  learnMoreUrl: "https://discord.com/blog/fortnite-quest",
                }),
              giftInfo: () =>
                s.default.Messages.FORTNITE_GIFT_INVENTORY_INFO.format({
                  guardOutfitName: s.default.Messages.FORNITE_GUARD_OUTPUT,
                  rewardName: s.default.Messages.FORTNITE_REWARD_NAME,
                }),
              enrollmentTooltip: e =>
                s.default.Messages.FORTNITE_DROPS_ELIGIBILITY_ENROLLMENT_TOOLTIP.format(
                  {
                    rewardName: s.default.Messages.FORTNITE_REWARD_NAME,
                    streamLengthRequirement: e,
                  }
                ),
              completionTooltip: e =>
                s.default.Messages.FORTNITE_DROPS_COMPLETION_TOOLTIP.format({
                  rewardName: s.default.Messages.FORTNITE_REWARD_NAME,
                  streamLengthRequirement: e,
                }),
            },
          },
        };
    },
    931115: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DropsForGoLiveFortniteExperiment: function () {
            return a;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-05_go_live_quest_fortnite",
        label: "Fortnite: Go Live Quest",
        defaultConfig: {
          dropsEnabled: !1,
          streamLengthRequirement: 0,
          viewerCountRequirement: 0,
          autoEnrollment: !1,
          showUnenroll: !1,
        },
        treatments: [
          {
            id: 1,
            label: "15 min stream req + auto enrollment",
            config: {
              dropsEnabled: !0,
              streamLengthRequirement: 15,
              viewerCountRequirement: 1,
              autoEnrollment: !0,
              showUnenroll: !1,
            },
          },
          {
            id: 99,
            label: "2 minute stream req + auto enrollment",
            config: {
              dropsEnabled: !0,
              streamLengthRequirement: 2,
              viewerCountRequirement: 1,
              autoEnrollment: !0,
              showUnenroll: !0,
            },
          },
        ],
      });
    },
    243632: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useDropsExperiment: function () {
            return T;
          },
          useShowEligibilityEnrollmentTooltip: function () {
            return I;
          },
          useAnyDropsEnabled: function () {
            return m;
          },
          useFetchInitialDropProgress: function () {
            return N;
          },
          useActivityPanelDrop: function () {
            return p;
          },
          useTrackDropsImpression: function () {
            return S;
          },
        });
      var s = n("884691"),
        a = n("446674"),
        l = n("913144"),
        i = n("428958"),
        r = n("862853"),
        o = n("10641"),
        u = n("161454"),
        d = n("376152"),
        c = n("931115"),
        E = n("180273"),
        f = n("579565"),
        _ = n("411511");
      function T(e) {
        let t, n;
        let s = c.DropsForGoLiveFortniteExperiment.useExperiment({
          location: "59cc4b_1",
        });
        if (null == e) return null;
        let a = (0, f.getDrop)(e);
        if (null == a) return null;
        if (a.dropsQuestId === _.FORTNITE_QUEST_ID)
          (t = c.DropsForGoLiveFortniteExperiment), (n = s);
        else (t = null), (n = null);
        return null == t || null == n
          ? null
          : { experiment: t, config: n, drop: a };
      }
      function I(e) {
        var t;
        let n = (0, a.useStateFromStores)(
            [E.default],
            () => E.default.serverEligibleByQuestIds
          ),
          i = T(e),
          r = (function (e) {
            let t = (0, a.useStateFromStoresArray)([u.default], () =>
                u.default.getGamesSeen(!1)
              ),
              n = s.useMemo(
                () => (0, f.getEligibleGameLastSeenStartTimeSeconds)(),
                []
              ),
              l = (0, f.isDropGameDetected)(e, t, n);
            return l;
          })(e),
          o = null != i && n[i.drop.dropsQuestId];
        null != i &&
          o &&
          r &&
          i.experiment.trackExposure({
            location: "ELIGIBILITY_ENROLLMENT_TOOLTIP",
          });
        let c =
            null == i
              ? void 0
              : null === (t = i.config) || void 0 === t
                ? void 0
                : t.dropsEnabled,
          _ = null == i ? void 0 : i.drop,
          I = null == _ || (0, f.getDropExpired)(_);
        return (
          s.useEffect(() => {
            c &&
              !I &&
              r &&
              null != _ &&
              l.default.wait(() => {
                null == o && (0, d.fetchDropsEligibility)(_.dropsQuestId);
              });
          }, [o, _, c, I, r]),
          null != _ && !!c && !I && o && r
        );
      }
      function m() {
        let e = T(_.PartnerGame.FORTNITE);
        return null == e ? void 0 : e.config.dropsEnabled;
      }
      function N(e) {
        let t = T(e),
          n = null == t ? void 0 : t.drop,
          l = (0, a.useStateFromStores)(
            [E.default],
            () =>
              null != n && E.default.serverEligibleByQuestIds[n.dropsQuestId]
          ),
          i = (0, a.useStateFromStores)(
            [E.default],
            () => E.default.hasInitialProgressFetched
          );
        s.useEffect(() => {
          null != n && l && !i && (0, d.fetchProgress)(n.dropsQuestId);
        }, [n, l, i]);
      }
      function p(e, t, n, s) {
        var l;
        let i = T(e),
          u = null == i ? void 0 : i.drop,
          d = (0, a.useStateFromStores)(
            [E.default],
            () =>
              null != u && E.default.serverEligibleByQuestIds[u.dropsQuestId]
          ),
          c = (0, a.useStateFromStores)([E.default], () =>
            E.default.getIsPartnerGameQuestComplete(e)
          ),
          _ = (0, f.doesGameTitleMatchList)(
            null == t ? void 0 : t.name,
            null !== (l = null == u ? void 0 : u.gameSearchTerm) && void 0 !== l
              ? l
              : []
          ),
          I = (0, r.useIsAnyContentShown)([n, s]),
          m = (0, o.useIsDismissibleContentDismissed)(s),
          N = null == u || (0, f.getDropExpired)(u),
          p = !!(
            null != u &&
            !N &&
            _ &&
            (null == i ? void 0 : i.config.dropsEnabled) &&
            d
          );
        return {
          partnerGame: p ? e : null,
          dropsActivityPanelExperienceBlocked: I,
          showDropsSparkles: !c && !m,
        };
      }
      function S(e, t, n) {
        let s = (0, f.getDrop)(e);
        (0, i.default)({
          type: t,
          name: n,
          properties: {
            drops_quest_id: null == s ? void 0 : s.dropsQuestId,
            game_id: null == s ? void 0 : s.dropsGameId,
          },
        });
      }
    },
    180273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var s = n("866227"),
        a = n.n(s),
        l = n("446674"),
        i = n("862337"),
        r = n("913144"),
        o = n("161454"),
        u = n("374014"),
        d = n("271938"),
        c = n("718517"),
        E = n("376152"),
        f = n("579565"),
        _ = n("411511");
      let T = null,
        I = null,
        m = {},
        N = {},
        p = _.TooltipActions.LOADING_INITIAL_PROGRESS,
        S = new i.Timeout(),
        C = {
          completed: !1,
          initialProgressFetched: !1,
          interrupted: !1,
          retries: 0,
        },
        A = e => {
          let {
            dropsQuestId: t,
            streamKey: n,
            game: s,
            completed: a,
            gameTitle: l,
          } = C;
          !(
            null == t ||
            null == l ||
            a ||
            null == s ||
            null == n ||
            S.isStarted()
          ) &&
            (e
              ? (0, E.sendHeartbeat)(t, n, s.pid)
              : S.start(1 * c.default.Millis.MINUTE, () => {
                  (0, E.sendHeartbeat)(t, n, s.pid);
                }));
        },
        h = e => {
          (C.retries = 0),
            (C.completed = e.completed),
            (C.initialProgressFetched = !0),
            (C.progress = e.progress),
            (C.lastCheckedAt = a.now()),
            (p = C.completed
              ? _.TooltipActions.QUEST_COMPLETION
              : _.TooltipActions.TRACK_PROGRESS);
        },
        g = (e, t, n) => {
          (!C.completed || e.dropsQuestId !== C.dropsQuestId) &&
            ((C.game = t),
            (C.dropsQuestId = e.dropsQuestId),
            (C.gameTitle = e.title),
            (C.completed = !1),
            (C.interrupted = !1),
            (C.streamKey = n),
            (C.retries = 0),
            (C.lastCheckedAt = a.now()),
            S.start(5e3, () => A(!0)));
        };
      class M extends l.default.Store {
        initialize() {
          this.waitFor(o.default);
        }
        getActivityPanelTooltipAction() {
          return p;
        }
        getIsPartnerGameQuestComplete(e) {
          var t;
          let n = (0, f.getDrop)(e);
          if (null == n || null == I) return !1;
          let s = !!(null === (t = I[n.dropsQuestId]) || void 0 === t
              ? void 0
              : t.completed_at),
            a = (C.completed && C.gameTitle === n.title) || s;
          return a;
        }
        get serverEligibleByQuestIds() {
          return m;
        }
        get platformAvailability() {
          return T;
        }
        get userStatus() {
          return I;
        }
        get activityPanelTooltipAction() {
          return p;
        }
        get enrolledDropsByQuestId() {
          return N;
        }
        get hasInitialProgressFetched() {
          return C.initialProgressFetched;
        }
        get isCurrentQuestCompleted() {
          return C.completed;
        }
        get isCurrentQuestInterrupted() {
          return C.interrupted;
        }
        get currentDropQuestGameTitle() {
          return C.gameTitle;
        }
        get currentDropQuestStreamProgress() {
          let e = C.progress;
          if (null == e || null == e.steps || 0 === e.steps.length) return 0;
          let t = e.steps.find(e => "stream_length" === e.name);
          return null == t ? 0 : t.percent;
        }
      }
      M.displayName = "DropsStore";
      var O = new M(r.default, {
        DROPS_ELIGIBILITY_FETCH_SUCCESS: e => {
          m[e.dropsQuestId] = e.isEligible;
        },
        DROPS_PLATFORM_AVAILABILITY_SUCCESS: e => {
          T = e.availablePlatforms.filter(e => _.DROPS_PLATFORMS.includes(e));
        },
        DROPS_USER_STATUS_FETCH_SUCCESS: e => {
          var t;
          I = null !== (t = e.codes) && void 0 !== t ? t : {};
        },
        DROPS_USER_STATUS_FETCH_FAILURE: e => {
          I = {};
        },
        DROPS_ENROLLED_USER_FETCH_SUCCESS: e => {
          N[e.dropsQuestId] = {
            isEnrolled: e.isEnrolled,
            enrolledUser: e.enrolledUser,
          };
        },
        DROPS_FETCH_PROGRESS_SUCCESS: h,
        DROPS_FETCH_PROGRESS_FAILURE: e => {
          !C.initialProgressFetched &&
            ((C.initialProgressFetched = !0),
            (p = _.TooltipActions.STREAM_CTA));
        },
        DROPS_HEARTBEAT_SUCCESS: e => {
          h(e), (m[e.dropsQuestId] = !0), A();
        },
        DROPS_HEARTBEAT_FAILURE: e => {
          let { dropsQuestId: t, statusCode: n } = e;
          if (
            ((C.completed = !1),
            (C.initialProgressFetched = !0),
            (C.lastCheckedAt = a.now()),
            429 === n && 0 === C.retries)
          ) {
            (C.retries = C.retries + 1), A();
            return;
          }
          (p = _.TooltipActions.STREAM_CTA),
            403 === n ? (m[t] = !1) : (C.interrupted = !0);
        },
        DROPS_UNENROLL_USER: e => {
          (I = null),
            (m = { ...m }),
            delete m[e.dropsQuestId],
            (N = { ...N }),
            delete N[e.dropsQuestId],
            C.dropsQuestId === e.dropsQuestId &&
              (C = {
                completed: !1,
                initialProgressFetched: !1,
                interrupted: !1,
                retries: 0,
              });
        },
        STREAM_CLOSE: () => {
          C.completed && (p = _.TooltipActions.QUEST_COMPLETION),
            (C.interrupted = !1),
            (C.retries = 0),
            S.stop();
        },
        STREAM_START: function (e) {
          var t;
          let { streamType: n, guildId: s, channelId: a, pid: l } = e,
            i = (0, u.encodeStreamKey)({
              streamType: n,
              guildId: s,
              channelId: a,
              ownerId: d.default.getId(),
            });
          if (null == l) return;
          let c = o.default.getGameForPID(l);
          if (null == c) return;
          let T = Object.values(_.DROPS_GAMES).find(e =>
            e.gameSearchTerm.find(e => {
              var t;
              return (
                e.toLowerCase() ===
                (null === (t = c.name) || void 0 === t
                  ? void 0
                  : t.toLowerCase())
              );
            })
          );
          if (null == T || (0, f.getDropExpired)(T)) return;
          let I =
            null === (t = (0, f.getDropsExperimentForDrop)(T)) || void 0 === t
              ? void 0
              : t.getCurrentConfig(
                  { location: "1" },
                  { autoTrackExposure: !1 }
                );
          if (null == I || !I.dropsEnabled) return;
          let m = I.autoEnrollment;
          (null != N[T.dropsQuestId] && N[T.dropsQuestId].isEnrolled) || m
            ? g(T, c, i)
            : r.default.wait(async () => {
                var e;
                await (0, E.fetchEnrolledUser)(T.dropsQuestId),
                  (null === (e = N[T.dropsQuestId]) || void 0 === e
                    ? void 0
                    : e.isEnrolled) && g(T, c, i);
              });
        },
        LOGOUT: function () {
          (m = {}), (N = {}), (I = {}), S.stop();
        },
      });
    },
    579565: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getDropsExperiment: function () {
            return E;
          },
          getDropsExperimentForDrop: function () {
            return f;
          },
          doesGameTitleMatchList: function () {
            return _;
          },
          getEligibleGameLastSeenStartTimeSeconds: function () {
            return T;
          },
          isDropGameDetected: function () {
            return I;
          },
          getEligibilityByRunningGameDetection: function () {
            return m;
          },
          getShowDropsNoticeBanner: function () {
            return p;
          },
          getShowDropsEndedIncompleteBanner: function () {
            return S;
          },
          getDropExpired: function () {
            return C;
          },
          getDrop: function () {
            return A;
          },
          getDropByQuestId: function () {
            return h;
          },
          getDropsPartnerGameNameByQuestId: function () {
            return g;
          },
          getPlatformLabel: function () {
            return M;
          },
        });
      var s = n("866227"),
        a = n.n(s),
        l = n("161454"),
        i = n("845579"),
        r = n("546463"),
        o = n("718517"),
        u = n("931115"),
        d = n("411511"),
        c = n("782340");
      function E(e) {
        let t = A(e);
        return null == t ? null : f(t);
      }
      function f(e) {
        if (e.dropsQuestId === d.FORTNITE_QUEST_ID)
          return u.DropsForGoLiveFortniteExperiment;
        return null;
      }
      function _(e, t) {
        if (null == e) return !1;
        let n = r.default.getGameByName(e);
        return (
          !!(
            null != n &&
            t.some(e => {
              var t;
              return (
                e.toLowerCase() ===
                (null == n
                  ? void 0
                  : null === (t = n.name) || void 0 === t
                    ? void 0
                    : t.toLowerCase())
              );
            })
          ) || !1
        );
      }
      function T() {
        return (
          Math.floor(Date.now() / 1e3) -
          d.DROPS_ELIGIBILITY_SEEN_GAMES_LOOKBACK_SECONDS
        );
      }
      function I(e, t, n) {
        var s, a, l, i;
        let r = A(e);
        if (null == r) return !1;
        let u =
          ((s = t),
          (a = d.PartnerGameNameToSearchTermMapping[e]),
          null !== (l = s.find(e => _(e.name, a))) && void 0 !== l ? l : null);
        if (null != u) {
          let e =
            null !== (i = null == u ? void 0 : u.lastLaunched) && void 0 !== i
              ? i
              : 0;
          return n <= u.lastFocused || n * o.default.Millis.SECOND <= e;
        }
        return !1;
      }
      function m(e) {
        let t = l.default.getGamesSeen(!1);
        return I(e, t, T());
      }
      function N(e, t) {
        let { endDate: n } = e,
          s = a(),
          l = a(n, d.noticeBannerDateFormat),
          i = a(
            s
              .clone()
              .add(e.dropsNoticeBannerDurationDays, "days")
              .format(d.noticeBannerDateFormat)
          ),
          r = l.isSameOrBefore(i),
          o = l.isBefore(s, "minute");
        return r && ((t && !o) || (!t && o));
      }
      function p(e) {
        var t;
        let n = A(e);
        if (
          null == n ||
          !(null === (t = E(e)) || void 0 === t
            ? void 0
            : t.getCurrentConfig({ location: "1" }, { autoTrackExposure: !1 })
                .dropsEnabled)
        )
          return !1;
        let s = i.DropsOptedOut.getSetting(),
          a = N(n, !0);
        return !s && a;
      }
      function S(e) {
        var t, n;
        let s = A(e);
        if (
          null == s ||
          !(null === (n = E(e)) || void 0 === n
            ? void 0
            : null ===
                  (t = n.getCurrentConfig(
                    { location: "2" },
                    { autoTrackExposure: !1 }
                  )) || void 0 === t
              ? void 0
              : t.dropsEnabled)
        )
          return !1;
        let a = i.DropsOptedOut.getSetting(),
          l = N(s, !1);
        return C(s) && !a && l;
      }
      function C(e) {
        let { endDate: t } = e,
          n = a(t, "YYYY-MM-DD HH:mm"),
          s = a();
        return s > n;
      }
      function A(e) {
        let t = d.DROPS_GAMES[e];
        return t;
      }
      function h(e) {
        let t = Object.values(d.DROPS_GAMES).find(t => t.dropsQuestId === e);
        return t;
      }
      function g(e) {
        let t = Object.keys(d.DROPS_GAMES).find(
          t => d.DROPS_GAMES[t].dropsQuestId === e
        );
        return t;
      }
      function M(e) {
        switch (e) {
          case "SWITCH":
            return c.default.Messages.DROPS_PLATFORM_SWITCH;
          case "PC":
            return c.default.Messages.DROPS_PLATFORM_PC;
          case "PLAYSTATION":
            return c.default.Messages.DROPS_PLATFORM_PLAYSTATION;
          case "XBOX":
            return c.default.Messages.DROPS_PLATFORM_XBOX;
          default:
            return "";
        }
      }
    },
    757557: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("697218"),
        i = n("489622"),
        r = n("579565"),
        o = n("994428"),
        u = n("782340"),
        d = n("417648"),
        c = e => {
          var t;
          let { noticeType: n, markAsDismissed: c, partnerGame: E } = e,
            f = (0, a.useStateFromStores)([l.default], () =>
              l.default.getCurrentUser()
            );
          if (null == E) return null;
          let _ = (0, r.getDrop)(E);
          if (null == _) return null;
          let T =
            "https://survey.alchemer.com/s3/7043057/Drops-NPS?user_id=".concat(
              null !== (t = null == f ? void 0 : f.id) && void 0 !== t ? t : ""
            );
          return (0, s.jsxs)(i.default, {
            className: d.colorGuildBlue,
            children: [
              u.default.Messages.DROPS_BANNER_ENDED_INCOMPLETE.format({
                gameTitle: _.title,
              }),
              (0, s.jsx)(i.NoticeButtonAnchor, {
                href: T,
                target: "_blank",
                onClick: () => {
                  c(o.ContentDismissActionType.PRIMARY);
                },
                children: u.default.Messages.DROPS_FEEDBACK_SURVEY,
              }),
              (0, s.jsx)(i.NoticeCloseButton, {
                onClick: () => {
                  c(o.ContentDismissActionType.DISMISS);
                },
                noticeType: n,
              }),
            ],
          });
        };
    },
    994750: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("866227"),
        l = n.n(a),
        i = n("489622"),
        r = n("243632"),
        o = n("994428"),
        u = n("782340"),
        d = n("132576");
      let c = (e, t) => ({
        bodyText: u.default.Messages.DROPS_BANNER_NOTICE.format({
          gameName: e.title,
          endDate: l(e.endDate, "YYYY-MM-DD HH:mm").format("MMM Do"),
          streamLengthRequirement: t,
        }),
        articleUrl: e.articleUrl,
      });
      var E = e => {
        let { noticeType: t, markAsDismissed: n, partnerGame: a } = e,
          l = (0, r.useDropsExperiment)(a);
        if (null == l) return null;
        let { bodyText: E, articleUrl: f } = c(
          l.drop,
          l.config.streamLengthRequirement
        );
        return (0, s.jsxs)(i.default, {
          className: d.colorGuildBlue,
          children: [
            E,
            (0, s.jsx)(i.NoticeButtonAnchor, {
              href: f,
              target: "_blank",
              onClick: () => {
                n(o.ContentDismissActionType.PRIMARY);
              },
              children: u.default.Messages.LEARN_MORE,
            }),
            (0, s.jsx)(i.NoticeCloseButton, {
              onClick: () => {
                n(o.ContentDismissActionType.DISMISS);
              },
              noticeType: t,
            }),
          ],
        });
      };
    },
    686538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleSenderFalsePositiveFlow: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("477566"),
        i = n("290226"),
        r = n("447435"),
        o = n("817892"),
        u = n("782340");
      function d(e, t) {
        (0, r.trackMediaRedactionAction)({
          action:
            r.TrackMediaRedactionActionType
              .EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_CLICKED,
          messageId: t,
          channelId: e,
        });
        let d = o.default.canSubmitFpReport(t);
        if (!d) {
          l.default.show({
            title: u.default.Messages.SENDER_BLOCKED_MEDIA_EXPIRED_ERROR_HEADER,
            body: u.default.Messages.SENDER_BLOCKED_MEDIA_EXPIRED_ERROR_BODY,
            confirmText: u.default.Messages.OKAY,
          }),
            i.default.disableFalsePositiveButton(e, t);
          return;
        }
        (0, a.openModalLazy)(async () => {
          let { default: a } = await n("492996");
          return n => (0, s.jsx)(a, { channelId: e, messageId: t, ...n });
        });
      }
    },
    290226: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("913144"),
        a = {
          disableFalsePositiveButton: function (e, t) {
            s.default.dispatch({
              type: "MESSAGE_EXPLICIT_CONTENT_FP_SUBMIT",
              messageId: t,
              channelId: e,
            });
          },
        };
    },
    817892: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var s = n("446674"),
        a = n("913144"),
        l = n("718517"),
        i = n("299039");
      let r = 14 * l.default.Millis.DAY,
        o = Object.freeze([]),
        u = {},
        d = {};
      function c() {
        (u = {}), (d = {});
      }
      class E extends s.default.Store {
        getFpMessageInfo(e) {
          return u[e];
        }
        getChannelFpInfo(e) {
          var t;
          return null !== (t = d[e]) && void 0 !== t ? t : o;
        }
        canSubmitFpReport(e) {
          let t = u[e];
          return null != t && !t.reportSubmit && i.default.age(t.messageId) < r;
        }
      }
      E.displayName = "FalsePositiveStore";
      var f = new E(a.default, {
        LOGOUT: function () {
          (function () {
            (u = {}), (d = {});
          })();
        },
        CONNECTION_OPEN: function () {
          (function () {
            (u = {}), (d = {});
          })();
        },
        MESSAGE_EXPLICIT_CONTENT_FP_CREATE: function (e) {
          var t;
          let { messageId: n, channelId: s, attachments: a } = e,
            l = {
              messageId: n,
              channelId: s,
              attachments: a,
              reportSubmit: !1,
            },
            i = null !== (t = d[s]) && void 0 !== t ? t : o;
          (d[s] = [...i, l]), (u[n] = l);
        },
        MESSAGE_EXPLICIT_CONTENT_FP_SUBMIT: function (e) {
          let { messageId: t, channelId: n } = e,
            s = d[n];
          null != s &&
            ((d[n] = s.map(e =>
              e.messageId === t ? { ...e, reportSubmit: !0 } : e
            )),
            (u[t] = { ...u[t], reportSubmit: !0 }));
        },
      });
    },
    908480: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useExplicitMediaActions: function () {
            return l;
          },
        }),
        n("222007");
      var s = n("884691"),
        a = n("448993");
      function l(e) {
        let { onError: t, onSuccess: n, report: l } = e,
          [i, r] = s.useState(!1),
          o = s.useCallback(async () => {
            if (!i) {
              r(!0);
              try {
                await l(), null == n || n();
              } catch (n) {
                let e = new a.APIError(n);
                null == t || t(e);
              } finally {
                r(!1);
              }
            }
          }, [i, t, n, l]);
        return { reportFalsePositive: o, isReportFalsePositiveLoading: i };
      }
    },
    45476: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useShouldRenderReportFalsePositiveButton: function () {
            return l;
          },
        });
      var s = n("65597"),
        a = n("817892");
      let l = e => {
        let t = (0, s.useStateFromStores)([a.default], () =>
          a.default.getFpMessageInfo(e)
        );
        return null != t;
      };
    },
    925685: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("266926"),
        i = n("782340"),
        r = n("796264");
      function o(e) {
        let { message: t } = e;
        return (0, s.jsxs)(a.Clickable, {
          onClick: () => {
            (0, a.openModalLazy)(async () => {
              let { default: e } = await n
                .el("335678")
                .then(n.bind(n, "335678"));
              return n =>
                (0, s.jsx)(e, {
                  channelId: t.channel_id,
                  messageId: t.id,
                  ...n,
                });
            });
          },
          className: r.accessory,
          children: [
            (0, s.jsx)(l.default, { width: 16, height: 16 }),
            (0, s.jsx)(a.Text, {
              variant: "text-xs/normal",
              className: r.accessoryText,
              children:
                i.default.Messages.OBSCURED_CONTENT_LEARN_MORE_MESSAGE_LABEL,
            }),
          ],
        });
      }
    },
    84849: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("686538"),
        o = n("817892"),
        u = n("782340");
      function d(e) {
        let { messageId: t, channelId: n } = e,
          d = (0, l.useStateFromStores)([o.default], () =>
            o.default.canSubmitFpReport(t)
          ),
          c = a.useCallback(() => {
            (0, r.handleSenderFalsePositiveFlow)(n, t);
          }, [n, t]);
        return (0, s.jsx)(i.Button, {
          size: i.Button.Sizes.MEDIUM,
          color: i.Button.Colors.PRIMARY,
          onClick: c,
          disabled: !d,
          children: u.default.Messages.SENDER_BLOCKED_MEDIA_MARK_FALSE_POSITIVE,
        });
      }
    },
    786214: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleSuccess: function () {
            return C;
          },
          ExplicitMediaFalsePositiveModal: function () {
            return A;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("246111"),
        o = n("77078"),
        u = n("772017"),
        d = n("651693"),
        c = n("153327"),
        E = n("476765"),
        f = n("58608"),
        _ = n("447435"),
        T = n("612920"),
        I = n("782340"),
        m = n("833825");
      let N = e => {
          let { attachment: t } = e,
            { url: n, description: a } = t;
          return null == n ? null : (0, s.jsx)(S, { url: n, description: a });
        },
        p = e => {
          var t, n, a;
          let { embed: l } = e;
          if (!T.SUPPORTED_EMBED_TYPES.has(l.type)) return null;
          let i =
            void 0 !== l.video && l.type !== r.MessageEmbedTypes.GIFV
              ? l.video.url
              : null !==
                    (a =
                      null === (t = l.thumbnail) || void 0 === t
                        ? void 0
                        : t.url) && void 0 !== a
                ? a
                : null === (n = l.image) || void 0 === n
                  ? void 0
                  : n.url;
          return null == i ? null : (0, s.jsx)(S, { url: i });
        },
        S = e => {
          let { url: t, description: n } = e,
            a = (0, d.isVideoUrl)(t);
          return (0, s.jsx)("div", {
            className: m.mediaContainer,
            children: a
              ? (0, s.jsx)(f.default, {
                  className: i(m.video, m.media),
                  controls: !0,
                  src: t,
                })
              : (0, s.jsx)("img", {
                  className: i(m.image, m.media),
                  src: t,
                  alt: n,
                }),
          });
        };
      function C(e) {
        u.default.pop(),
          (0, c.showSafetyToast)({
            id: "explicit-media-false-positive-modal",
            text: I.default.Messages
              .OBSCURED_CONTENT_MARK_FALSE_POSITIVE_SUCCESS,
          }),
          e();
      }
      function A(e) {
        let {
            channelId: t,
            messageId: n,
            isReportFalsePositiveLoading: l,
            analyticsContext: i,
            attachmentPreview: r,
            embedPreview: u,
            onConfirmPress: d,
            transitionState: c,
            onClose: f,
          } = e,
          T = (0, E.useUID)(),
          S = a.useCallback(() => {
            (0, _.trackMediaRedactionAction)({
              action:
                _.TrackMediaRedactionActionType
                  .EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CANCEL,
              channelId: t,
              messageId: n,
              context: i,
            }),
              f();
          }, [t, n, i, f]),
          C = a.useCallback(() => {
            null == d || d(),
              (0, _.trackMediaRedactionAction)({
                action:
                  _.TrackMediaRedactionActionType
                    .EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CONFIRM,
                channelId: t,
                messageId: n,
                context: i,
              });
          }, [t, n, i, d]);
        return (
          a.useEffect(() => {
            (0, _.trackMediaRedactionAction)({
              action:
                _.TrackMediaRedactionActionType
                  .EXPLICIT_MEDIA_FALSE_POSITIVE_VIEWED,
              channelId: t,
              messageId: n,
              context: i,
            });
          }, [t, n, i]),
          (0, s.jsxs)(o.ModalRoot, {
            transitionState: c,
            "aria-labelledby": T,
            size: o.ModalSize.SMALL,
            children: [
              (0, s.jsxs)(o.ModalContent, {
                children: [
                  (0, s.jsx)(o.ModalCloseButton, {
                    onClick: S,
                    className: m.closeButton,
                  }),
                  (0, s.jsx)(o.Heading, {
                    id: T,
                    variant: "heading-lg/semibold",
                    color: "header-primary",
                    className: m.header,
                    children:
                      I.default.Messages
                        .OBSCURED_CONTENT_MARK_FALSE_POSITIVE_MODAL_HEADER,
                  }),
                  (0, s.jsx)(o.Text, {
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    className: m.subheader,
                    children:
                      I.default.Messages
                        .OBSCURED_CONTENT_MARK_FALSE_POSITIVE_MODAL_DESCRIPTION,
                  }),
                  null != r && (0, s.jsx)(N, { attachment: r }),
                  null != u && (0, s.jsx)(p, { embed: u }),
                ],
              }),
              (0, s.jsxs)(o.ModalFooter, {
                children: [
                  (0, s.jsx)(o.Button, {
                    className: m.button,
                    disabled: l,
                    submitting: l,
                    size: o.Button.Sizes.MEDIUM,
                    color: o.Button.Colors.BRAND,
                    onClick: C,
                    children: I.default.Messages.CONFIRM,
                  }),
                  (0, s.jsx)(o.Button, {
                    className: m.button,
                    disabled: l,
                    color: o.Button.Colors.TRANSPARENT,
                    size: o.Button.Sizes.MEDIUM,
                    onClick: S,
                    children: I.default.Messages.CANCEL,
                  }),
                ],
              }),
            ],
          })
        );
      }
    },
    492996: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("65597"),
        l = n("77078"),
        i = n("290226"),
        r = n("695681"),
        o = n("447435"),
        u = n("817892"),
        d = n("908480"),
        c = n("786214"),
        E = n("782340");
      function f(e) {
        let { channelId: t, messageId: n, transitionState: f, onClose: _ } = e,
          T = (0, a.useStateFromStores)([u.default], () =>
            u.default.getFpMessageInfo(n)
          ),
          I = T.attachments.map(e => e.id),
          m = T.attachments.map(e => e.filename),
          { reportFalsePositive: N, isReportFalsePositiveLoading: p } = (0,
          d.useExplicitMediaActions)({
            onSuccess: () => {
              (0, c.handleSuccess)(_),
                i.default.disableFalsePositiveButton(t, n);
            },
            onError: () => {
              (0, l.showToast)(
                (0, l.createToast)(
                  E.default.Messages.ERROR_GENERIC_TITLE,
                  l.ToastType.FAILURE
                )
              );
            },
            report: () => {
              (0, r.reportFailedSendFalsePositive)(t, n, I, m);
            },
          }),
          S = T.attachments.length > 0;
        return (
          !S && _(),
          (0, s.jsx)(c.ExplicitMediaFalsePositiveModal, {
            messageId: n,
            channelId: t,
            isReportFalsePositiveLoading: p,
            analyticsContext:
              o.TrackMediaRedactionContext
                .EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_FLOW,
            onConfirmPress: N,
            transitionState: f,
            onClose: _,
          })
        );
      }
    },
    661579: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("153160"),
        a = n("782340");
      function l(e) {
        let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (!e.available)
          return a.default.Messages.GAME_ACTION_BUTTON_UNAVAILABLE;
        if (e.premium && !n)
          return a.default.Messages.APPLICATION_STORE_FREE_WITH_PREMIUM;
        let l = e.getPrice(null, t);
        if (null != l)
          return l.amount > 0
            ? (0, s.formatPrice)(l.amount, l.currency)
            : a.default.Messages.APPLICATION_STORE_FREE;
        return a.default.Messages.GAME_ACTION_BUTTON_UNAVAILABLE;
      }
    },
    875037: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-08_guild_usage_survey",
        label: "Guild Usage Survey",
        defaultConfig: { showSurvey: !1 },
        treatments: [
          { id: 1, label: "show survey nag bar", config: { showSurvey: !0 } },
        ],
      });
      var l = a;
    },
    381065: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("466818"),
        o = n("645266"),
        u = n("305961"),
        d = n("18494"),
        c = n("162771"),
        E = n("476263"),
        f = n("45029"),
        _ = n("489622"),
        T = n("599110"),
        I = n("398654"),
        m = n("712125"),
        N = n("311161"),
        p = n("49111"),
        S = n("724210"),
        C = n("782340"),
        A = n("932466");
      function h(e) {
        var t, h;
        let { onDismiss: g } = e,
          M = (0, l.useStateFromStores)([c.default], () =>
            c.default.getGuildId()
          ),
          O = (0, l.useStateFromStores)(
            [d.default],
            () => (null != M ? d.default.getChannelId(M) : null),
            [M]
          ),
          R = null != M ? M : null,
          L = (0, l.useStateFromStores)(
            [u.default],
            () => (null != R ? u.default.getGuild(R) : null),
            [R]
          ),
          {
            shouldShowIncidentActions: v,
            incidentData: P,
            isUnderLockdown: D,
          } = (0, I.useGuildIncidentsState)(R),
          x = (0, r.useCanAccessMemberSafetyPage)(
            null !== (t = null == L ? void 0 : L.id) && void 0 !== t
              ? t
              : p.EMPTY_STRING_SNOWFLAKE_ID
          ),
          y = a.useCallback(
            () => null != L && (0, o.goToMemberSafetyDashboard)(L.id),
            [L]
          );
        if (null == L || null == P || !v) return null;
        let U = e => {
            if (e && x && O !== S.StaticChannelRoute.MEMBER_SAFETY && y()) {
              T.default.track(p.AnalyticEvents.APP_NOTICE_PRIMARY_CTA_OPENED, {
                notice_type: p.NoticeTypes.GUILD_RAID_NOTIFICATION,
                guild_id: L.id,
              });
              return;
            }
            (0, i.openModalLazy)(async () => {
              let e = {
                  source: m.GuildIncidentActionSources.NAGBAR,
                  alertType: (0, N.getIncidentAlertType)(P),
                },
                { default: t } = await n.el("186638").then(n.bind(n, "186638"));
              return n =>
                (0, s.jsx)(t, { ...n, guildId: L.id, analyticsData: e });
            });
          },
          j = (0, s.jsx)(E.default, {
            className: A.guildIcon,
            guild: L,
            size: E.default.Sizes.MINI,
          }),
          b = (0, N.getSecurityActionDetailsString)(P, L.name),
          G =
            null !== (h = P.dmsDisabledUntil) && void 0 !== h
              ? h
              : P.invitesDisabledUntil;
        if (null != G && D)
          return (0, s.jsxs)(_.default, {
            className: A.notice,
            color: _.NoticeColors.NEUTRAL,
            children: [
              (0, s.jsx)(_.NoticeCloseButton, {
                onClick: g,
                noticeType: p.NoticeTypes.GUILD_RAID_NOTIFICATION,
              }),
              j,
              b,
              (0, s.jsx)(_.NoticeButton, {
                className: A.actionButton,
                onClick: () => U(!1),
                children: (0, s.jsxs)("div", {
                  className: A.actionButtonInner,
                  children: [
                    (0, s.jsx)(f.default, { width: 16, height: 16 }),
                    (0, s.jsx)("span", {
                      children:
                        C.default.Messages
                          .GUILD_ANTIRAID_LOCKDOWN_NAGBAR_ACTION,
                    }),
                  ],
                }),
              }),
            ],
          });
        let B = (0, N.hasDetectedRaid)(P)
            ? C.default.Messages.GUILD_ANTIRAID_NAGBAR_RAID_MESSAGE_2_NEW.format(
                { guildName: L.name }
              )
            : (0, N.hasDetectedDMRaid)(P)
              ? C.default.Messages.GUILD_ANTIRAID_NAGBAR_DM_RAID_MESSAGE_2_NEW.format(
                  { guildName: L.name }
                )
              : C.default.Messages.GUILD_ANTIRAID_NAGBAR_MESSAGE_2_NEW.format({
                  guildName: L.name,
                }),
          k = x && O === S.StaticChannelRoute.MEMBER_SAFETY;
        return (0, s.jsxs)(_.default, {
          className: A.notice,
          color: _.NoticeColors.WARNING,
          children: [
            (0, s.jsx)(_.NoticeCloseButton, {
              onClick: g,
              noticeType: p.NoticeTypes.GUILD_RAID_NOTIFICATION,
            }),
            j,
            B,
            !k &&
              (0, s.jsx)(_.NoticeButton, {
                className: A.actionButton,
                onClick: () => U(!0),
                children: (0, s.jsx)("div", {
                  className: A.actionButtonInner,
                  children: (0, s.jsx)("span", {
                    children:
                      C.default.Messages.GUILD_ANTIRAID_NAGBAR_ACTION_VIEW,
                  }),
                }),
              }),
          ],
        });
      }
    },
    956967: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useCurrentUserHasAutomodQuarantinedProfile: function () {
            return N;
          },
          useGuildAutomodProfileQuarantineErrors: function () {
            return p;
          },
          useOpenFixQuarantinedProfileModal: function () {
            return S;
          },
        }),
        n("702976");
      var s = n("884691"),
        a = n("65597"),
        l = n("79112"),
        i = n("685665"),
        r = n("929423"),
        o = n("271938"),
        u = n("26989"),
        d = n("305961"),
        c = n("957255"),
        E = n("162771"),
        f = n("681937"),
        _ = n("49111"),
        T = n("657944"),
        I = n("397336"),
        m = n("782340");
      function N(e) {
        return (0, a.useStateFromStores)(
          [o.default, u.default],
          () => {
            if (null == e) return !1;
            let t = o.default.getId();
            return (0, f.hasAutomodQuarantinedProfile)(
              u.default.getMember(e, t)
            );
          },
          [e]
        );
      }
      function p(e) {
        return (0, a.useStateFromStoresObject)(
          [o.default, u.default, E.default, d.default],
          () => {
            let t = { nick: void 0, bio: void 0 },
              n = E.default.getGuildId(),
              s = null != e ? e : n,
              a = d.default.getGuild(s);
            if (null == a || null == s) return t;
            let l = o.default.getId(),
              i = u.default.getMember(s, l),
              r = (0, f.getAutomodQuarantinedProfileFlags)(
                null == i ? void 0 : i.flags
              );
            if (0 === r.size) return t;
            if (
              r.has(
                T.GuildMemberFlags
                  .AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME
              )
            ) {
              if (null == e) {
                var c;
                t.nick = [
                  m.default.Messages.GUILD_AUTOMOD_PROFILE_ERROR_QUARANTINE_USERNAME_IN_GUILD.format(
                    {
                      guildName: null !== (c = a.name) && void 0 !== c ? c : "",
                    }
                  ),
                ];
              } else
                t.nick = [
                  m.default.Messages
                    .GUILD_AUTOMOD_PROFILE_ERROR_QUARANTINE_USERNAME,
                ];
            }
            return (
              r.has(T.GuildMemberFlags.AUTOMOD_QUARANTINED_BIO) &&
                (t.bio = [
                  m.default.Messages.GUILD_AUTOMOD_PROFILE_ERROR_QUARANTINE_BIO,
                ]),
              t
            );
          },
          [e]
        );
      }
      function S(e) {
        let {
            guildId: t,
            scrollPosition: n,
            analyticsLocation: o,
            analyticsLocations: u,
            openWithoutBackstack: E,
          } = e,
          { analyticsLocations: f } = (0, i.default)(),
          T = (0, a.useStateFromStores)(
            [d.default],
            () => d.default.getGuild(t),
            [t]
          ),
          m = (0, a.useStateFromStores)(
            [c.default],
            () => null != T && c.default.can(_.Permissions.CHANGE_NICKNAME, T),
            [T]
          ),
          N = s.useCallback(() => {
            if (null == T) return;
            let e = _.UserSettingsSections.PROFILE_CUSTOMIZATION,
              t = I.ProfileCustomizationSubsection.GUILD;
            m
              ? (0, r.initGuildIdentitySettings)(T, null != u ? u : f)
              : (t = I.ProfileCustomizationSubsection.USER_PROFILE),
              l.default.open(e, t, {
                scrollPosition: n,
                analyticsLocation: o,
                analyticsLocations: u,
                openWithoutBackstack: E,
              });
          }, [m, n, o, u, E, T, f]);
        return [N, m];
      }
    },
    840968: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("489622"),
        l = n("956967"),
        i = n("782340"),
        r = n("231537");
      function o(e) {
        let { guildId: t, analyticsLocations: n, analyticsLocation: o } = e,
          [u, d] = (0, l.useOpenFixQuarantinedProfileModal)({
            guildId: t,
            analyticsLocations: n,
            analyticsLocation: o,
            openWithoutBackstack: !0,
          }),
          c = d
            ? i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE
            : i.default.Messages
                .GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_NO_PERMS,
          E = d
            ? i.default.Messages
                .GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_CTA
            : i.default.Messages
                .GUILD_AUTOMOD_NAGBAR_QUARANTINED_ACCOUNT_USERNAME_CTA;
        return (0, s.jsxs)(a.default, {
          color: a.NoticeColors.CUSTOM,
          className: r.quarantineNotice,
          children: [
            c,
            (0, s.jsx)(a.NoticeButton, { onClick: u, children: E }),
          ],
        });
      }
    },
    549103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("872717"),
        a = n("913144"),
        l = n("567054"),
        i = n("982527"),
        r = n("49111");
      let o = async e => {
          let {
            guildId: t,
            status: n = l.GuildJoinRequestApplicationStatuses.SUBMITTED,
            before: o,
            after: u,
            limit: d = l.MAX_RESULTS_PER_PAGE,
          } = e;
          a.default.dispatch({ type: "GUILD_JOIN_REQUESTS_FETCH_START" });
          try {
            var c;
            let e = await s.HTTP.get({
                url: r.Endpoints.GUILD_JOIN_REQUESTS(t),
                query: { status: n, limit: d, before: o, after: u },
              }),
              l = e.body.total,
              E =
                null !== (c = e.body.guild_join_requests) && void 0 !== c
                  ? c
                  : [],
              f = E.map(i.joinRequestFromServer);
            return (
              a.default.dispatch({
                type: "GUILD_JOIN_REQUESTS_FETCH_SUCCESS",
                status: n,
                requests: f,
                total: l,
                limit: d,
                guildId: t,
              }),
              e
            );
          } catch (e) {
            throw (
              (a.default.dispatch({
                type: "GUILD_JOIN_REQUESTS_FETCH_FAILURE",
              }),
              e)
            );
          }
        },
        u = async e => {
          try {
            let t = await s.HTTP.del({
              url: r.Endpoints.GUILD_MEMBER_REQUEST_TO_JOIN(e),
            });
            return (
              a.default.dispatch({
                type: "USER_GUILD_JOIN_REQUEST_UPDATE",
                guildId: e,
                request: null,
              }),
              t
            );
          } catch (e) {
            throw e;
          }
        },
        d = async (e, t) => {
          try {
            let n = await s.HTTP.post({
              url: r.Endpoints.GUILD_JOIN_REQUEST_ACK(e, t),
            });
            return n;
          } catch (e) {
          } finally {
            a.default.dispatch({
              type: "ACK_APPROVED_GUILD_JOIN_REQUEST",
              id: t,
              guildId: e,
            });
          }
        },
        c = async function (e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : l.GuildJoinRequestApplicationStatuses.APPROVED,
            i = arguments.length > 3 ? arguments[3] : void 0,
            o = await s.HTTP.patch({
              url: r.Endpoints.GUILD_JOIN_REQUEST(e, t),
              body: { action: n, rejection_reason: i },
            });
          a.default.dispatch({
            type: "GUILD_JOIN_REQUEST_UPDATE",
            guildId: e,
            status: o.body.application_status,
            request: o.body,
          });
        },
        E = async (e, t) => {
          let n = await s.HTTP.patch({
            url: r.Endpoints.GUILD_JOIN_REQUESTS(e),
            body: { action: t },
          });
          return (
            a.default.dispatch({
              type: "GUILD_JOIN_REQUESTS_BULK_ACTION",
              guildId: e,
              action: t,
            }),
            n.body
          );
        },
        f = async e => {
          try {
            let t = await s.HTTP.post({
                url: r.Endpoints.GUILD_MEMBER_REQUEST_TO_JOIN(e),
              }),
              { body: n } = t;
            return (
              a.default.dispatch({
                type: "USER_GUILD_JOIN_REQUEST_UPDATE",
                guildId: e,
                request: n,
              }),
              n
            );
          } catch (e) {
            throw e;
          }
        },
        _ = async () => {
          let e = await s.HTTP.get({
            url: r.Endpoints.USER_JOIN_REQUEST_GUILDS,
          });
          a.default.dispatch({
            type: "USER_JOIN_REQUEST_GUILDS_FETCH",
            guilds: e.body,
          });
        };
      var T = {
        fetchGuildJoinRequests: o,
        ackUserGuildJoinRequest: d,
        removeGuildJoinRequest: u,
        updateGuildJoinRequest: c,
        actionAllPendingJoinRequests: E,
        resetGuildJoinRequest: f,
        fetchRequestToJoinGuilds: _,
        setSelectedApplicationTab: (e, t) => {
          a.default.dispatch({
            type: "GUILD_JOIN_REQUESTS_SET_APPLICATION_TAB",
            guildId: e,
            applicationTab: t,
          });
        },
        setSelectedSortOrder: (e, t) => {
          a.default.dispatch({
            type: "GUILD_JOIN_REQUESTS_SET_SORT_ORDER",
            guildId: e,
            sortOrder: t,
          });
        },
        setSelectedGuildJoinRequest: (e, t) => {
          a.default.dispatch({
            type: "GUILD_JOIN_REQUESTS_SET_SELECTED",
            guildId: e,
            request: t,
          });
        },
      };
    },
    747554: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("803182"),
        r = n("90915"),
        o = n("446674"),
        u = n("77078"),
        d = n("305961"),
        c = n("162771"),
        E = n("549103"),
        f = n("233322"),
        _ = n("567054"),
        T = n("982527"),
        I = n("49111"),
        m = n("724210"),
        N = n("782340"),
        p = n("155363"),
        S = n("125792"),
        C = () => {
          var e, t;
          let a = (0, o.useStateFromStores)(
              [c.default],
              () => c.default.getGuildId(),
              []
            ),
            C = (0, o.useStateFromStores)(
              [d.default],
              () => d.default.getGuild(a),
              [a]
            ),
            A = (0, o.useStateFromStores)(
              [T.default],
              () => (null != a ? T.default.getRequest(a) : null),
              [a]
            ),
            h = (0, r.useLocation)(),
            g =
              (null ===
                (e = (0, i.matchPath)(
                  h.pathname,
                  I.Routes.CHANNEL(
                    null == C ? void 0 : C.id,
                    m.StaticChannelRoute.GUILD_ONBOARDING
                  )
                )) || void 0 === e
                ? void 0
                : e.isExact) === !0;
          if (null == C || !C.hasVerificationGate() || g) return null;
          let M =
              null !== (t = null == A ? void 0 : A.applicationStatus) &&
              void 0 !== t
                ? t
                : _.GuildJoinRequestApplicationStatuses.STARTED,
            O = null,
            R = null,
            L = null,
            v = [p.notice, S.notice];
          switch (M) {
            case _.GuildJoinRequestApplicationStatuses.SUBMITTED:
              (O =
                N.default.Messages
                  .MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE),
                (R = N.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION),
                (L = () => {
                  (0, u.openModal)(e =>
                    (0, s.jsx)(u.ConfirmModal, {
                      header: N.default.Messages.MODIFY_FOLLOWED_NEWS_HEADER,
                      confirmText: N.default.Messages.CONFIRM,
                      cancelText: N.default.Messages.CANCEL,
                      onConfirm: () => E.default.removeGuildJoinRequest(C.id),
                      confirmButtonColor: u.Button.Colors.BRAND,
                      ...e,
                      children: (0, s.jsx)(u.Text, {
                        variant: "text-md/normal",
                        children:
                          N.default.Messages
                            .MEMBER_VERIFICATION_CANCEL_APPLICATION_SUBTITLE,
                      }),
                    })
                  );
                });
              break;
            case _.GuildJoinRequestApplicationStatuses.REJECTED:
              (O = N.default.Messages.MEMBER_VERIFICATION_REJECTED_TITLE),
                (R = N.default.Messages.MEMBER_VERIFICATION_LEARN_MORE),
                (L = () => {
                  (0, u.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("388435")
                      .then(n.bind(n, "388435"));
                    return t => (0, s.jsx)(e, { guildId: C.id, ...t });
                  });
                }),
                v.push(p.error);
              break;
            default:
              (O = N.default.Messages.MEMBER_VERIFICATION_NOTICE_TEXT),
                (R = N.default.Messages.MEMBER_VERIFICATION_NOTICE_CTA),
                (L = () => {
                  (0, f.openMemberVerificationModal)(C.id);
                });
          }
          return (0, s.jsxs)("div", {
            className: l(...v),
            children: [
              (0, s.jsx)(u.Text, {
                className: p.header,
                variant: "text-sm/normal",
                children: O,
              }),
              (0, s.jsx)(u.Button, {
                className: p.button,
                look: u.Button.Looks.OUTLINED,
                color: u.Button.Colors.WHITE,
                size: u.Button.Sizes.NONE,
                onClick: L,
                children: R,
              }),
            ],
          });
        };
    },
    919089: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("65597"),
        i = n("151426"),
        r = n("10641"),
        o = n("592407"),
        u = n("305961"),
        d = n("162771"),
        c = n("489622"),
        E = n("599110"),
        f = n("179803"),
        _ = n("49111"),
        T = n("782340");
      function I(e) {
        let { dismissCurrentNotice: t } = e,
          n = (0, l.useStateFromStores)(
            [d.default],
            () => d.default.getGuildId(),
            []
          ),
          I = (0, l.useStateFromStores)(
            [u.default],
            () => u.default.getGuild(n),
            [n]
          );
        return (a.useEffect(() => {
          (0, r.requestMarkDismissibleContentAsShown)(
            i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
          );
        }, []),
        null == I)
          ? null
          : (0, s.jsxs)(c.default, {
              color: c.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)(c.NoticeCloseButton, {
                  onClick: () => {
                    E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                      type: i.DismissibleContent[
                        i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
                      ],
                      action: "dismiss",
                    }),
                      t(),
                      (0, f.dismissedGuildOnboardingUpsell)(
                        I.id,
                        i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
                      );
                  },
                }),
                T.default.Messages.GUILD_ONBOARDING_NAGBAR_MESSAGE,
                (0, s.jsx)(c.NoticeButton, {
                  onClick: () => {
                    E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                      type: i.DismissibleContent[
                        i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
                      ],
                      action: "primary",
                    }),
                      o.default.open(I.id, _.GuildSettingsSections.ONBOARDING),
                      (0, f.dismissedGuildOnboardingUpsell)(
                        I.id,
                        i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
                      );
                  },
                  children:
                    T.default.Messages
                      .GUILD_ONBOARDING_UPSELL_COACHMARK_CHECK_IT_OUT,
                }),
              ],
            });
      }
    },
    277683: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getGuildProductPurchaseSystemMessageContentMobile: function () {
            return a;
          },
        });
      var s = n("782340");
      function a(e) {
        let { username: t, usernameOnClickHandler: n, productName: a } = e;
        return s.default.Messages.SYSTEM_MESSAGE_GUILD_PRODUCT_PURCHASE_MOBILE.astFormat(
          { username: t, usernameHook: n, productName: a }
        );
      }
    },
    153587: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          download: function () {
            return a;
          },
        });
      var s = n("545158");
      function a(e) {
        return (0, s.default)(e);
      }
    },
    158195: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var s = n("884691"),
        a = n("404118"),
        l = n("448993"),
        i = n("242278"),
        r = n("153587"),
        o = n("782340");
      function u(e, t) {
        let [n, u] = s.useState(!1),
          d = s.useCallback(
            async n => {
              if (null != e && null != t) {
                u(!0);
                try {
                  let { url: s } = await i.requestDownloadUrl({
                    guildId: e,
                    productId: t,
                    attachmentId: n,
                  });
                  await r.download(s);
                } catch (t) {
                  let e =
                    t instanceof l.APIError ? t.getAnyErrorMessage() : void 0;
                  a.default.show({
                    title: o.default.Messages.ERROR_GENERIC_TITLE,
                    body: null != e ? e : o.default.Messages.GENERIC_ERROR_BODY,
                  });
                } finally {
                  u(!1);
                }
              }
            },
            [e, t]
          );
        return { isLoading: n, downloadAttachment: d };
      }
    },
    492724: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("17692"),
        o = n("944371"),
        u = n("191814"),
        d = n("476765"),
        c = n("538137"),
        E = n("600785"),
        f = n("246421"),
        _ = n("782340"),
        T = n("127703");
      function I(e) {
        let {
          hidePurchaseToUnlockBadge: t,
          showDraftBadge: n,
          className: a,
          children: r,
        } = e;
        return (0, s.jsxs)("div", {
          className: l(T.productThumbnailContainer, a),
          children: [
            r,
            !t &&
              (0, s.jsxs)("div", {
                className: T.purchaseToUnlockBadge,
                children: [
                  (0, s.jsx)(E.default, {
                    className: T.lockIcon,
                    width: 16,
                    height: 16,
                    color: "currentColor",
                    "aria-hidden": !0,
                  }),
                  (0, s.jsx)(i.Text, {
                    variant: "text-sm/normal",
                    color: "always-white",
                    className: T.unlockText,
                    children:
                      _.default.Messages.GUILD_PRODUCT_CARD_PURCHASE_TO_UNLOCK,
                  }),
                ],
              }),
            n &&
              (0, s.jsx)("div", {
                className: T.draftBadge,
                children: (0, s.jsx)(o.MonetizationListingDraftBadge, {}),
              }),
          ],
        });
      }
      function m(e) {
        let { onShowFullDescription: t, variant: n } = e,
          a = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(i.Text, {
                variant: n,
                color: null != t ? "text-link" : "interactive-hover",
                children:
                  _.default.Messages.GUILD_PRODUCT_CARD_SEE_FULL_DESCRIPTION,
              }),
              (0, s.jsx)(c.default, {
                className: T.arrowIcon,
                backgroundColor: "currentColor",
                width: 16,
                height: 16,
              }),
            ],
          });
        return null == t
          ? (0, s.jsx)("div", { className: T.showMoreButton, children: a })
          : (0, s.jsx)(i.Clickable, {
              className: l(T.showMoreButton, T.hasAction),
              onClick: e => {
                e.stopPropagation(), null != t && t();
              },
              children: a,
            });
      }
      function N(e) {
        let {
            imageUrl: t,
            name: n,
            description: a,
            formattedPrice: o,
            role: c,
            ctaComponent: E,
            shouldShowFullDescriptionButton: N = !0,
            onShowFullDescription: p,
            productType: S,
            onTapCard: C,
            actionMenu: A,
            showOpaqueBackground: h = !1,
            hideRoleTag: g = !1,
            lineClamp: M = 1,
            cardWidth: O = 332,
            cardHeight: R,
            thumbnailHeight: L = 187,
            descriptionTextVariant: v = "text-sm/normal",
            isDraft: P = !1,
          } = e,
          D = (0, d.uid)(),
          x = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(I, {
                showDraftBadge: P,
                hidePurchaseToUnlockBadge: !0,
                children: (0, s.jsx)("img", {
                  alt: "",
                  src: t,
                  className: T.productThumbnail,
                  style: { height: L },
                }),
              }),
              (0, s.jsxs)("div", {
                className: T.productDetails,
                children: [
                  (0, s.jsxs)("div", {
                    className: T.productDetailContent,
                    children: [
                      (0, s.jsx)(i.Heading, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        className: T.productName,
                        id: D,
                        children: n,
                      }),
                      (0, s.jsx)(i.FocusBlock, {
                        children: (0, s.jsx)(r.default, {
                          variant: v,
                          color: "text-muted",
                          lineClamp: M,
                          text: a,
                        }),
                      }),
                      N &&
                        (0, s.jsx)(m, { onShowFullDescription: p, variant: v }),
                      g || null == c || "" === c.name
                        ? null
                        : (0, s.jsxs)(s.Fragment, {
                            children: [
                              (0, s.jsx)(u.default, { size: 16 }),
                              (0, s.jsx)(f.default, { role: c }),
                            ],
                          }),
                    ],
                  }),
                  A,
                ],
              }),
              (0, s.jsxs)("div", {
                className: T.purchaseDetails,
                children: [
                  (0, s.jsx)(i.Text, {
                    variant: "text-md/medium",
                    color: "interactive-active",
                    className: T.productPrice,
                    children:
                      null != o
                        ? o
                        : _.default.Messages.GUILD_PRODUCT_CARD_EMPTY_PRICE,
                  }),
                  (0, s.jsx)(i.Text, {
                    variant: "text-xxs/normal",
                    color: "text-normal",
                    className: T.productType,
                    children: S,
                  }),
                  (0, s.jsx)("div", {
                    className: T.productActionButton,
                    onClick: e => {
                      e.stopPropagation();
                    },
                    children: E,
                  }),
                ],
              }),
            ],
          });
        return null == C
          ? (0, s.jsx)("article", {
              className: l(
                T.productCard,
                h ? T.opaqueBackground : T.solidBackground
              ),
              "aria-labelledby": D,
              children: x,
            })
          : (0, s.jsx)("div", {
              style: { width: O, height: R },
              children: (0, s.jsx)(i.ClickableContainer, {
                tag: "article",
                "aria-label":
                  _.default.Messages.GUILD_SHOP_LISTING_CARD_A11Y_LABEL.format({
                    productName: n,
                  }),
                className: l(
                  T.productCard,
                  h ? T.opaqueBackground : T.solidBackground,
                  T.cardClickableContainer
                ),
                onClick: C,
                children: x,
              }),
            });
      }
    },
    294519: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("759843"),
        l = n("65597"),
        i = n("812204"),
        r = n("428958"),
        o = n("162771"),
        u = n("442379"),
        d = n("858291"),
        c = n("660516");
      function E(e) {
        let { code: t } = e,
          [n, E] = t.split("-"),
          f = (0, u.useFetchGuildProductListing)(n, E),
          _ = (0, l.useStateFromStores)([o.default], () =>
            o.default.getGuildId()
          );
        return ((0, r.default)(
          {
            type: c.ImpressionTypes.VIEW,
            name: a.ImpressionNames.GUILD_PRODUCT_LISTING_EMBED,
            properties: {
              guild_product_listing_id: E,
              has_entitlement: (null == f ? void 0 : f.has_entitlement) === !0,
            },
          },
          { disableTrack: null == f }
        ),
        null == f || _ !== n)
          ? null
          : (0, s.jsx)(d.GuildProductListingPublicCard, {
              guildProductListing: f,
              guildId: n,
              location: i.default.GUILD_PRODUCT_EMBED_CARD,
              cardWidth: 390,
              thumbnailHeight: 219,
            });
      }
    },
    898998: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("158195");
      function i(e) {
        let { guildId: t, productId: n, attachmentId: i, ...r } = e,
          { isLoading: o, downloadAttachment: u } = (0, l.default)(t, n);
        return (0, s.jsx)(a.Button, {
          ...r,
          submitting: o,
          onClick: function () {
            u(i);
          },
        });
      }
    },
    407417: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("65597"),
        r = n("77078"),
        o = n("191814"),
        u = n("246053"),
        d = n("195812"),
        c = n("565559"),
        E = n("35018"),
        f = n("898998"),
        _ = n("782340"),
        T = n("116834");
      function I(e) {
        var t, n, a, I;
        let { guildId: m, productId: N } = e,
          p = (0, i.useStateFromStores)([c.default], () =>
            c.default.getGuildProduct(N)
          ),
          S =
            (null !==
              (I =
                null == p
                  ? void 0
                  : null === (t = p.attachments) || void 0 === t
                    ? void 0
                    : t.length) && void 0 !== I
              ? I
              : 0) > 1,
          C =
            null == p
              ? void 0
              : null === (a = p.attachments) || void 0 === a
                ? void 0
                : null === (n = a[0]) || void 0 === n
                  ? void 0
                  : n.id;
        return S
          ? (0, s.jsxs)(r.Button, {
              onClick: function () {
                E.default.open({ guildId: m, productId: N });
              },
              innerClassName: T.textWithIcon,
              children: [
                (0, s.jsx)("div", {
                  children:
                    _.default.Messages
                      .GUILD_PRODUCT_DOWNLOAD_BUTTON_MULTIPLE_FILES,
                }),
                (0, s.jsx)(o.default, { size: 8, horizontal: !0 }),
                (0, s.jsx)(u.default, {
                  width: 16,
                  height: 16,
                  direction: u.default.Directions.RIGHT,
                }),
              ],
            })
          : (l(null != C, "No attachment"),
            (0, s.jsxs)(f.default, {
              guildId: m,
              productId: N,
              attachmentId: C,
              innerClassName: T.textWithIcon,
              children: [
                (0, s.jsx)("div", {
                  children:
                    _.default.Messages
                      .GUILD_PRODUCT_DOWNLOAD_BUTTON_SINGLE_FILE,
                }),
                (0, s.jsx)(o.default, { size: 8, horizontal: !0 }),
                (0, s.jsx)(d.default, { width: 16, height: 16 }),
              ],
            }));
      }
    },
    858291: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildProductListingPublicCard: function () {
            return p;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("65597"),
        l = n("801765"),
        i = n("228035"),
        r = n("465869"),
        o = n("305961"),
        u = n("306160"),
        d = n("442379"),
        c = n("757515"),
        E = n("727411"),
        f = n("492724"),
        _ = n("928576"),
        T = n("739726"),
        I = n("358404"),
        m = n("875746"),
        N = n("49111");
      function p(e) {
        let {
            guildProductListing: t,
            guildId: n,
            location: p,
            shouldShowFullDescriptionButton: S = !0,
            hideRoleTag: C = !1,
            lineClamp: A = 1,
            cardWidth: h,
            cardHeight: g,
            thumbnailHeight: M,
            descriptionTextVariant: O = "text-sm/normal",
            showOpaqueBackground: R = !1,
          } = e,
          L = (0, a.useStateFromStores)(
            [o.default],
            () => o.default.getGuild(n),
            [n]
          ),
          v = (0, a.useStateFromStores)([o.default], () => {
            var e;
            return o.default.getRole(
              n,
              null !== (e = null == t ? void 0 : t.role_id) && void 0 !== e
                ? e
                : N.EMPTY_STRING_SNOWFLAKE_ID
            );
          }),
          P = (0, l.useListingThumbnailUrl)(t, 600),
          D = (0, _.useProductType)(t),
          x = (0, d.useCanManageGuildProduct)(L),
          { shouldHideGuildPurchaseEntryPoints: y } = (0,
          r.useShouldHideGuildPurchaseEntryPoints)(n),
          U = (0, _.usePrice)(t);
        if (null == L || y) return null;
        let j = () =>
            (0, I.openGuildProductInfoModal)({
              guildId: n,
              guildProductListingId: t.id,
              analyticsLocation: p,
            }),
          b = (0, s.jsx)(T.GuildProductListingPopout, {
            product: t,
            guildId: n,
            showEditProduct: x,
            showUnpublishProduct: !1,
            showCopyLink: !0,
            showTestDownload: !1,
            showDeleteProduct: !1,
            showReportProduct: !0,
            onEditProduct: x
              ? () => {
                  E.openModal(L.id, t.id);
                }
              : () => {},
            onUnpublishProduct: () => {},
            onDeleteProduct: () => {},
            onReportProduct: () => {
              (0, i.openGuildShopReportModal)({ listing: t });
            },
            onCopyProductLink: () => {
              (0, u.copy)((0, c.getGuildProductListingUrl)(n, t.id));
            },
            onTestDownload: () => {},
          });
        return (0, s.jsx)(
          f.default,
          {
            imageUrl: P,
            name: t.name,
            description: t.description,
            formattedPrice: U,
            role: v,
            ctaComponent: (0, s.jsx)(m.default, {
              guildId: n,
              guildProductListingId: t.id,
              sourceAnalyticsLocations: p,
            }),
            productType: D,
            shouldShowFullDescriptionButton: S,
            onShowFullDescription: j,
            onTapCard: j,
            actionMenu: b,
            showOpaqueBackground: R,
            hideRoleTag: C,
            lineClamp: A,
            cardWidth: h,
            cardHeight: g,
            thumbnailHeight: M,
            descriptionTextVariant: O,
            isDraft: !t.published,
          },
          t.id
        );
      }
    },
    875746: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("65597"),
        r = n("77078"),
        o = n("206230"),
        u = n("305961"),
        d = n("181114"),
        c = n("866190"),
        E = n("442379"),
        f = n("565559"),
        _ = n("777133"),
        T = n("407417"),
        I = n("782340");
      function m(e) {
        let {
            guildId: t,
            guildProductListingId: n,
            sourceAnalyticsLocations: a,
          } = e,
          m = (0, i.useStateFromStores)([f.default], () =>
            f.default.getGuildProduct(n)
          ),
          N = (0, i.useStateFromStores)(
            [u.default],
            () => u.default.getGuild(t),
            [t]
          ),
          p = (0, i.useStateFromStores)(
            [o.default],
            () => o.default.useReducedMotion
          ),
          S = (0, c.useIsWindowFocused)();
        l(null != N, "guild cannot be null"),
          l(null != m, "guildProductListing cannot be null");
        let C = (0, E.useCanManageGuildProduct)(N);
        if (C)
          return (0, s.jsx)(r.Tooltip, {
            text: I.default.Messages.GUILD_PRODUCT_PURCHASE_DISABLED_TOOLTIP,
            children: e =>
              (0, s.jsx)(r.Button, {
                ...e,
                color: r.Button.Colors.BRAND,
                disabled: !0,
                children: I.default.Messages.GUILD_PRODUCT_CARD_PURCHASE_BUTTON,
              }),
          });
        if (!m.has_entitlement)
          return (0, s.jsx)(d.default, {
            shineSize: d.default.ShineSizes.SMALL,
            pauseAnimation: p || !S,
            onClick: () =>
              (0, _.openGuildProductPurchaseModal)({
                guildProductListing: m,
                guildId: N.id,
                sourceAnalyticsLocations: a,
              }),
            children: I.default.Messages.GUILD_PRODUCT_CARD_PURCHASE_BUTTON,
          });
        {
          let e = null != m.attachments;
          return e
            ? (0, s.jsx)(T.default, { guildId: N.id, productId: m.id })
            : (0, s.jsx)(r.Button, {
                color: r.Button.Colors.PRIMARY,
                disabled: !0,
                children: I.default.Messages.GUILD_PRODUCT_CARD_PURCHASED,
              });
        }
      }
    },
    246421: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("509043"),
        l = n("77078"),
        i = n("191814"),
        r = n("45029"),
        o = n("782340"),
        u = n("276766");
      function d(e) {
        let { locked: t, role: n, textVariant: d = "text-xs/medium" } = e,
          c = (0, l.useToken)(l.tokens.colors.INTERACTIVE_NORMAL).hex();
        return (0, s.jsx)("div", {
          className: u.roleTagContainer,
          children: (0, s.jsxs)("div", {
            className: u.roleTag,
            children: [
              (0, s.jsx)("div", {
                className: u.roleColor,
                style: { backgroundColor: (0, a.int2hex)(n.color) },
              }),
              (0, s.jsx)(i.default, { size: 8, horizontal: !0 }),
              (0, s.jsxs)(l.Text, {
                variant: d,
                color: "text-normal",
                children: [
                  (0, s.jsx)(l.HiddenVisually, {
                    children:
                      o.default.Messages
                        .GUILD_PRODUCT_CARD_HIDDEN_ROLE_SCREEN_READER,
                  }),
                  n.name,
                ],
              }),
              !0 === t &&
                (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(i.default, { size: 8, horizontal: !0 }),
                    (0, s.jsx)(r.default, { color: c }),
                  ],
                }),
            ],
          }),
        });
      }
    },
    358404: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildProductInfoModal: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078");
      function l(e) {
        (0, a.openModalLazy)(async () => {
          let { default: t } = await n.el("962276").then(n.bind(n, "962276"));
          return n => (0, s.jsx)(t, { ...e, ...n });
        });
      }
    },
    777133: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildProductPurchaseModal: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("748820"),
        l = n("77078"),
        i = n("112679"),
        r = n("55689"),
        o = n("599110"),
        u = n("49111");
      function d(e) {
        let {
            guildProductListing: t,
            guildId: d,
            sourceAnalyticsLocations: c,
          } = e,
          E = !1,
          f = (0, a.v4)(),
          _ = () => {
            E = !0;
          };
        (0, l.openModalLazy)(
          async () => {
            let { default: e } = await n.el("191131").then(n.bind(n, "191131"));
            return n =>
              (0, s.jsx)(e, {
                ...n,
                applicationId: t.application_id,
                skuId: t.id,
                sourceAnalyticsLocations: c,
                guildProductContext: {
                  guildProductListingId: t.id,
                  guildId: d,
                },
                loadId: f,
                onComplete: _,
              });
          },
          {
            onCloseCallback: () => {
              !E &&
                o.default.track(u.AnalyticEvents.PAYMENT_FLOW_CANCELED, {
                  load_id: f,
                  payment_type:
                    u.PurchaseTypeToAnalyticsPaymentType[
                      u.PurchaseTypes.ONE_TIME
                    ],
                  is_gift: !1,
                  location_stack: Array.isArray(c) ? c : [c],
                }),
                (0, i.clearError)(),
                (0, r.clearPurchaseTokenAuthState)();
            },
            onCloseRequest: u.NOOP,
          }
        );
      }
    },
    790369: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let { width: t = 440, height: n = 200, avatar: l, ...i } = e;
        return (0, s.jsxs)("svg", {
          ...(0, a.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 ".concat(t, " ").concat(n),
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          ...i,
          children: [
            (0, s.jsx)("rect", {
              y: "12",
              width: "440",
              height: "176",
              rx: "4",
              fill: "url(#paint0_linear_0_1)",
            }),
            (0, s.jsx)("path", {
              d: "M4 12C1.79086 12 0 13.7909 0 16V87.7111C0 89.0292 0.644578 90.2711 1.75757 90.9773C19.6029 102.3 40.6908 102.01 54.593 95.3775C74.7698 85.8079 78.9758 61.6391 58.8478 45.7384C50.2069 38.7483 44.7223 29.0027 45.9176 20.7172C46.434 17.1376 44.0823 12 40.4657 12H4Z",
              fill: "#3442D9",
            }),
            (0, s.jsx)("path", {
              d: "M440 44.2244C440 42.4907 438.885 40.9507 437.228 40.4399C387.67 25.1621 330.882 28.8097 301.274 66.4895C271.113 104.874 240.425 106.271 206.014 93.988C172.008 81.8488 55.3406 98.3422 74.0098 184.887C74.3973 186.683 76.0228 188 77.8605 188H436C438.209 188 440 186.209 440 184V44.2244Z",
              fill: "#3442D9",
            }),
            (0, s.jsx)("path", {
              d: "M397.403 63.2537C395.463 62.0597 394.269 60.2687 393.97 58.0299L393.373 54.2985C393.373 54.1493 393.224 54 392.925 54C392.776 54 392.627 54.1493 392.627 54.2985L392.03 58.0299C391.731 60.2687 390.537 62.0597 388.597 63.2537L388.149 63.5522C388 63.7015 388 63.8507 388 64C388 64.1493 388 64.1493 388.149 64.2985L388.597 64.597C390.537 65.791 391.731 67.5821 392.03 69.8209L392.627 73.5522C392.627 73.8507 392.776 74 392.925 74C393.224 74 393.373 73.8507 393.373 73.5522L393.97 69.8209C394.269 67.5821 395.463 65.791 397.403 64.597L397.851 64.2985C398 64.1493 398 64.1493 398 64C398 63.8507 398 63.7015 397.851 63.5522L397.403 63.2537Z",
              fill: "#57F287",
            }),
            (0, s.jsx)("path", {
              d: "M300.628 164.106C299.09 163.2 298.013 161.691 297.705 159.879L297.244 156.86C297.244 156.71 297.09 156.559 296.936 156.559C296.782 156.559 296.628 156.71 296.628 156.86L296.167 159.879C296.013 161.691 294.936 163.2 293.398 164.106L292.936 164.408C292.782 164.559 292.782 164.559 292.782 164.71V165.011H293.244C294.782 165.917 295.859 167.577 296.013 169.389L296.475 172.408C296.475 172.559 296.628 172.559 296.782 172.559C296.936 172.559 297.09 172.559 297.09 172.408L297.551 169.389C297.859 167.577 298.936 166.068 300.475 165.011H300.782V164.71C300.782 164.559 300.782 164.408 300.628 164.408V164.106Z",
              fill: "#808AFF",
            }),
            (0, s.jsx)("path", {
              d: "M232.642 35.4003C231.478 34.6839 230.761 33.5197 230.582 32.1765L230.224 30.0272C230.224 29.8481 230.134 29.7585 229.955 29.7585C229.866 29.7585 229.776 29.8481 229.776 30.0272L229.418 32.1765C229.239 33.5197 228.522 34.6839 227.358 35.4003L227.09 35.5794C227 35.669 227 35.669 227 35.7585C227 35.8481 227 35.9376 227.09 35.9376L227.358 36.2063C228.522 36.9227 229.239 37.9974 229.418 39.3406L229.776 41.5794C229.776 41.669 229.866 41.7585 229.955 41.7585C230.134 41.7585 230.224 41.669 230.224 41.5794L230.582 39.3406C230.761 37.9974 231.478 36.9227 232.642 36.2063L232.91 35.9376C233 35.8481 233 35.8481 233 35.7585C233 35.669 232.91 35.669 232.91 35.5794L232.642 35.4003Z",
              fill: "#FFE75C",
            }),
            (0, s.jsx)("defs", {
              children: (0, s.jsxs)("linearGradient", {
                id: "paint0_linear_0_1",
                x1: "220",
                y1: "12",
                x2: "220",
                y2: "188",
                gradientUnits: "userSpaceOnUse",
                children: [
                  (0, s.jsx)("stop", { "stop-color": "#686bff" }),
                  (0, s.jsx)("stop", { offset: "1", "stop-color": "#c356fd" }),
                ],
              }),
            }),
            (0, s.jsx)("svg", {
              width: 100,
              height: 100,
              viewBox: "-2 -15 50 50",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: (0, s.jsxs)("g", {
                "clip-path": "url(#clip0_2645_182555)",
                children: [
                  (0, s.jsx)("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M13.6698 8.91016C14.5646 10.1567 16.3407 10.3342 17.4866 9.44283C17.4957 9.46624 17.5008 9.49191 17.5008 9.51916V15.8337C17.5008 17.2144 16.3815 18.3337 15.0008 18.3337H12.7092C12.5941 18.3337 12.5008 18.2404 12.5008 18.1253V13.3337C12.5008 12.4132 11.7547 11.667 10.8342 11.667H9.16748C8.24699 11.667 7.5008 12.4132 7.5008 13.3337V18.1253C7.5008 18.2404 7.40753 18.3337 7.29247 18.3337H5.0008C3.62009 18.3337 2.5008 17.2144 2.5008 15.8337V9.51916C2.5008 9.36341 2.66628 9.26158 2.81091 9.31949C3.23542 9.48933 3.70172 9.58366 4.19593 9.58366C5.27336 9.58366 6.24385 9.12583 6.92345 8.39408C7.0135 8.29708 7.17004 8.29679 7.26039 8.39349C7.94479 9.12583 8.91932 9.58366 10.0008 9.58366C11.0823 9.58366 12.0568 9.12583 12.7412 8.39349C12.8316 8.29679 12.9882 8.29708 13.0782 8.39408C13.2565 8.58599 13.4548 8.75916 13.6698 8.91016ZM11.7497 6.67891C9.42957 5.8204 9.4179 2.5511 11.7147 1.6683C11.699 1.66743 11.6833 1.66699 11.6675 1.66699H8.33415C7.87391 1.66699 7.50082 2.04009 7.50082 2.50033V5.83366C7.50082 5.87681 7.50191 5.9197 7.50407 5.96231C7.52181 6.31232 7.61153 6.64333 7.75873 6.94085C7.77282 6.96931 7.78743 6.99747 7.80255 7.02531C8.2259 7.80462 9.05157 8.33366 10.0008 8.33366C10.984 8.33366 11.8346 7.76614 12.2429 6.94084L12.2543 6.91751C12.2613 6.90286 12.2682 6.88812 12.2751 6.87331L11.7497 6.67891ZM15.8231 8.3336C15.4338 8.32949 15.0467 8.10931 14.8853 7.67305L14.4606 6.52524C14.2917 6.06904 13.9321 5.70936 13.4759 5.54055L13.3342 5.4881V2.84588L13.4759 2.79343C13.9321 2.62463 14.2917 2.26494 14.4606 1.80874L14.5131 1.66699H15.2462C16.3397 1.66699 17.3062 2.37762 17.6324 3.42131L18.1647 5.12491C18.2057 5.25598 18.2352 5.38724 18.254 5.51775L18.1924 5.54055C17.7361 5.70936 17.3765 6.06904 17.2077 6.52524L16.783 7.67305C16.627 8.09458 16.2603 8.31438 15.8847 8.33245C15.8642 8.33308 15.8437 8.33346 15.8231 8.3336ZM12.5008 3.15424V5.17974L12.3281 5.11583C11.4472 4.78989 11.4472 3.54409 12.3281 3.21816L12.5008 3.15424ZM4.75546 1.66699C3.662 1.66699 2.69541 2.37762 2.36926 3.4213L1.83688 5.12491C1.52876 6.11092 1.8679 7.1068 2.56708 7.72187C2.99643 8.09957 3.56156 8.33366 4.19593 8.33366C5.13437 8.33366 5.95065 7.81064 6.36917 7.04019C6.38619 7.00888 6.40255 6.97714 6.41823 6.94502C6.57788 6.618 6.66748 6.25052 6.66748 5.86211V2.50033C6.66748 2.04009 6.29438 1.66699 5.83415 1.66699H4.75546Z",
                    fill: "white",
                  }),
                  (0, s.jsx)("path", {
                    d: "M14.8838 0.660607C15.2097 -0.220202 16.4556 -0.220202 16.7815 0.660607L17.2062 1.80842C17.375 2.26462 17.7347 2.6243 18.1909 2.79311L19.3387 3.21783C20.2195 3.54377 20.2195 4.78957 19.3387 5.1155L18.1909 5.54023C17.7347 5.70903 17.375 6.06872 17.2062 6.52492L16.7815 7.67272C16.4556 8.5535 15.2097 8.5535 14.8838 7.67272L14.4591 6.52492C14.2903 6.06872 13.9306 5.70903 13.4744 5.54023L12.3266 5.1155C11.4458 4.78957 11.4458 3.54377 12.3266 3.21783L13.4744 2.79311C13.9306 2.6243 14.2903 2.26462 14.4591 1.80842L14.8838 0.660607Z",
                    fill: "white",
                  }),
                ],
              }),
            }),
            (0, s.jsx)("foreignObject", {
              x: "30",
              y: "100",
              width: "56",
              height: "56",
              children: l,
            }),
          ],
        });
      }
    },
    289967: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("65597"),
        l = n("77078"),
        i = n("206230"),
        r = n("574073"),
        o = n("232259"),
        u = n("393414"),
        d = n("304198"),
        c = n("790369"),
        E = n("49111"),
        f = n("782340"),
        _ = n("503503");
      function T(e) {
        let { guildId: t, user: n, username: r } = e,
          o = (0, a.useStateFromStores)(
            [i.default],
            () => !i.default.useReducedMotion
          ),
          u = n.getAvatarURL(t, 56, o),
          d = (0, s.jsx)("img", { src: u, className: _.userAvatar, alt: "" });
        return (0, s.jsxs)("div", {
          className: _.thankYouCard,
          role: "img",
          "aria-label":
            f.default.Messages.ROLE_SUBSCRIPTION_WELCOME_CARD_ARIA_LABEL.format(
              { username: r }
            ),
          children: [
            (0, s.jsx)(c.default, { avatar: d }),
            (0, s.jsx)(l.Text, {
              className: _.thankYouText,
              tag: "p",
              color: "status-positive-text",
              variant: "heading-xl/medium",
              children:
                f.default.Messages.GUILD_PRODUCT_PURCHASE_THANK_YOU_CARD_TEXT.format(
                  {
                    username: r,
                    usernameHook: (e, t) =>
                      (0, s.jsx)(
                        l.Text,
                        {
                          tag: "span",
                          color: "status-positive-text",
                          variant: "heading-xxl/extrabold",
                          lineClamp: 3,
                          children: e,
                        },
                        t
                      ),
                  }
                ),
            }),
          ],
        });
      }
      function I(e) {
        var t, a, l;
        let { channel: i, message: c, compact: _ } = e,
          I = (0, r.default)(c),
          m = (0, o.useUsernameHook)({
            user: c.author,
            channelId: i.id,
            guildId: i.guild_id,
            messageId: c.id,
          })(I),
          N = f.default.Messages.SYSTEM_MESSAGE_GUILD_PRODUCT_PURCHASE.format({
            username: I.nick,
            usernameHook: m,
            productName:
              null !==
                (l =
                  null === (a = c.purchaseNotification) || void 0 === a
                    ? void 0
                    : null === (t = a.guild_product_purchase) || void 0 === t
                      ? void 0
                      : t.product_name) && void 0 !== l
                ? l
                : "",
            handleProductListingClick: () => {
              var e, t, n;
              (0, u.transitionTo)(
                E.Routes.GUILD_PRODUCT(
                  i.guild_id,
                  null !==
                    (n =
                      null === (t = c.purchaseNotification) || void 0 === t
                        ? void 0
                        : null === (e = t.guild_product_purchase) ||
                            void 0 === e
                          ? void 0
                          : e.listing_id) && void 0 !== n
                    ? n
                    : ""
                )
              );
            },
          });
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(d.default, {
              icon: n("127067"),
              timestamp: c.timestamp,
              compact: _,
              children: N,
            }),
            (0, s.jsx)(T, {
              username: I.nick,
              guildId: i.guild_id,
              user: c.author,
            }),
          ],
        });
      }
    },
    132349: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("222007");
      var s = n("876927"),
        a = n("271560");
      function l(e) {
        let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          [n, l] = (0, s.default)(),
          i =
            (null == e ? void 0 : e.application_id) != null && null != l
              ? (0, a.getAssetURL)(e.application_id, e, l, t ? void 0 : "webp")
              : void 0;
        return [n, i];
      }
    },
    740316: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          BackToPreviousScreenNotice: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("246053"),
        i = n("489622"),
        r = n("49111"),
        o = n("895984");
      function u(e) {
        let {
          buttonText: t,
          onGoBack: n,
          onDismiss: u,
          showCloseButton: d,
        } = e;
        return (0, s.jsxs)(i.default, {
          className: o.backNotice,
          children: [
            d &&
              (0, s.jsx)(i.NoticeCloseButton, {
                onClick: u,
                noticeType: r.NoticeTypes.BACK_TO_PREVIOUS_SCREEN,
              }),
            (0, s.jsxs)(a.Button, {
              className: o.backButton,
              innerClassName: o.backButtonInner,
              look: a.Button.Looks.OUTLINED,
              color: a.Button.Colors.WHITE,
              size: a.Button.Sizes.NONE,
              onClick: n,
              children: [
                (0, s.jsx)(l.default, {
                  width: 16,
                  height: 16,
                  direction: l.default.Directions.LEFT,
                  className: o.backArrow,
                }),
                t,
              ],
            }),
          ],
        });
      }
    },
    721629: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("305961"),
        r = n("105017"),
        o = n("568734"),
        u = n("843257"),
        d = n("531034"),
        c = n("49111");
      function E(e) {
        var t, n;
        let { channel: E, message: f } = e,
          _ =
            null !==
              (n =
                null === (t = f.roleSubscriptionData) || void 0 === t
                  ? void 0
                  : t.is_renewal) &&
            void 0 !== n &&
            n,
          T = _ ? (0, d.getRenewButtonLabels)() : (0, d.getJoinButtonLabels)(),
          I = E.guild_id,
          m = (0, l.useStateFromStores)(
            [i.default],
            () => {
              var e;
              return null === (e = i.default.getGuild(I)) || void 0 === e
                ? void 0
                : e.systemChannelFlags;
            },
            [I]
          ),
          N =
            null != m &&
            (0, o.hasFlag)(
              m,
              c.SystemChannelFlags
                .SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES
            ),
          p = a.useMemo(
            () =>
              (0, u.getRoleSubscriptionPurchaseSystemMessageEventProperties)(
                E,
                f
              ),
            [E, f]
          );
        return N
          ? null
          : (0, s.jsx)(r.default, {
              channel: E,
              message: f,
              buttonLabels: T,
              stickers: d.STICKERS,
              event:
                c.AnalyticEvents
                  .ROLE_SUBSCRIPTION_PURCHASE_SYSTEM_MESSAGE_CTA_CLICKED,
              eventProperties: p,
            });
      }
    },
    866027: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("77078"),
        i = n("812204"),
        r = n("685665"),
        o = n("574073"),
        u = n("232259"),
        d = n("393414"),
        c = n("304198"),
        E = n("843257"),
        f = n("721629"),
        _ = n("988521"),
        T = n("49111"),
        I = n("724210"),
        m = n("782340"),
        N = n("878008");
      function p(e) {
        let { username: t } = e;
        return (0, s.jsx)("div", {
          className: N.welcomeCardText,
          children: (0, s.jsx)(l.Text, {
            tag: "p",
            className: N.welcomeCardText,
            color: "status-positive-text",
            variant: "heading-xl/medium",
            children:
              m.default.Messages.ROLE_SUBSCRIPTION_WELCOME_CARD_TEXT.format({
                username: t,
                usernameHook: (e, t) =>
                  (0, s.jsx)(
                    l.Text,
                    {
                      tag: "span",
                      color: "status-positive-text",
                      variant: "heading-xxl/extrabold",
                      lineClamp: 3,
                      children: e,
                    },
                    t
                  ),
              }),
          }),
        });
      }
      function S(e) {
        let { guildId: t, user: n, username: a } = e;
        return (0, s.jsxs)("div", {
          className: N.welcomeCard,
          role: "img",
          "aria-label":
            m.default.Messages.ROLE_SUBSCRIPTION_WELCOME_CARD_ARIA_LABEL.format(
              { username: a }
            ),
          children: [
            (0, s.jsx)(_.default, {
              guildId: t,
              user: n,
              className: N.welcomeCardBadge,
            }),
            (0, s.jsx)(p, { username: a }),
          ],
        });
      }
      function C(e) {
        var t, l;
        let { channel: _, message: m, compact: N } = e,
          p = (0, o.default)(m),
          C = (function (e) {
            let { author: t, channel: n, message: s } = e,
              l = n.guild_id,
              o = (0, u.useUsernameHook)({
                user: s.author,
                channelId: n.id,
                guildId: l,
                messageId: s.id,
              })(t),
              { analyticsLocations: c } = (0, r.default)(
                i.default.GUILD_ROLE_SUBSCRIPTION_PURCHASE_SYSTEM_MESSAGE
              ),
              f = s.roleSubscriptionData,
              _ = a.useCallback(() => {
                (0, d.transitionTo)(
                  T.Routes.CHANNEL(l, I.StaticChannelRoute.ROLE_SUBSCRIPTIONS),
                  null,
                  null,
                  c
                ),
                  (null == f ? void 0 : f.role_subscription_listing_id) !=
                    null &&
                    (0, E.trackRoleSubscriptionPurchaseMessageTierClick)(
                      l,
                      n.id,
                      s.id,
                      f.role_subscription_listing_id
                    );
              }, [l, n, s, f, c]);
            return null == f
              ? null
              : (0, E.getRoleSubscriptionPurchaseSystemMessageFormattedContent)(
                  {
                    username: t.nick,
                    usernameOnClickHandler: o,
                    roleSubscriptionOnClickHandler: _,
                    guildId: l,
                    roleSubscriptionData: s.roleSubscriptionData,
                  }
                );
          })({ channel: _, message: m, author: p }),
          A =
            (null === (t = m.roleSubscriptionData) || void 0 === t
              ? void 0
              : t.total_months_subscribed) != null &&
            (null === (l = m.roleSubscriptionData) || void 0 === l
              ? void 0
              : l.total_months_subscribed) <= 1;
        return null == C
          ? null
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(c.default, {
                  icon: n("127067"),
                  timestamp: m.timestamp,
                  compact: N,
                  children: C,
                }),
                A &&
                  (0, s.jsx)(S, {
                    guildId: _.guild_id,
                    user: m.author,
                    username: p.nick,
                  }),
                (0, s.jsx)(f.default, { channel: _, message: m }),
              ],
            });
      }
    },
    988521: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("206230"),
        i = n("826869");
      function r(e) {
        let { guildId: t, user: n, className: r } = e,
          o = (0, a.useStateFromStores)(
            [l.default],
            () => !l.default.useReducedMotion
          ),
          u = n.getAvatarURL(t, 56, o),
          d = (0, s.jsx)("foreignObject", {
            x: "30",
            y: "68",
            width: "56",
            height: "56",
            transform: "skewX(12)",
            children: (0, s.jsx)("img", {
              src: u,
              className: i.userAvatar,
              alt: "",
            }),
          });
        return (0, s.jsx)("div", {
          className: r,
          children: (0, s.jsxs)("svg", {
            width: "128",
            height: "200",
            viewBox: "0 0 128 200",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            className: i.svg,
            children: [
              (0, s.jsx)("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M41.6475 3.07525C42.2166 3.01705 42.7941 2.98723 43.3787 2.98723H44.0149C51.1639 2.98723 57.3812 8.03091 58.5312 14.9582L58.5326 14.9664L71.1297 85.803L74.1529 85.2934L61.5601 14.4815C61.5597 14.4786 61.5592 14.4758 61.5587 14.4729C60.1604 6.07701 52.6392 0 44.0149 0H42.997C42.4189 0 41.8467 0.037182 41.283 0.10879C31.6239 1.11743 24.0326 9.0199 24.0326 18.799C24.0326 21.3525 24.5847 23.8942 25.5481 26.1672L25.5512 26.1745L25.5543 26.1817C30.6753 37.9136 33.7197 47.8651 33.2106 58.7186C32.7013 69.5731 28.6272 81.5075 19.156 97.1507C9.58001 112.967 1.96875 129.323 0.328288 144.93C-1.32267 160.636 3.084 175.549 17.4069 188.258C44.018 211.936 78.8775 196.708 84.4502 170.024C87.2081 156.818 84.3006 145.78 79.001 135.687C75.0979 128.255 69.8387 121.246 64.61 114.277C62.8057 111.873 61.0052 109.473 59.2652 107.063C52.5319 97.7348 49.6357 89.4917 48.5724 81.9158C47.538 74.5461 48.2262 67.7588 48.9086 61.0273C48.9314 60.803 48.9541 60.5787 48.9768 60.3545C50.4158 46.1192 45.9689 34.8772 40.4143 27.5533L40.4092 27.5466L34.5424 19.988L34.533 19.9764C30.8561 15.4298 31.6398 8.83644 36.3021 5.27079C37.8665 4.11054 39.7105 3.32756 41.6475 3.07525ZM29.4797 10.5429C27.9714 12.9383 27.1008 15.7614 27.1008 18.799C27.1008 20.9399 27.5653 23.0928 28.3813 25.0206C33.564 36.8951 36.8159 47.3374 36.2756 58.8549C35.7352 70.3737 31.4122 82.7904 21.7991 98.6677C12.2907 114.372 4.95262 130.278 3.38056 145.234C1.81906 160.089 5.93633 174.039 19.4752 186.051L19.4768 186.053C44.2662 208.11 76.329 193.919 81.4435 169.429C84.0293 157.047 81.3387 146.702 76.2691 137.047C72.4865 129.844 67.4387 123.116 62.2536 116.205C60.4212 113.762 58.5717 111.297 56.7549 108.78C49.7474 99.0725 46.6638 90.3811 45.5325 82.3203C44.4482 74.5953 45.1687 67.4973 45.8457 60.8276C45.8717 60.5718 45.8976 60.3165 45.9233 60.0619C47.2829 46.613 43.0814 36.1022 37.951 29.3343L32.1127 21.8124C29.4463 18.5078 28.6103 14.3561 29.4797 10.5429Z",
                fill: "#57F287",
              }),
              (0, s.jsx)("path", {
                d: "M59.282 31.4071C56.8646 29.0585 57.1191 27.3279 58.0097 24.7321C58.1369 24.2377 58.6458 23.9905 59.1548 23.9905H62.9716V31.4071H59.282Z",
                fill: "#57F287",
              }),
              (0, s.jsx)("path", {
                d: "M125.569 155.388L122.388 158.601C120.734 160.332 118.317 161.321 115.899 161.321H101.268V135.486H125.569L127.859 147.971C128.368 150.69 127.477 153.41 125.569 155.388Z",
                fill: "#8CD9FF",
              }),
              (0, s.jsx)("path", {
                d: "M29.2561 45.6221L25.8209 49.0832C23.9125 51.0609 23.0219 53.9039 23.5308 56.6233L26.7115 74.6704H45.4142V45.6221H29.2561Z",
                fill: "#8CD9FF",
              }),
              (0, s.jsx)("path", {
                d: "M124.551 151.061C125.568 155.635 122.515 160.208 117.68 161.197C117.044 161.321 116.281 161.445 115.645 161.321H52.7936C46.6867 161.074 41.4703 156.871 40.198 151.061L23.531 56.7471C22.5132 52.1735 25.5667 47.6 30.4014 46.6111C31.0375 46.4875 31.8009 46.3639 32.437 46.4875H95.288C101.395 46.7347 106.611 50.9374 107.884 56.7471L124.551 151.061Z",
                fill: "#8CD9FF",
              }),
              (0, s.jsx)("path", {
                d: "M127.732 147.724C128.749 152.297 125.823 156.747 121.243 157.736C120.479 157.86 119.716 157.984 118.826 157.984H55.9745C49.8676 157.86 44.6512 153.534 43.3789 147.724L26.7119 53.5333C25.6941 48.9598 28.7476 44.3862 33.5823 43.3973C34.2184 43.2737 34.9818 43.1501 35.6179 43.2737H98.5962C104.703 43.3973 109.92 47.7237 111.065 53.5333L127.732 147.724Z",
                fill: "white",
              }),
              (0, s.jsx)("path", {
                d: "M78.7482 52.1736C79.2571 54.893 77.4759 57.6124 74.6769 58.1068C74.2952 58.2304 73.7863 58.2304 73.4046 58.2304H66.0253C62.4629 58.1068 59.4094 55.6346 58.6461 52.1736L55.3381 33.7557C54.8292 31.0363 56.6104 28.3169 59.4094 27.8225C59.7911 27.6989 60.3 27.6989 60.6817 27.6989H68.061C71.6234 27.8225 74.6769 30.2947 75.4402 33.7557L78.7482 52.1736Z",
                fill: "black",
              }),
              (0, s.jsx)("path", {
                d: "M115.39 139.071C115.899 142.285 113.736 145.375 110.428 145.87C109.919 145.993 109.537 145.993 109.028 145.993H62.7172C58.5186 145.87 54.829 143.027 53.9384 139.071C53.3022 135.857 55.4651 132.767 58.7731 132.149C59.282 132.025 59.7909 132.025 60.2998 132.025H106.611C110.81 132.149 114.499 134.992 115.39 139.071Z",
                fill: "#FFC619",
              }),
              (0, s.jsx)("path", {
                d: "M71.4152 52.8176C72.7444 51.4082 72.394 48.9945 70.6325 47.4264C68.8711 45.8582 66.3656 45.7295 65.0364 47.1389C63.7072 48.5482 64.0576 50.9619 65.819 52.5301C67.5805 54.0982 70.086 54.2269 71.4152 52.8176Z",
                fill: "#5865F2",
              }),
              (0, s.jsx)("path", {
                d: "M68.5697 30.9126C68.4425 31.1598 68.188 31.4071 67.9336 31.4071H60.8088C60.4271 31.4071 60.2998 31.1598 60.2998 31.0362C60.2998 30.9126 60.2998 30.9126 60.1726 30.9126V30.6654C60.1726 30.5418 60.1726 30.2946 60.2998 30.171C61.5721 27.0807 60.6815 25.5974 59.1548 24.4849V23.9905H64.3712C64.7529 23.9905 65.1345 23.9905 65.389 24.2377C67.9336 25.5974 70.0965 26.7099 68.5697 30.9126Z",
                fill: "#57F287",
              }),
              (0, s.jsx)("path", {
                d: "M63.4808 19.4171H59.155C58.7734 19.4171 58.5189 19.788 58.6461 20.0352L59.2823 23.9907H64.2442L63.4808 19.4171Z",
                fill: "black",
              }),
              (0, s.jsx)("path", {
                d: "M61.1485 21.3944C62.4818 21.3286 63.5224 20.5015 63.4728 19.547C63.4231 18.5925 62.302 17.872 60.9686 17.9378C59.6353 18.0035 58.5947 18.8306 58.6444 19.7851C58.694 20.7396 59.8152 21.4601 61.1485 21.3944Z",
                fill: "black",
              }),
              d,
            ],
          }),
        });
      }
    },
    477558: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("233322"),
        r = n("157186"),
        o = n("716214"),
        u = n("42203"),
        d = n("26989"),
        c = n("305961"),
        E = n("697218"),
        f = n("933326"),
        _ = n("398604"),
        T = n("322224"),
        I = n("914169"),
        m = n("843455");
      function N(e) {
        let { code: t } = e,
          [n, N, p] = t.split("-"),
          {
            guildScheduledEvent: S,
            guild: C,
            channel: A,
            isMember: h,
          } = (0, l.useStateFromStoresObject)(
            [_.default, c.default, u.default, d.default, E.default],
            () => {
              var e, t;
              let s =
                  null !== (t = _.default.getGuildScheduledEvent(N)) &&
                  void 0 !== t
                    ? t
                    : void 0,
                a = c.default.getGuild(n),
                l = u.default.getChannel(null == s ? void 0 : s.channel_id),
                i = d.default.isMember(
                  n,
                  null === (e = E.default.getCurrentUser()) || void 0 === e
                    ? void 0
                    : e.id
                );
              return {
                guildScheduledEvent: s,
                guild: a,
                channel: l,
                isMember: i,
              };
            },
            [n, N]
          );
        return (
          a.useEffect(() => {
            (null == S ? void 0 : S.id) == null &&
              T.default.fetchGuildEvent(n, N),
              f.default.getGuildEventUserCounts(n, N, null != p ? [p] : []),
              f.default.getGuildEventsForCurrentUser(n);
          }, [N, n, null == S ? void 0 : S.id, p]),
          (0, s.jsx)(I.default, {
            guild: C,
            channel: A,
            guildScheduledEvent: S,
            isMember: h,
            onAcceptInstantInvite: m.NOOP,
            onTransitionToInviteChannel: function () {
              if ((0, r.shouldShowMembershipVerificationGate)(n)) {
                (0, i.openMemberVerificationModal)(n);
                return;
              }
              (null == A ? void 0 : A.isGuildStageVoice())
                ? (0, o.connectAndOpen)(A)
                : (null == A ? void 0 : A.isGuildVoice()) &&
                  T.default.joinVoiceEvent(A.guild_id, A.id);
            },
            recurrenceId: p,
          })
        );
      }
    },
    812224: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("77078"),
        i = n("174622"),
        r = n("478895"),
        o = n("569808"),
        u = n("579033"),
        d = n("782340"),
        c = n("590632"),
        E = n("599541");
      function f(e) {
        var t;
        let { code: f } = e,
          _ = (0, a.useStateFromStores)([o.default], () =>
            o.default.getGuildTemplate(f)
          );
        if (null == _ || _.state === u.GuildTemplateStates.RESOLVING)
          return (0, s.jsxs)(i.default, {
            children: [
              (0, s.jsx)(i.default.Header, {
                text: d.default.Messages.GUILD_TEMPLATE_RESOLVING_TITLE,
              }),
              (0, s.jsx)(i.default.Body, { resolving: !0 }),
            ],
          });
        if (_.state === u.GuildTemplateStates.EXPIRED)
          return (0, s.jsxs)(i.default, {
            children: [
              (0, s.jsx)(i.default.Header, {
                text: d.default.Messages.GUILD_TEMPLATE_INVALID_TITLE,
              }),
              (0, s.jsxs)(i.default.Body, {
                children: [
                  (0, s.jsx)(i.default.Icon, { expired: !0 }),
                  (0, s.jsx)(i.default.Info, {
                    expired: !0,
                    title: d.default.Messages.GUILD_TEMPLATE_INVALID_SUBTITLE,
                  }),
                ],
              }),
            ],
          });
        let T = __OVERLAY__
          ? (0, s.jsx)(i.default.Button, {
              isDisabled: !0,
              color: i.default.Button.Colors.PRIMARY,
              children: d.default.Messages.GUILD_TEMPLATE_EMBED_VIEW_IN_APP,
            })
          : (0, s.jsx)(i.default.Button, {
              onClick: () => {
                (0, l.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("843456")
                    .then(n.bind(n, "843456"));
                  return t => (0, s.jsx)(e, { ...t, guildTemplate: _ });
                });
              },
              submitting: _.state === u.GuildTemplateStates.ACCEPTING,
              color: i.default.Button.Colors.GREEN,
              children: d.default.Messages.GUILD_TEMPLATE_OPEN,
            });
        return (0, s.jsxs)(i.default, {
          children: [
            (0, s.jsx)(i.default.Header, {
              text: d.default.Messages.GUILD_TEMPLATE_RESOLVED_EMBED_TITLE,
            }),
            (0, s.jsxs)(i.default.Body, {
              children: [
                (0, s.jsxs)("div", {
                  className: E.headerLine,
                  children: [
                    (0, s.jsx)(r.default, { className: c.icon }),
                    (0, s.jsx)(i.default.Info, {
                      title: _.name,
                      children: d.default.Messages.GUILD_TEMPLATE_USAGES.format(
                        {
                          usageCount: String(
                            null !== (t = _.usageCount) && void 0 !== t ? t : 0
                          ),
                        }
                      ),
                    }),
                  ],
                }),
                T,
              ],
            }),
          ],
        });
      }
    },
    249393: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          VoiceChannelInviteEmbed: function () {
            return g;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("446674"),
        r = n("77078"),
        o = n("819689"),
        u = n("987317"),
        d = n("884351"),
        c = n("574073"),
        E = n("356070"),
        f = n("393414"),
        _ = n("42203"),
        T = n("305961"),
        I = n("697218"),
        m = n("316133"),
        N = n("368121"),
        p = n("759885"),
        S = n("387111"),
        C = n("49111"),
        A = n("782340"),
        h = n("532112");
      function g(e) {
        var t, n, a, g, M, O, R, L, v, P;
        let { message: D, channel: x } = e,
          y =
            null === (a = D.embeds[0]) || void 0 === a
              ? void 0
              : null === (n = a.fields) || void 0 === n
                ? void 0
                : null ===
                      (t = n.find(e => {
                        let { rawName: t } = e;
                        return "guild_id" === t;
                      })) || void 0 === t
                  ? void 0
                  : t.rawValue,
          U =
            null === (O = D.embeds[0]) || void 0 === O
              ? void 0
              : null === (M = O.fields) || void 0 === M
                ? void 0
                : null ===
                      (g = M.find(e => {
                        let { rawName: t } = e;
                        return "channel_id" === t;
                      })) || void 0 === g
                  ? void 0
                  : g.rawValue,
          j = (0, i.useStateFromStores)([T.default], () =>
            T.default.getGuild(y)
          ),
          b = (0, i.useStateFromStores)([_.default], () =>
            _.default.getChannel(U)
          ),
          G = (0, i.useStateFromStores)([I.default], () =>
            I.default.getCurrentUser()
          ),
          B = (0, i.useStateFromStores)(
            [],
            () => D.author.id === (null == G ? void 0 : G.id)
          ),
          k =
            null === (R = x.recipients) || void 0 === R
              ? void 0
              : R.find(e => e !== D.author.id),
          F = (0, i.useStateFromStores)([I.default], () =>
            null != k ? I.default.getUser(k) : null
          ),
          w = (0, c.default)(D),
          H = (0, S.useName)(x.getGuildId(), x.id, F),
          V = (0, i.useStateFromStoresArray)(
            [m.default],
            () => (null != b ? m.default.getVoiceStatesForChannel(b) : []),
            [b]
          ),
          Y = V.some(e => e.user.id === (null == G ? void 0 : G.id)),
          K =
            null === (P = D.embeds[0]) || void 0 === P
              ? void 0
              : null === (v = P.fields) || void 0 === v
                ? void 0
                : null ===
                      (L = v.find(e => {
                        let { rawName: t } = e;
                        return "voice_user_ids" === t;
                      })) || void 0 === L
                  ? void 0
                  : L.rawValue,
          W = null != K ? K.split(",") : [],
          z = (0, i.useStateFromStoresArray)([I.default], () =>
            W.map(e => I.default.getUser(e)).filter(Boolean)
          ),
          Q =
            B && null != F
              ? A.default.Messages.WAVED_AT_USER.format({ username: H })
              : A.default.Messages.WAVED_AT_YOU.format({ username: w.nick }),
          Z = null != j && null != b,
          J = null;
        (J = Z
          ? B || Y
            ? A.default.Messages.YOU_ARE_IN_CHANNEL.format({
                channelHook: (e, t) =>
                  (0, s.jsx)(p.default, { channel: null != b ? b : void 0 }, t),
              })
            : A.default.Messages.THEY_ARE_IN_CHANNEL.format({
                channelHook: (e, t) =>
                  (0, s.jsx)(p.default, { channel: null != b ? b : void 0 }, t),
              })
          : A.default.Messages.CANNOT_ACCESS_HANGOUT),
          0 === V.length &&
            (J = B
              ? A.default.Messages.HANGOUT_OVER_SENDER
              : A.default.Messages.HANGOUT_OVER_RECEIVER);
        let q = B
          ? A.default.Messages.WAVE_AGAIN
          : A.default.Messages.WAVE_BACK;
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsxs)("div", {
              className: h.card,
              children: [
                (0, s.jsx)(r.Text, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: Q,
                }),
                (0, s.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "header-secondary",
                  children: J,
                }),
                V.length > 0
                  ? (0, s.jsx)("div", {
                      className: h.participants,
                      children: (0, s.jsx)(E.default, {
                        guildId: y,
                        partySize: {
                          knownSize: V.length,
                          unknownSize: 0,
                          totalSize: V.length,
                        },
                        members: V.map(e => e.user),
                        maxAvatarsShown: 5,
                      }),
                    })
                  : (0, s.jsx)("div", {
                      className: l(h.participants, h.disabled),
                      children: (0, s.jsx)(E.default, {
                        guildId: y,
                        partySize: {
                          knownSize: z.length,
                          unknownSize: W.length - z.length,
                          totalSize: W.length,
                        },
                        members: z,
                        maxAvatarsShown: 5,
                      }),
                    }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: h.actions,
              children: [
                (0, s.jsxs)(r.Button, {
                  color: r.Button.Colors.BRAND,
                  onClick: () => {
                    null != U &&
                      null != y &&
                      ((0, f.transitionTo)(C.Routes.CHANNEL(y, U)),
                      u.default.selectVoiceChannel(U));
                  },
                  className: h.button,
                  innerClassName: h.buttonInner,
                  disabled: Y || !Z,
                  children: [
                    (0, s.jsx)(N.default, {}),
                    A.default.Messages.JOIN_HANGOUT,
                  ],
                }),
                (0, s.jsx)(r.Button, {
                  color: r.Button.Colors.PRIMARY,
                  onClick: () => {
                    o.default.sendMessage(
                      x.id,
                      d.default.parse(x, "\uD83D\uDC4B")
                    );
                  },
                  className: h.button,
                  children: q,
                }),
              ],
            }),
          ],
        });
      }
    },
    363691: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("851387"),
        d = n("393414"),
        c = n("305961"),
        E = n("162771"),
        f = n("531470"),
        _ = n("794818"),
        T = n("267567"),
        I = n("49111"),
        m = n("782340"),
        N = n("254539"),
        p = n("125792"),
        S = () => {
          let e = (0, r.useStateFromStores)(
              [E.default],
              () => E.default.getGuildId(),
              []
            ),
            t = (0, r.useStateFromStores)(
              [c.default],
              () => c.default.getGuild(e),
              [e]
            ),
            n = (0, r.useStateFromStores)(
              [T.default],
              () => T.default.getHistorySnapshot(),
              []
            ),
            [l, S] = a.useState(!1);
          if (null == t) return null;
          let C = async () => {
            S(!0);
            try {
              _.trackGuildJoinClicked(t.id),
                await u.default.joinGuild(t.id, {
                  source: I.JoinGuildSources.NOTICE_BAR,
                });
            } catch {
              S(!1);
            }
          };
          return (0, s.jsxs)("div", {
            className: i(N.notice, p.notice),
            children: [
              (0, s.jsxs)(o.Button, {
                look: o.Button.Looks.OUTLINED,
                color: o.Button.Colors.WHITE,
                size: o.Button.Sizes.NONE,
                className: i(N.button, N.back),
                innerClassName: N.iconButton,
                onClick: () => {
                  let e = (0, d.getHistory)();
                  null != n && null != n.location
                    ? (0, d.replaceWith)({ ...n.location })
                    : e.goBack();
                },
                children: [
                  (0, s.jsx)(f.default, {
                    width: 16,
                    height: 16,
                    className: N.arrow,
                  }),
                  m.default.Messages.BACK,
                ],
              }),
              (0, s.jsx)(o.Text, {
                className: N.header,
                variant: "text-sm/normal",
                children: m.default.Messages.LURKER_MODE_NAG_BAR_HEADER,
              }),
              (0, s.jsx)(o.Button, {
                className: N.button,
                look: o.Button.Looks.OUTLINED,
                color: o.Button.Colors.WHITE,
                size: o.Button.Sizes.NONE,
                submitting: l,
                onClick: C,
                children: m.default.Messages.LURKER_MODE_NAG_BAR_BUTTON.format({
                  guild: t.name,
                }),
              }),
            ],
          });
        };
    },
    639440: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          dismissMediaPostSharePrompt: function () {
            return r;
          },
          fetchMediaPostEmbed: function () {
            return o;
          },
          unfurlEmbedUrl: function () {
            return u;
          },
        });
      var s = n("872717"),
        a = n("913144"),
        l = n("448993"),
        i = n("49111");
      function r(e) {
        a.default.dispatch({
          type: "DISMISS_MEDIA_POST_SHARE_PROMPT",
          threadId: e,
        });
      }
      async function o(e) {
        a.default.dispatch({ type: "MEDIA_POST_EMBED_FETCH", threadId: e });
        try {
          let t = await s.HTTP.get({
              url: i.Endpoints.MEDIA_POST_RESHARE_GET_PREVIEW(e),
            }),
            n = t.body;
          a.default.dispatch({
            type: "MEDIA_POST_EMBED_FETCH_SUCCESS",
            threadId: e,
            mediaPostEmbed: n,
          });
        } catch (t) {
          a.default.dispatch({
            type: "MEDIA_POST_EMBED_FETCH_FAILURE",
            threadId: e,
          });
        }
      }
      async function u(e) {
        try {
          let t = await s.HTTP.post({
            url: i.Endpoints.UNFURL_EMBED_URLS,
            body: { urls: e },
          });
          return t.body;
        } catch (e) {
          throw new l.APIError(e);
        }
      }
    },
    690563: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildEligibleForMediaChannels: function () {
            return i;
          },
          useEligibleForGuildMediaChannelPostPreviewEmbed: function () {
            return o;
          },
        });
      var s = n("862205"),
        a = n("49111");
      let l = (0, s.createExperiment)({
        kind: "guild",
        id: "2023-03_guild_media_channel",
        label: "Media Channel",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enables guild to create a media channel",
            config: { enabled: !0 },
          },
        ],
      });
      function i(e) {
        var t;
        let { enabled: n } = l.useExperiment(
          {
            guildId:
              null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                ? t
                : a.EMPTY_STRING_SNOWFLAKE_ID,
            location: "96e84c_1",
          },
          { autoTrackExposure: !0 }
        );
        return (null == e ? void 0 : e.id) != null && n;
      }
      let r = (0, s.createExperiment)({
        kind: "user",
        id: "2023-04_guild_media_channel_post_preview_embed_users",
        label: "Guild Role Subscription Users",
        defaultConfig: { enabledForUser: !1 },
        treatments: [
          {
            id: 1,
            label: "Enables for users Guild Media Post Preview Embeds",
            config: { enabledForUser: !0 },
          },
        ],
      });
      function o() {
        let { enabledForUser: e } = r.useExperiment(
          { location: "96e84c_2" },
          { autoTrackExposure: !0 }
        );
        return e;
      }
    },
    921387: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FetchState: function () {
            return a;
          },
          default: function () {
            return d;
          },
        });
      var s,
        a,
        l = n("446674"),
        i = n("913144");
      ((s = a || (a = {}))[(s.NOT_FETCHED = 0)] = "NOT_FETCHED"),
        (s[(s.FETCHING = 1)] = "FETCHING"),
        (s[(s.FETCHED = 2)] = "FETCHED"),
        (s[(s.FAILED = 3)] = "FAILED");
      let r = {},
        o = {};
      class u extends l.Store {
        getMediaPostEmbed(e) {
          if (null != e) return r[e];
        }
        getEmbedFetchState(e) {
          var t;
          return null !== (t = o[e]) && void 0 !== t ? t : 0;
        }
        getMediaPostEmbeds() {
          return r;
        }
      }
      u.displayName = "MediaPostEmbedStore";
      var d = new u(i.default, {
        CONNECTION_OPEN: function () {
          (r = {}), (o = {});
        },
        MEDIA_POST_EMBED_FETCH: function (e) {
          let { threadId: t } = e;
          o[t] = 1;
        },
        MEDIA_POST_EMBED_FETCH_SUCCESS: function (e) {
          let { threadId: t, mediaPostEmbed: n } = e;
          (r = { ...r, [t]: n }), (o[t] = 2);
        },
        MEDIA_POST_EMBED_FETCH_FAILURE: function (e) {
          let { threadId: t } = e;
          o[t] = 3;
        },
        LOGOUT: function (e) {
          !e.isSwitchingAccount && ((r = {}), (o = {}));
        },
      });
    },
    781083: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 14,
          height: n = 18,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 10 14",
          fill: "none",
          children: (0, s.jsx)("path", {
            d: "M8.33325 6.33301V3.66634C8.33325 1.82834 6.83725 0.333008 4.99992 0.333008C3.16125 0.333008 1.66659 1.82834 1.66659 3.66634V6.33301C0.931252 6.33301 0.333252 6.93034 0.333252 7.66634V12.333C0.333252 13.0683 0.931252 13.6663 1.66659 13.6663H8.33325C9.06859 13.6663 9.66659 13.0683 9.66659 12.333V7.66634C9.66659 6.93034 9.06859 6.33301 8.33325 6.33301ZM4.99992 10.9997C4.44792 10.9997 3.99992 10.5517 3.99992 9.99967C3.99992 9.44767 4.44792 8.99967 4.99992 8.99967C5.55192 8.99967 5.99992 9.44767 5.99992 9.99967C5.99992 10.5517 5.55192 10.9997 4.99992 10.9997ZM6.99992 6.33301H2.99992V3.66634C2.99992 2.56367 3.89725 1.66634 4.99992 1.66634C6.10259 1.66634 6.99992 2.56367 6.99992 3.66634V6.33301Z",
            fill: l,
          }),
        });
      }
    },
    801177: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return k;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("748820"),
        d = n("171210"),
        c = n("65597"),
        E = n("77078"),
        f = n("206230"),
        _ = n("812204"),
        T = n("716241"),
        I = n("606292"),
        m = n("955735"),
        N = n("537325"),
        p = n("651693"),
        S = n("380986"),
        C = n("969706"),
        A = n("506885"),
        h = n("981601"),
        g = n("845579"),
        M = n("26989"),
        O = n("697218"),
        R = n("181114"),
        L = n("752531"),
        v = n("315102"),
        P = n("794818"),
        D = n("866190"),
        x = n("781083"),
        y = n("159938"),
        U = n("49111"),
        j = n("894488"),
        b = n("782340"),
        G = n("960392"),
        B = n("760238");
      function k(e) {
        var t, n, l;
        let { embedUrl: r, message: k, channel: F } = e,
          w = (0, y.useMediaPostEmbedData)(r, k),
          { setPopout: H } = (0, C.default)(k.id, j.DEFAULT_POPOUTS),
          V = (0, S.useContextMenuMessage)(k, F, H, !0),
          Y = g.GifAutoPlay.useSetting(),
          K = (0, D.useIsWindowFocused)(),
          [W, z] = a.useState(!1),
          [Q, Z] = a.useState((null == w ? void 0 : w.coverImage) == null),
          J = (0, c.useStateFromStores)(
            [f.default],
            () => f.default.useReducedMotion
          ),
          q = (0, c.useStateFromStores)(
            [M.default, O.default],
            () => {
              var e;
              return M.default.isMember(
                null == w ? void 0 : w.guildId,
                null === (e = O.default.getCurrentUser()) || void 0 === e
                  ? void 0
                  : e.id
              );
            },
            [w]
          ),
          [X, $] = (0, c.useStateFromStoresArray)([M.default], () => {
            var e;
            let t =
              (null == w ? void 0 : w.authorId) != null
                ? M.default.getMember(w.guildId, w.authorId)
                : null;
            return [
              null !== (e = null == t ? void 0 : t.colorString) && void 0 !== e
                ? e
                : "inherit",
              null == t ? void 0 : t.colorRoleId,
            ];
          }),
          { reducedMotion: ee } = a.useContext(
            E.AccessibilityPreferencesContext
          ),
          [et, en] = a.useState(!1),
          es = a.useCallback(() => {
            z(!0);
          }, [z]),
          ea = a.useCallback(() => {
            z(!1);
          }, [z]),
          el = a.useCallback(async () => {
            null != w &&
              ((0, T.trackWithMetadata)(
                U.AnalyticEvents.MEDIA_POST_PREVIEW_EMBED_CLICKED,
                {
                  media_post_id: w.threadId,
                  channel_id: F.id,
                  can_access: w.canAccess,
                  is_member: q,
                }
              ),
              w.canAccess
                ? (0, N.default)(
                    U.Routes.CHANNEL(w.guildId, w.threadId, w.messageId)
                  )
                : q
                  ? (0, N.default)(
                      U.Routes.CHANNEL(w.guildId, w.parentChannelId)
                    )
                  : await P.startLurking(
                      w.guildId,
                      {},
                      { channelId: w.parentChannelId }
                    ));
          }, [w, F, q]),
          ei = a.useCallback(
            () => (
              o(
                (null == w ? void 0 : w.authorId) != null,
                "Author Id cannot be null when loading user profile"
              ),
              (0, A.default)(w.authorId, w.avatarUrl, {
                guildId: w.guildId,
                channelId: F.id,
              })
            ),
            [w, F]
          );
        if (null == w) return null;
        let er = (e, t) => (
            o(
              null != w.authorId,
              "Author Id cannot be null when rendering user popout"
            ),
            (0, s.jsx)(h.default, {
              ...e,
              userId: w.authorId,
              guildId: w.guildId,
              channelId: F.id,
              messageId: k.id,
              roleId: $,
              newAnalyticsLocations: t,
            })
          ),
          eo = (0, v.getAvatarDecorationURL)({
            avatarDecoration:
              null === (t = w.user) || void 0 === t
                ? void 0
                : t.avatarDecoration,
            size: (0, I.getDecorationSizeForAvatarSize)(E.AvatarSizes.SIZE_40),
            canAnimate: et,
          }),
          eu =
            null === (n = w.user) || void 0 === n
              ? void 0
              : n.getAvatarURL(w.guildId, 40, et),
          ed = () => {
            !ee.enabled && en(e => !e);
          },
          ec = w.coverImage,
          eE = null != ec && (0, p.isAnimatedImageUrl)(ec);
        return (0, s.jsxs)("div", {
          className: G.postPreviewContainer,
          children: [
            (0, s.jsxs)("div", {
              className: G.thumbnailContainer,
              onMouseEnter: es,
              onMouseLeave: ea,
              children: [
                !Q &&
                  (!0 === w.shouldShowBlurredThumbnailImage
                    ? (0, s.jsx)("img", {
                        src: B,
                        alt: b.default.Messages.MEDIA_POST_EMBED_THUMBNAIL_ALT,
                        className: i(G.thumbnail, {
                          [G.spoiler]: w.shouldSpoiler,
                        }),
                        onContextMenu: V,
                        onError: () => Z(!0),
                      })
                    : (0, s.jsx)(m.default, {
                        src:
                          !(K && (Y || W)) && eE
                            ? "".concat(ec, "?format=png")
                            : ec,
                        backgroundSrc: "".concat(ec, "?format=png"),
                        alt: b.default.Messages.MEDIA_POST_EMBED_THUMBNAIL_ALT,
                        aspectRatio: 16 / 9,
                        className: i(G.thumbnail, {
                          [G.spoiler]: w.shouldSpoiler,
                        }),
                        imageChildClassName: G.thumbnailImage,
                        onContextMenu: V,
                        onError: () => Z(!0),
                      })),
                null != w.coverImageOverlayText &&
                  (0, s.jsx)(E.Clickable, {
                    onClick: el,
                    children: (0, s.jsx)("div", {
                      className: G.thumbnailOverlay,
                      children: (0, s.jsxs)("div", {
                        className: G.thumbnailOverlayCta,
                        children: [
                          (0, s.jsx)(x.default, { color: d.default.WHITE }),
                          (0, s.jsx)(E.Text, {
                            variant: "text-sm/semibold",
                            color: "always-white",
                            children: w.coverImageOverlayText,
                          }),
                        ],
                      }),
                    }),
                  }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: G.descriptionContainer,
              children: [
                (0, s.jsxs)("div", {
                  className: G.descriptionHeader,
                  children: [
                    (0, s.jsx)(E.Text, {
                      variant: "text-md/semibold",
                      color: "text-normal",
                      className: G.descriptionHeaderText,
                      children: w.title,
                    }),
                    (0, s.jsx)(E.Text, {
                      variant: "text-sm/normal",
                      color: "text-muted",
                      className: i(
                        G.descriptionHeaderText,
                        G.descriptionSubtitle
                      ),
                      children: w.subtitle,
                    }),
                  ],
                }),
                (0, s.jsxs)("div", {
                  className: G.descriptionFooter,
                  children: [
                    null != eu &&
                      (0, s.jsx)(E.Popout, {
                        renderPopout: e => er(e, [_.default.AVATAR]),
                        position: "right",
                        spacing: 12,
                        preload: null == w.authorId ? void 0 : ei,
                        children: e =>
                          (0, s.jsx)("div", {
                            onMouseEnter: ed,
                            onMouseLeave: ed,
                            children: (0, s.jsx)(E.Avatar, {
                              ...e,
                              size: E.AvatarSizes.SIZE_40,
                              src: eu,
                              "aria-label":
                                b.default.Messages
                                  .MEDIA_POST_EMBED_AUTHOR_AVATAR_ALT,
                              avatarDecoration: eo,
                            }),
                          }),
                      }),
                    (0, s.jsxs)("div", {
                      className: G.descriptionFooterContainer,
                      children: [
                        (0, s.jsxs)("div", {
                          className: G.descriptionFooterChannelName,
                          children: [
                            null != w.channelName &&
                              (0, s.jsx)(L.default, {
                                className: G.mediaChannelIcon,
                              }),
                            (0, s.jsx)(E.Clickable, {
                              onClick: el,
                              className: G.channelName,
                              children: (0, s.jsx)(E.Heading, {
                                variant: "heading-md/semibold",
                                color: "header-primary",
                                children:
                                  null !== (l = w.channelName) && void 0 !== l
                                    ? l
                                    : w.guildName,
                              }),
                            }),
                          ],
                        }),
                        null != w.authorName &&
                          (0, s.jsx)(E.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            className: G.descriptionFooterAuthorContainer,
                            children:
                              b.default.Messages.MEDIA_POST_EMBED_FOOTER_WEB.format(
                                {
                                  authorName: w.authorName,
                                  authorNameHook: () =>
                                    (0, s.jsx)(
                                      E.Popout,
                                      {
                                        renderPopout: e =>
                                          er(e, [_.default.USERNAME]),
                                        position: "right",
                                        preload:
                                          null == w.authorId ? void 0 : ei,
                                        children: e =>
                                          (0, s.jsx)(E.NameWithRoleAnchor, {
                                            ...e,
                                            name: w.authorName,
                                            color: X,
                                            className: G.authorName,
                                          }),
                                      },
                                      (0, u.v4)()
                                    ),
                                }
                              ),
                          }),
                      ],
                    }),
                    w.canAccess
                      ? (0, s.jsx)(E.Button, {
                          color: E.ButtonColors.BRAND,
                          onClick: el,
                          children: (0, s.jsx)(E.Text, {
                            variant: "text-sm/medium",
                            color: "always-white",
                            children: w.ctaText,
                          }),
                        })
                      : (0, s.jsx)(R.default, {
                          pauseAnimation: J,
                          onClick: el,
                          className: i(G.ctaButtonContent, G.subscribeButton),
                          color: E.Button.Colors.CUSTOM,
                          children: (0, s.jsx)(E.Text, {
                            variant: "text-sm/medium",
                            color: "always-white",
                            children: w.ctaText,
                          }),
                        }),
                  ],
                }),
              ],
            }),
          ],
        });
      }
    },
    159938: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useMediaPostEmbedData: function () {
            return N;
          },
        });
      var s = n("884691"),
        a = n("65597"),
        l = n("203288"),
        i = n("361572"),
        r = n("271938"),
        o = n("42203"),
        u = n("26989"),
        d = n("305961"),
        c = n("162771"),
        E = n("697218"),
        f = n("639440"),
        _ = n("690563"),
        T = n("921387"),
        I = n("711326"),
        m = n("49111");
      function N(e, t) {
        let n = (0, _.useEligibleForGuildMediaChannelPostPreviewEmbed)(),
          N = (0, I.getMediaPostEmbedChannelPath)(e),
          p = (0, a.useStateFromStores)(
            [u.default, r.default],
            () => {
              let e = r.default.getId();
              return u.default.isMember(null == N ? void 0 : N.guildId, e);
            },
            [N]
          ),
          S = (0, a.useStateFromStores)(
            [l.default],
            () =>
              null != N &&
              (null == N ? void 0 : N.channelId) != null &&
              l.default.isChannelGated(N.guildId, N.channelId),
            [N]
          ),
          C = t.hasFlag(m.MessageFlags.IS_CROSSPOST),
          {
            rawMediaPostEmbedData: A,
            guild: h,
            parentChannel: g,
            user: M,
            selectedGuildId: O,
            canAccess: R,
          } = (0, a.useStateFromStoresObject)(
            [T.default, d.default, o.default, E.default, c.default],
            () => {
              var e;
              let t =
                  null ===
                    (e = T.default.getMediaPostEmbed(
                      null == N ? void 0 : N.threadId
                    )) || void 0 === e
                    ? void 0
                    : e.media,
                n = d.default.getGuild(null == N ? void 0 : N.guildId),
                s = o.default.getChannel(null == N ? void 0 : N.channelId),
                a = E.default.getUser(null == t ? void 0 : t.author_id),
                l = c.default.getGuildId(),
                r = null != s && (0, i.canViewChannel)(s);
              return {
                rawMediaPostEmbedData: t,
                guild: n,
                parentChannel: s,
                user: a,
                selectedGuildId: l,
                canAccess: r,
              };
            },
            [N]
          ),
          L = s.useMemo(() => {
            let e = (0, I.getMediaPostEmbedCommonData)({
              mediaPostEmbedData: A,
              guild: h,
              parentChannel: g,
              user: M,
              selectedGuildId: O,
              canAccess: R,
            });
            return null == e ? null : { ...e, user: M };
          }, [A, h, g, M, O, R]);
        return (
          s.useEffect(() => {
            if ((null == N ? void 0 : N.threadId) != null) {
              let e = T.default.getEmbedFetchState(N.threadId);
              !0 === n &&
                e === T.FetchState.NOT_FETCHED &&
                (!p || !1 !== S) &&
                (p || !C) &&
                (0, f.fetchMediaPostEmbed)(null == N ? void 0 : N.threadId);
            }
          }, [N, n, p, S, C]),
          L
        );
      }
    },
    333363: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-07_announcement_views",
        label: "Announcement Views",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      var l = a;
    },
    29883: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useJoinOrStartButtonState: function () {
            return o;
          },
        });
      var s,
        a,
        l = n("884691"),
        i = n("501260"),
        r = n("782340");
      function o(e) {
        let {
          embeddedActivity: t,
          joinability: n,
          currentEmbeddedActivity: s,
        } = e;
        return l.useMemo(
          () =>
            (function (e) {
              let {
                  embeddedActivity: t,
                  joinability: n,
                  currentEmbeddedActivity: s,
                } = e,
                a = null == t,
                l = {
                  disabled: !1,
                  isJoinAction: !a,
                  text: a
                    ? r.default.Messages.START
                    : r.default.Messages.EMBEDDED_ACTIVITIES_JOIN,
                  tooltip: void 0,
                },
                o = null != t && null != s && t.instanceId === s.instanceId;
              if (o)
                return {
                  ...l,
                  disabled: !0,
                  text: r.default.Messages.EMBEDDED_ACTIVITIES_JOINED,
                  tooltip:
                    r.default.Messages.EMBEDDED_ACTIVITIES_ALREADY_IN_ACTIVITY,
                };
              if (null != n && n !== i.EmbeddedActivityJoinability.CAN_JOIN) {
                let e;
                switch (n) {
                  case i.EmbeddedActivityJoinability
                    .NO_USE_EMBEDDED_ACTIVITIES_PERMISSION:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_INVALID_PERMISSIONS;
                    break;
                  case i.EmbeddedActivityJoinability.ACTIVITY_AGE_GATED:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_LAUNCH_FAIL_AGE_GATE;
                    break;
                  case i.EmbeddedActivityJoinability
                    .ACTIVITIES_FEATURE_NOT_ENABLED_FOR_OS:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_APPLICATION_UNSUPPORTED_OS;
                    break;
                  case i.EmbeddedActivityJoinability
                    .ACTIVITY_NOT_SUPPORTED_ON_OS:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_NOT_AVAILABLE_ON_OS;
                    break;
                  case i.EmbeddedActivityJoinability.CHANNEL_FULL:
                    e = r.default.Messages.UNABLE_TO_JOIN_CHANNEL_FULL;
                    break;
                  case i.EmbeddedActivityJoinability
                    .NO_CHANNEL_CONNECT_PERMISSION:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_INSTANCE_EMBED_NO_VOICE_PERMISSION;
                    break;
                  case i.EmbeddedActivityJoinability.NO_CHANNEL:
                  case i.EmbeddedActivityJoinability.NO_GUILD:
                  case i.EmbeddedActivityJoinability.NO_USER:
                  case i.EmbeddedActivityJoinability.IS_AFK_CHANNEL:
                    e =
                      r.default.Messages
                        .EMBEDDED_ACTIVITIES_INSTANCE_EMBED_INVALID_CHANNEL;
                }
                return { ...l, disabled: !0, tooltip: e };
              }
              return l;
            })({
              embeddedActivity: t,
              joinability: n,
              currentEmbeddedActivity: s,
            }),
          [t, n, s]
        );
      }
      ((s = a || (a = {}))[(s.ACTIVE = 0)] = "ACTIVE"),
        (s[(s.ENDED = 1)] = "ENDED");
    },
    865446: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldShowNitroUpsell: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-10_social_proofing_file_size",
        label: "Social Proofing File Size",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Should show nitro upsell for large files",
            config: { enabled: !0 },
          },
        ],
      });
      function l(e) {
        let t = a.getCurrentConfig({ location: e });
        return t.enabled;
      }
    },
    605953: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getHeaderTextForInvite: function () {
            return a;
          },
        });
      var s = n("782340");
      function a(e) {
        let {
          isVoiceChannel: t,
          isHubGuild: n,
          isOwnInvite: a,
          isGuest: l,
          isStage: i,
          isStream: r,
        } = e;
        if (t) {
          if (a) {
            if (r) return s.default.Messages.INVITE_BUTTON_TITLE_INVITER_STREAM;
            if (i)
              return s.default.Messages
                .INVITE_BUTTON_TITLE_INVITER_STAGE_CHANNEL;
            else if (l)
              return s.default.Messages.GUEST_INVITE_EMBED_TITLE_SENDER;
            else
              return s.default.Messages
                .INVITE_BUTTON_TITLE_INVITER_VOICE_CHANNEL;
          }
          if (r) return s.default.Messages.INVITE_BUTTON_TITLE_INVITED_STREAM;
          if (i)
            return s.default.Messages.INVITE_BUTTON_TITLE_INVITED_STAGE_CHANNEL;
          else if (l)
            return s.default.Messages.GUEST_INVITE_EMBED_TITLE_RECEIVER;
          else
            return s.default.Messages.INVITE_BUTTON_TITLE_INVITED_VOICE_CHANNEL;
        }
        return n
          ? a
            ? s.default.Messages.INVITE_BUTTON_TITLE_INVITER_HUB
            : s.default.Messages.INVITE_BUTTON_TITLE_INVITED_HUB
          : a
            ? s.default.Messages.INVITE_BUTTON_TITLE_INVITER
            : s.default.Messages.INVITE_BUTTON_TITLE_INVITED;
      }
    },
    243375: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("872717"),
        a = n("794818"),
        l = n("49111"),
        i = e =>
          s.HTTP.get({
            url: l.Endpoints.STICKER_GUILD_DATA(e),
            oldFormErrors: !0,
          })
            .then(e =>
              (null == e ? void 0 : e.body) != null
                ? (0, a.makeDiscoverableGuild)(e.body)
                : null
            )
            .catch(() => null);
    },
    383667: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("49111");
      function a(e, t) {
        return e.type === s.MessageTypes.GUILD_INVITE_REMINDER && !t;
      }
    },
    456936: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("872717"),
        a = n("755624"),
        l = n("263024"),
        i = n("42203"),
        r = n("377253"),
        o = n("660478"),
        u = n("697218"),
        d = n("299039"),
        c = n("49111");
      async function E(e, t) {
        let n = u.default.getCurrentUser();
        if (null == n) return;
        let E = r.default.getMessages(e),
          f = E.toArray()
            .filter(e => 0 > d.default.compare(e.id, t))
            .sort((e, t) => d.default.compare(e.id, t.id))
            .reverse()[0],
          _ = null == f ? d.default.atPreviousMillisecond(t) : f.id,
          T = 0;
        E.forAll(e => {
          d.default.compare(e.id, _) > 0 &&
            (0, o.shouldBadgeMessage)(e, n) &&
            T++;
        });
        let I = i.default.getChannel(e);
        null != I &&
          I.isThread() &&
          (I.isArchivedThread() && (await l.default.unarchiveThread(I, !1)),
          !a.default.hasJoined(e) &&
            (await l.default.joinThread(I, "Mark Unread"))),
          s.HTTP.post({
            url: c.Endpoints.MESSAGE_ACK(e, _),
            body: { manual: !0, mention_count: T },
            oldFormErrors: !0,
          });
      }
    },
    836943: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ButtonAddReaction: function () {
            return v;
          },
        }),
        n("702976"),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("483366"),
        o = n.n(r),
        u = n("130969"),
        d = n("77078"),
        c = n("558986"),
        E = n("62587"),
        f = n("85589"),
        _ = n("166257"),
        T = n("432173"),
        I = n("219013"),
        m = n("697218"),
        N = n("79945"),
        p = n("790950"),
        S = n("568734"),
        C = n("719923"),
        A = n("875978"),
        h = n("49111"),
        g = n("958706"),
        M = n("646718"),
        O = n("782340"),
        R = n("159441"),
        L = n("450076");
      class v extends a.Component {
        render() {
          let {
              type: e,
              message: t,
              className: n,
              children: a,
              useChatFontScaling: l,
            } = this.props,
            { isReactionPickerActive: r } = this.state,
            o = t.state === h.MessageStates.SENDING,
            u = e === A.ReactionTypes.BURST;
          if (o || (0, S.hasFlag)(t.flags, h.MessageFlags.EPHEMERAL))
            return null;
          let f = m.default.getCurrentUser(),
            _ = (0, C.isPremium)(f),
            T = u
              ? O.default.Messages.ADD_BURST_REACTION
              : O.default.Messages.ADD_REACTION;
          !_ &&
            u &&
            (T = (0, s.jsx)(E.NitroTooltipLabel, {
              tooltipText: O.default.Messages.ADD_BURST_REACTION,
            }));
          let I = l ? L : R;
          return (0, s.jsx)(d.Popout, {
            shouldShow: r,
            onRequestClose: this.handleReactionPickerToggle,
            renderPopout: this.renderReactionPopout,
            position: "right",
            children: (e, t) => {
              let { isShown: l } = t;
              return (0, s.jsx)(d.TooltipContainer, {
                text: T,
                color: d.TooltipColors.PRIMARY,
                "aria-label": u
                  ? O.default.Messages.ADD_BURST_REACTION
                  : O.default.Messages.ADD_REACTION,
                tooltipClassName: I.addReactionTooltip,
                children: (0, s.jsxs)(d.Clickable, {
                  ...e,
                  onClick: e => {
                    this.handleAddReactionClick(e);
                  },
                  onMouseEnter: () =>
                    (0, c.initiateEmojiInteraction)(
                      g.EmojiInteractionPoint.AddReactionPopoutMouseEntered
                    ),
                  onFocus: () =>
                    (0, c.initiateEmojiInteraction)(
                      g.EmojiInteractionPoint.AddReactionPopoutFocused
                    ),
                  className: i(I.reactionBtn, { [I.active]: l }, n),
                  children: [
                    u
                      ? (0, s.jsx)(s.Fragment, {
                          children: (0, s.jsx)(p.default, {
                            className: I.icon,
                          }),
                        })
                      : (0, s.jsx)(s.Fragment, {
                          children: (0, s.jsx)(N.default, {
                            className: I.icon,
                          }),
                        }),
                    a,
                  ],
                }),
              });
            },
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { isReactionPickerActive: !1 }),
            (this.onAddReaction = (e, t) => {
              if (null == e) return;
              let { channel: n, message: s, isForumToolbar: a } = this.props;
              (0, _.addReaction)(
                n.id,
                s.id,
                (0, T.toReactionEmoji)(e),
                a
                  ? _.ReactionLocations.FORUM_TOOLBAR
                  : _.ReactionLocations.MESSAGE,
                { burst: t }
              );
            }),
            (this.handleReactionPickerToggle = () => {
              this.setState(e => ({
                isReactionPickerActive: !e.isReactionPickerActive,
              }));
            }),
            (this.handleAddReactionClick = e => {
              let { type: t, channel: n } = this.props;
              e.stopPropagation();
              let s = m.default.getCurrentUser();
              t === A.ReactionTypes.BURST &&
                !(0, C.isPremium)(s) &&
                (0, f.openBurstReactionsUpsellModal)({
                  analytics: {
                    type: M.PremiumUpsellTypes.BURST_REACTION_UPSELL,
                    page:
                      null != n.getGuildId()
                        ? h.AnalyticsPages.GUILD_CHANNEL
                        : h.AnalyticsPages.DM_CHANNEL,
                    section: (0, T.getBurstAnalyticsSection)(n),
                    object: h.AnalyticsObjects.INLINE_REACTION_PICKER_UPSELL,
                  },
                }),
                this.handleReactionPickerToggle();
            }),
            (this.renderReactionPopout = e => {
              let { closePopout: t } = e,
                { type: n, channel: a, message: l } = this.props,
                i = n === A.ReactionTypes.BURST,
                r = {
                  openPopoutType: "message_reaction_emoji_picker",
                  ...(i && {
                    openPopoutType: "message_super_reaction_emoji_picker",
                    page:
                      null != a.getGuildId()
                        ? h.AnalyticsPages.GUILD_CHANNEL
                        : h.AnalyticsPages.DM_CHANNEL,
                    section: (0, T.getBurstAnalyticsSection)(a),
                    object: h.AnalyticsObjects.REACTION_RAIL,
                  }),
                },
                c = (0, s.jsx)(I.ReactionPicker, {
                  closePopout: t,
                  channel: a,
                  onSelectEmoji: (e, n, s) => {
                    this.onAddReaction(e, s), n && (s ? o(t, 150)() : t());
                  },
                  analyticsOverride: r,
                  messageId: l.id,
                });
              return (0, s.jsx)(u.DialogContext.Consumer, {
                children: e =>
                  e
                    ? (0, s.jsx)(d.Dialog, {
                        "aria-label": O.default.Messages.REACTION_PICKER,
                        children: c,
                      })
                    : c,
              });
            });
        }
      }
    },
    125247: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("42203"),
        l = n("305961"),
        i = n("957255"),
        r = n("67541"),
        o = n("49111");
      function u(e) {
        let { code: t, messageData: n } = e,
          [u, d] = t.split("/"),
          c = a.default.getChannel(d),
          E = l.default.getGuild(u);
        return null != c &&
          c.isGuildVocal() &&
          null != E &&
          i.default.can(o.Permissions.VIEW_CHANNEL, c) &&
          i.default.can(o.Permissions.CONNECT, c)
          ? (0, s.jsx)(r.default, { guild: E, channel: c, messageData: n })
          : null;
      }
    },
    699473: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("702976");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("974667"),
        o = n("446674"),
        u = n("405645"),
        d = n("634807"),
        c = n("256572"),
        E = n("42203"),
        f = n("957255"),
        _ = n("780571"),
        T = n("568734"),
        I = n("299039"),
        m = n("383667"),
        N = n("574073"),
        p = n("865343"),
        S = n("39331"),
        C = n("68480"),
        A = n("115859"),
        h = n("596368"),
        g = n("227439"),
        M = n("862451"),
        O = n("611792"),
        R = n("554372"),
        L = n("49111"),
        v = n("5762"),
        P = a.memo(function (e) {
          var t;
          let {
              message: n,
              compact: a = !1,
              className: l,
              onContextMenu: P,
              onClick: D,
              disableInteraction: x = !1,
              hideSimpleEmbedContent: y = !0,
              channel: U,
              isGroupStart: j,
              animateAvatar: b,
              subscribeToComponentDispatch: G,
              renderThreadAccessory: B,
              trackAnnouncementViews: k = !1,
              ...F
            } = e,
            w = n.isFirstMessageInForumPost(U),
            H = (0, d.isMessageNewerThanImprovedMarkdownEpoch)(
              (null !== (t = n.editedTimestamp) && void 0 !== t
                ? t
                : n.timestamp
              ).valueOf()
            ),
            { content: V, hasSpoilerEmbeds: Y } = (0, S.default)(n, {
              hideSimpleEmbedContent: y,
              allowList: w || H,
              allowHeading: w || H,
              allowLinks: !0,
              previewLinkTarget: !0,
            }),
            K = n.type === L.MessageTypes.REPLY ? n.messageReference : void 0,
            W = (0, o.useStateFromStores)([c.default], () =>
              c.default.getMessageByReference(K)
            ),
            z = (0, r.useListItem)(n.id),
            Q = (0, N.default)(n),
            Z = (0, o.useStateFromStores)(
              [E.default],
              () =>
                n.hasFlag(L.MessageFlags.HAS_THREAD) &&
                E.default.getChannel(I.default.castMessageIdAsChannelId(n.id))
            ),
            J = (0, u.useRoleIcon)({
              guildId: U.guild_id,
              roleId: Q.iconRoleId,
            }),
            q = (0, o.useStateFromStores)([f.default], () =>
              f.default.can(L.Permissions.CREATE_INSTANT_INVITE, U)
            ),
            X = (0, C.default)({ message: n, channel: U, enabled: k });
          if ((0, m.default)(n, q)) return null;
          let $ = (0, p.getMessageAriaLabelledBy)(n),
            ee = (0, p.getMessageAriaDescribedBy)(n);
          return (0, s.jsx)(_.default, {
            compact: a,
            className: i(l, {
              [v.ephemeral]: (0, T.hasFlag)(n.flags, L.MessageFlags.EPHEMERAL),
              [v.disableInteraction]: x,
            }),
            disableInteraction: x,
            childrenRepliedMessage: (0, R.default)(n, U, K, W, a),
            childrenExecutedCommand: (0, O.default)(n, U, a),
            childrenHeader: (0, g.default)({
              ...e,
              guildId: U.guild_id,
              author: Q,
              roleIcon: J,
            }),
            childrenAccessories: e.hideAccessories
              ? void 0
              : (0, A.renderSimpleAccessories)(e, Y),
            childrenMessageContent: (0, h.default)(e, V),
            childrenSystemMessage: (0, M.default)(e),
            onContextMenu: P,
            onClick: D,
            hasThread: B && null != Z && n.hasFlag(L.MessageFlags.HAS_THREAD),
            hasReply: n.type === L.MessageTypes.REPLY,
            "aria-labelledby": $,
            "aria-describedby": ee,
            messageRef: X,
            ...z,
            ...F,
          });
        });
    },
    885968: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("997289"),
        o = n("550766"),
        u = n("191225"),
        d = n("602718"),
        c = n("706508"),
        E = n("986214"),
        f = n("501260"),
        _ = n("698372"),
        T = n("141962"),
        I = n("812204"),
        m = n("685665"),
        N = n("653047"),
        p = n("271938"),
        S = n("42203"),
        C = n("824563"),
        A = n("697218"),
        h = n("811305"),
        g = n("449008"),
        M = n("29883"),
        O = n("954016"),
        R = n("782340"),
        L = n("75644");
      function v(e) {
        var t;
        let {
            application: n,
            activityInstance: v,
            channelId: P,
            guildId: D,
          } = e,
          [x, y] = a.useState(!1),
          { analyticsLocations: U } = (0, m.default)(
            I.default.ACTIVITY_INSTANCE_EMBED
          ),
          j = (0, r.useAnalyticsContext)(),
          b = (0, _.default)(),
          G = (0, l.useStateFromStores)([S.default], () =>
            S.default.getChannel(P)
          ),
          B = (
            null == G
              ? void 0
              : null === (t = G.isThread) || void 0 === t
                ? void 0
                : t.call(G)
          )
            ? null == G
              ? void 0
              : G.parent_id
            : P,
          k = (0, l.useStateFromStores)([p.default], () => p.default.getId()),
          { embeddedActivity: F, currentEmbeddedActivity: w } = (0,
          l.useStateFromStoresObject)([u.default], () => ({
            embeddedActivity: u.default
              .getEmbeddedActivitiesForChannel(null != B ? B : "")
              .find(e => e.instanceId === v.id),
            currentEmbeddedActivity: u.default.getCurrentEmbeddedActivity(),
          })),
          H = (0, l.useStateFromStoresArray)([A.default], () => {
            var e;
            return Array.from(
              null !== (e = null == F ? void 0 : F.userIds) && void 0 !== e
                ? e
                : []
            )
              .map(e => A.default.getUser(e))
              .filter(g.isNotNullish);
          }),
          V = (0, l.useStateFromStores)([C.default], () => {
            var e;
            let t = null == F ? void 0 : F.userIds.values().next().value;
            return null == t
              ? null
              : null ===
                    (e = C.default.findActivity(
                      t,
                      e => e.application_id === n.id
                    )) || void 0 === e
                ? void 0
                : e.details;
          }),
          Y = a.useMemo(() => {
            let e = new N.default(n);
            return (
              null == e.embeddedActivityConfig &&
                (e.embeddedActivityConfig = O.DEFAULT_EMBEDDED_ACTIVITY_CONFIG),
              e
            );
          }, [n]),
          K = (0, f.useEmbeddedActivityJoinability)({
            userId: k,
            channelId: P,
            application: Y,
          }),
          W = null == F,
          z = (0, M.useJoinOrStartButtonState)({
            embeddedActivity: F,
            joinability: K,
            currentEmbeddedActivity: w,
          }),
          Q = async () => {
            y(!0);
            try {
              if (W) {
                let { activityConfigs: e, applications: t } = await (0,
                  o.fetchShelf)({ guildId: D }),
                  s = (0, d.default)({
                    applicationId: n.id,
                    activityConfigs: e,
                    applications: t,
                  });
                await (0, E.default)({
                  activityItem: s,
                  currentEmbeddedApplication: b,
                  channelId: P,
                  guildId: D,
                  locationObject: j.location,
                  embeddedActivitiesManager: T.default,
                  analyticsLocations: U,
                });
              } else
                await (0, c.default)({
                  applicationId: F.applicationId,
                  currentEmbeddedApplication: b,
                  activityChannelId: P,
                  locationObject: j.location,
                  embeddedActivitiesManager: T.default,
                  analyticsLocations: U,
                });
            } finally {
              y(!1);
            }
          };
        return (0, s.jsx)("div", {
          className: L.container,
          children: (0, s.jsxs)("div", {
            className: L.contentContainer,
            children: [
              (0, s.jsx)("div", {
                className: L.headerContainer,
                children: W
                  ? (0, s.jsx)("div", {
                      className: L.endedNote,
                      children: (0, s.jsx)(i.Text, {
                        variant: "text-md/medium",
                        children:
                          R.default.Messages
                            .EMBEDDED_ACTIVITIES_INSTANCE_EMBED_ENDED,
                      }),
                    })
                  : (0, s.jsx)(i.Text, {
                      variant: "text-md/medium",
                      lineClamp: 1,
                      color: "text-normal",
                      children:
                        null != V
                          ? V
                          : R.default.Messages
                              .EMBEDDED_ACTIVITIES_INSTANCE_EMBED_NO_PRESENCE,
                    }),
              }),
              (0, s.jsxs)("div", {
                className: L.footerContainer,
                children: [
                  (0, s.jsx)(i.Tooltip, {
                    text: z.tooltip,
                    children: e => {
                      let { onClick: t, ...n } = e;
                      return (0, a.createElement)(
                        i.Button,
                        {
                          ...n,
                          key: "".concat(z.isJoinAction),
                          onClick: () => {
                            Q(), null == t || t();
                          },
                          color: z.isJoinAction
                            ? i.ButtonColors.GREEN
                            : i.ButtonColors.PRIMARY,
                          submitting: x,
                          disabled: z.disabled,
                        },
                        z.text
                      );
                    },
                  }),
                  !W &&
                    (0, s.jsx)(h.default, {
                      guildId: D,
                      users: H,
                      max: 4,
                      size: h.Sizes.SIZE_32,
                    }),
                ],
              }),
            ],
          }),
        });
      }
    },
    808440: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("970728"),
        r = n("901582"),
        o = n("685665"),
        u = n("398604"),
        d = n("914169"),
        c = n("42793"),
        E = n("141254"),
        f = n("116616"),
        _ = n("271938"),
        T = n("305961"),
        I = n("337543"),
        m = n("430625"),
        N = n("740589"),
        p = n("472315"),
        S = n("783940"),
        C = n("530078"),
        A = n("649112"),
        h = n("793079"),
        g = n("135666"),
        M = n("158783"),
        O = n("49111");
      function R(e) {
        let { code: t, author: n, getAcceptInviteContext: R } = e,
          { invite: L, inviteError: v } = (0, l.useStateFromStoresObject)(
            [I.default],
            () => ({
              invite: I.default.getInvite(t),
              inviteError: I.default.getInviteError(t),
            }),
            [t]
          );
        a.useEffect(() => {
          null == L && i.default.resolveInvite(t);
        }, [t]);
        let P = null != L ? L : { state: O.InviteStates.RESOLVING, code: "" },
          { analyticsLocations: D } = (0, o.default)(),
          x = (0, l.useStateFromStores)(
            [T.default],
            () =>
              (null == L ? void 0 : L.guild) != null
                ? T.default.getGuild(L.guild.id)
                : null,
            [L]
          ),
          y = (0, l.useStateFromStores)([_.default], () => _.default.getId()),
          U = (0, l.useStateFromStores)(
            [u.default],
            () => {
              var e;
              return u.default.getGuildScheduledEvent(
                null === (e = P.guild_scheduled_event) || void 0 === e
                  ? void 0
                  : e.id
              );
            },
            [P]
          ),
          j = () => {
            null != P.channel && i.default.transitionToInviteSync(P);
          },
          b = () => {
            (0, E.isAtGuildCapAndNonPremium)()
              ? (0, f.default)({
                  analyticsSource: { page: O.AnalyticsPages.INVITE_EMBED },
                  analyticsLocation: {
                    page: O.AnalyticsPages.INVITE_EMBED,
                    section: O.AnalyticsSections.GUILD_CAP_UPSELL_MODAL,
                  },
                  analyticsLocations: D,
                })
              : i.default.acceptInviteAndTransitionToInviteChannel({
                  inviteKey: t,
                  context: R("Invite Button Embed"),
                });
          },
          G = (0, s.jsx)(C.default, {
            onTransitionToInviteChannel: j,
            onAcceptInstantInvite: b,
            currentUserId: y,
            guild: x,
            invite: P,
            author: n,
          });
        switch (P.state) {
          case O.InviteStates.RESOLVING:
            G = (0, s.jsx)(h.default, {});
            break;
          case O.InviteStates.EXPIRED:
          case O.InviteStates.BANNED:
            G = (0, s.jsx)(A.default, {
              banned: P.state === O.InviteStates.BANNED,
              author: n,
            });
            break;
          case O.InviteStates.ERROR:
            G = (0, s.jsx)(N.default, { author: n, inviteError: v });
            break;
          default:
            switch ((0, c.getInviteType)(P)) {
              case c.InviteTypes.GROUP_DM:
                G = (0, s.jsx)(S.default, {
                  onTransitionToInviteChannel: j,
                  onAcceptInstantInvite: b,
                  currentUserId: y,
                  invite: P,
                  author: n,
                });
                break;
              case c.InviteTypes.FRIEND:
                G = (0, s.jsx)(p.default, {
                  invite: P,
                  author: n,
                  getAcceptInviteContext: R,
                });
                break;
              default:
                if ((0, c.isStreamInvite)(P)) {
                  G = (0, s.jsx)(M.default, {
                    onTransitionToInviteChannel: j,
                    onAcceptInstantInvite: b,
                    currentUserId: y,
                    guild: x,
                    invite: P,
                  });
                  break;
                }
                if ((0, c.isGuildScheduledEventInviteEmbed)(P)) {
                  G = (0, s.jsx)(d.default, {
                    guildScheduledEvent: U,
                    guild: P.guild,
                    channel: P.channel,
                    isMember: null != x,
                    onAcceptInstantInvite: b,
                    onTransitionToInviteChannel: j,
                  });
                  break;
                }
                if ((0, c.isStageInviteEmbed)(P)) {
                  G = (0, s.jsx)(g.default, {
                    stageInstance: P.stage_instance,
                    guild: P.guild,
                    isMember: null != x,
                    onTransitionToInviteChannel: j,
                    onAcceptInstantInvite: b,
                  });
                  break;
                }
                (0, c.isEmbeddedApplicationInvite)(P) &&
                  (G = (0, s.jsx)(m.default, {
                    invite: P,
                    getAcceptInviteContext: R,
                  }));
            }
        }
        return (0, s.jsx)(r.default, {
          section: O.AnalyticsSections.INVITE_LINK,
          children: G,
        });
      }
    },
    723931: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MessageAccessories: function () {
            return ek;
          },
          default: function () {
            return eF;
          },
          SimpleMessageAccessories: function () {
            return ew;
          },
        }),
        n("222007"),
        n("702976"),
        n("70102"),
        n("881410");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("637612"),
        o = n("446674"),
        u = n("713349"),
        d = n("233736"),
        c = n("77078"),
        E = n("819689"),
        f = n("710306"),
        _ = n("501076"),
        T = n("798609"),
        I = n("627697"),
        m = n("527088"),
        N = n("222650"),
        p = n("139514"),
        S = n("810044"),
        C = n("447435"),
        A = n("963119"),
        h = n("45476"),
        g = n("925685"),
        M = n("84849"),
        O = n("406043"),
        R = n("294519"),
        L = n("477558"),
        v = n("812224"),
        P = n("249393"),
        D = n("383247"),
        x = n("267567"),
        y = n("634807"),
        U = n("367376"),
        j = n("467475"),
        b = n("801177"),
        G = n("985883"),
        B = n("311830"),
        k = n("626301"),
        F = n("428786"),
        w = n("170898"),
        H = n("993735"),
        V = n("705423"),
        Y = n("315021"),
        K = n("24373"),
        W = n("943508"),
        z = n("300322"),
        Q = n("415829"),
        Z = n("845579"),
        J = n("271938"),
        q = n("26989"),
        X = n("88093"),
        $ = n("957255"),
        ee = n("697218"),
        et = n("560176"),
        en = n("952368"),
        es = n("328620"),
        ea = n("688622"),
        el = n("124297"),
        ei = n("377502"),
        er = n("323273"),
        eo = n("599110"),
        eu = n("718517"),
        ed = n("240873"),
        ec = n("568734"),
        eE = n("449008"),
        ef = n("299039"),
        e_ = n("253981"),
        eT = n("605160"),
        eI = n("865446"),
        em = n("913491"),
        eN = n("583022"),
        ep = n("125247"),
        eS = n("885968"),
        eC = n("476714"),
        eA = n("808440"),
        eh = n("865343"),
        eg = n("5982"),
        eM = n("933629"),
        eO = n("600536"),
        eR = n("592707"),
        eL = n("49111"),
        ev = n("646718"),
        eP = n("782340"),
        eD = n("278603"),
        ex = n("872364");
      function ey() {
        return (0, s.jsxs)("div", {
          className: eD.nitroFileSizeUpsell,
          children: [
            (0, s.jsx)("img", {
              src: ex,
              className: eD.nitroBadgeSvg,
              alt: "",
            }),
            (0, s.jsx)(c.Text, {
              variant: "text-xs/normal",
              color: "text-muted",
              className: eD.nitroFileSizeUpsellText,
              children:
                eP.default.Messages.LARGE_FILE_UPLOAD_POWERED_BY_NITRO.format({
                  onClick: () => (0, k.navigateToPremiumMarketingPage)(),
                }),
            }),
          ],
        });
      }
      let eU = new Set([
          eL.MessageEmbedTypes.AUTO_MODERATION_MESSAGE,
          eL.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION,
          eL.MessageEmbedTypes.APPLICATION_NEWS,
          eL.MessageEmbedTypes.POST_PREVIEW,
          eL.MessageEmbedTypes.SAFETY_POLICY_NOTICE,
          eL.MessageEmbedTypes.SAFETY_SYSTEM_NOTIFICATION,
          eL.MessageEmbedTypes.VOICE_CHANNEL,
        ]),
        ej = 15 * eu.default.Millis.MINUTE,
        eb = new Set([
          "discord-developers",
          "discord-testers",
          "discord-townhall",
          "discordgameslab",
        ]),
        eG = (e, t, n) => () => {
          let a = null != t ? t : n;
          if (null == a) return null;
          let { url: l, proxyURL: i, width: r, height: o } = a;
          return (0, s.jsx)(eC.default, {
            width: r,
            height: o,
            src: null != i && "" !== i ? i : l,
            url: null != e && "" !== e ? e : null != i && "" !== i ? i : l,
            format: null != n ? u.GIFType.VIDEO : u.GIFType.IMAGE,
            className: eD.gifFavoriteButton,
          });
        },
        eB = e => () => {
          let { proxy_url: t, width: n, height: a } = e;
          return en.IMAGE_GIF_RE.test(e.filename) && null != n && null != a
            ? (0, s.jsx)(eC.default, {
                width: n,
                height: a,
                src: t,
                url: t,
                format: u.GIFType.IMAGE,
                className: eD.gifFavoriteButton,
              })
            : null;
        };
      class ek extends a.Component {
        shouldRenderInvite(e) {
          let { channel: t } = this.props;
          return !(t.isDM() && !t.isSystemDM() && !t.isGroupDM() && eb.has(e));
        }
        shouldComponentUpdate(e, t) {
          var n, s;
          let { channel: a, message: l, poll: i } = this.props,
            { channel: r, message: o, poll: u } = e;
          return (
            !(0, d.default)(this.state, t) ||
            !(0, d.default)(this.props, e, ["message", "channel"]) ||
            a.type !== r.type ||
            u !== i ||
            o.codedLinks !== l.codedLinks ||
            o.flags !== l.flags ||
            o.giftCodes !== l.giftCodes ||
            o.attachments !== l.attachments ||
            o.embeds !== l.embeds ||
            o.components !== l.components ||
            o.activity !== l.activity ||
            ((n = o.reactions),
            n !== (s = l.reactions) &&
              (n.length !== s.length ||
                !!n.some((e, t) => {
                  let { emoji: n, count: a, burst_count: l } = e,
                    { emoji: i, count: r, burst_count: o } = s[t];
                  return (
                    l !== o || a !== r || n.id !== i.id || n.name !== i.name
                  );
                })))
          );
        }
        renderCtaButton() {
          let { message: e, channel: t, shouldRenderCtaButton: n } = this.props;
          return n
            ? (0, s.jsx)("div", {
                className: eD.ctaButtonContainer,
                children: (0, s.jsx)(M.default, {
                  messageId: e.id,
                  channelId: t.id,
                }),
              })
            : null;
        }
        renderSocialProofingFileSizeNitroUpsell(e) {
          let t = e.attachments.some(
            e => e.size > ev.MAX_PREMIUM_TIER_0_ATTACHMENT_SIZE
          );
          return (0, eI.shouldShowNitroUpsell)("attachment") && t
            ? (0, s.jsx)(ey, {})
            : null;
        }
        renderCodedLinks(e) {
          return 0 === e.codedLinks.length
            ? null
            : e.codedLinks.map(t => {
                let { type: n, code: a } = t;
                if (n === p.CodedLinkType.INVITE)
                  return this.shouldRenderInvite(a)
                    ? (0, s.jsx)(
                        eA.default,
                        {
                          code: a,
                          author: e.author,
                          getAcceptInviteContext: this.getAcceptInviteContext,
                        },
                        a
                      )
                    : null;
                if (n === p.CodedLinkType.TEMPLATE)
                  return (0, s.jsx)(v.default, { code: a }, a);
                if (n === p.CodedLinkType.EVENT)
                  return (0, s.jsx)(L.default, { code: a }, a);
                else if (n === p.CodedLinkType.CHANNEL_LINK)
                  return (0, s.jsx)(ep.default, { code: a, messageData: e }, a);
                else if (n === p.CodedLinkType.APP_DIRECTORY_PROFILE)
                  return (0, s.jsx)(m.default, { code: a, message: e }, a);
                else if (n === p.CodedLinkType.CLYDE_PROFILE) return;
                else if (n === p.CodedLinkType.ACTIVITY_BOOKMARK)
                  return (0, s.jsx)(
                    I.default,
                    { applicationId: a, message: e },
                    a
                  );
                else if (n === p.CodedLinkType.GUILD_PRODUCT)
                  return (0, s.jsx)(R.default, { code: a }, a);
                else if (n === p.CodedLinkType.SERVER_SHOP)
                  return (0, s.jsx)(S.default, { guildId: a }, a);
                else if (n === p.CodedLinkType.QUESTS_EMBED)
                  return (0, s.jsx)(H.default, { questId: a }, a);
                else throw Error("Unknown coded link type: ".concat(n));
              });
        }
        renderGiftCodes(e) {
          let {
              giftCodes: t,
              author: n,
              channel_id: a,
              type: l,
              content: i,
              giftInfo: r,
            } = e,
            o = ee.default.getCurrentUser();
          return null != o && t.length > 0
            ? t.map(e =>
                (0, s.jsx)(
                  "div",
                  {
                    className: eD.giftCodeContainer,
                    children: (0, s.jsx)(f.default, {
                      code: e,
                      author: n,
                      channelId: a,
                      currentUser: o,
                      type: l,
                      content: i,
                      giftInfo: r,
                    }),
                  },
                  e
                )
              )
            : null;
        }
        renderReferralTrial(e) {
          let { referralTrialOfferId: t, type: n } = e,
            { canRenderReferralEmbed: a } = this.props;
          return n !== r.MessageTypes.PREMIUM_REFERRAL || null == t
            ? null
            : (0, s.jsx)(
                "div",
                {
                  className: eD.referralContainer,
                  children: (0, s.jsx)(F.default, {
                    userTrialOfferId: t,
                    canRenderReferralEmbed: null != a && a,
                  }),
                },
                t
              );
        }
        renderReactions(e) {
          let {
            disableReactionCreates: t,
            disableReactionReads: n,
            disableReactionUpdates: a,
            isLurking: l,
            isGuest: i,
            isPendingMember: r,
            channel: o,
            forceAddReactions: u,
          } = this.props;
          return n
            ? null
            : (0, s.jsx)(eR.default, {
                message: e,
                channel: o,
                disableReactionCreates: t,
                disableReactionUpdates: a,
                isLurking: l,
                isGuest: i,
                isPendingMember: r,
                forceAddReactions: u,
                useChatFontScaling: !0,
              });
        }
        renderAttachments(e) {
          let { attachments: t, flags: n } = e,
            { channel: a, shouldRedactExplicitContent: l } = this.props;
          if (0 === t.length || e.isPoll()) return null;
          let i = t.filter(
            e =>
              null == e.flags ||
              !(0, ec.hasFlag)(e.flags, eL.MessageAttachmentFlags.IS_THUMBNAIL)
          );
          if (0 === i.length) return null;
          let {
              gifAutoPlay: r,
              canDeleteAttachments: o,
              inlineAttachmentMedia: u,
              onAttachmentContextMenu: d,
              shouldHideMediaOptions: c,
            } = this.props,
            E = i
              .map(e => (0, er.carouselAssetFromAttachment)(e, c, l))
              .filter(eE.isNotNullish),
            f = {
              source: "Media Mosaic",
              guild_id: a.guild_id,
              channel_id: a.id,
              channel_type: a.type,
            },
            _ = E.length > 1 ? (0, er.createMediaOnClickOverrides)(E, f) : {},
            T = (0, ec.hasFlag)(n, eL.MessageFlags.IS_VOICE_MESSAGE),
            I = i.map(t => {
              let n = {
                  message: e,
                  attachment: t,
                  autoPlayGif: r,
                  canRemoveAttachment: o && (i.length > 1 || "" !== e.content),
                  className: eD.embedWrapper,
                  inlineMedia: u,
                  onContextMenu:
                    null != d
                      ? e => {
                          e.stopPropagation(), e.preventDefault(), d(e, t);
                        }
                      : void 0,
                  onRemoveAttachment: this.handleRemoveAttachment,
                  renderAudioComponent: T
                    ? eM.renderVoiceMessageAudioComponent
                    : eM.renderAudioComponent,
                  renderImageComponent: eM.renderImageComponent,
                  renderPlaintextFilePreview: eM.renderPlaintextFilePreview,
                  renderVideoComponent: eM.renderVideoComponent,
                  onPlay: (e, n, s) => {
                    eo.default.track(
                      eL.AnalyticEvents.MEDIA_ATTACHMENT_PLAYBACK_STARTED,
                      {
                        guild_id: a.guild_id,
                        channel_id: a.id,
                        channel_type: a.type,
                        type: t.content_type,
                        flags: t.flags,
                        size: t.size,
                        duration: s,
                      }
                    );
                  },
                  gifFavoriteButton: eB(t),
                },
                s = (0, ea.getBestEffortSrcUrl)({
                  proxyURL: t.proxy_url,
                  url: t.url,
                });
              return s in _ && (n.onClick = _[s]), n;
            });
          return (0, s.jsx)(w.default, {
            attachmentProps: I,
            channelType: a.type,
            children: (0, s.jsx)(ei.default, { attachments: I }),
          });
        }
        renderEmbeds(e) {
          let { renderEmbeds: t } = this.props;
          return 0 !== e.embeds.length && t
            ? e.embeds.map(t => {
                if (eU.has(t.type) || (0, ed.isServerShopArticleEmbed)(t))
                  return null;
                let n = {
                  renderImageComponent: eM.renderImageComponent,
                  renderVideoComponent: eM.renderVideoComponent,
                  renderLinkComponent: eM.renderMaskedLinkComponent,
                };
                if (
                  t.type === eL.MessageEmbedTypes.ARTICLE &&
                  null != t.url &&
                  /^https?:\/\/(?:canary|ptb|www)?\.discord(?:app)?\.com\/store\/skus\/(?:[0-9]+)/.test(
                    t.url
                  ) &&
                  null != t.provider &&
                  "Discord" === t.provider.name
                ) {
                  let a = e_.default.safeParseWithQuery(t.url);
                  if (null != a && null != a.pathname) {
                    let l = a.pathname.split("/")[3];
                    if (null != l)
                      return (0, s.jsx)(
                        _.default,
                        {
                          skuId: l,
                          renderFallback: () =>
                            this.renderEmbed(t, n, e.id, e.channel_id),
                        },
                        t.id
                      );
                  }
                }
                return this.renderEmbed(t, n, e.id, e.channel_id);
              })
            : null;
        }
        renderComponentAccessories(e) {
          return null == e.components ||
            0 === e.components.length ||
            !1 === this.props.renderComponentAccessory
            ? null
            : (0, s.jsx)(D.default, { message: e });
        }
        renderActivityInvite(e) {
          if (null == e.activity) return null;
          let { channel: t } = this.props;
          return (0, s.jsx)(eg.default, {
            channel: t,
            message: e,
            hideParty: !1,
          });
        }
        renderPublishBump(e) {
          let { channel: t } = this.props;
          return t.type !== eL.ChannelTypes.GUILD_ANNOUNCEMENT ||
            (0, ec.hasFlag)(e.flags, eL.MessageFlags.EPHEMERAL)
            ? null
            : (0, s.jsx)(N.default, {
                channelId: e.channel_id,
                messageId: e.id,
              });
        }
        renderEphemeralAccessories(e, t) {
          return (0, ec.hasFlag)(e.flags, eL.MessageFlags.EPHEMERAL)
            ? (0, s.jsx)(el.default, {
                message: e,
                channel: t,
                onDeleteMessage: () => {
                  E.default.dismissAutomatedMessage(e);
                },
              })
            : null;
        }
        renderStickersAccessories(e) {
          let t = (0, K.getMessageStickers)(e),
            { channel: n, isInteracting: a } = this.props;
          return 0 === t.length
            ? null
            : t.map(e =>
                (0, s.jsx)(
                  W.default,
                  { channel: n, isInteracting: a, renderableSticker: e },
                  e.id
                )
              );
        }
        renderThreadAccessories(e) {
          if (
            e.hasFlag(eL.MessageFlags.HAS_THREAD) &&
            !1 !== this.props.renderThreadAccessory
          )
            return (0, s.jsx)(Q.default, {
              message: e,
              compact: this.props.compact,
            });
        }
        renderThreadRoleMentionWarning(e) {
          if (
            !e.hasFlag(
              eL.MessageFlags.FAILED_TO_MENTION_SOME_ROLES_IN_THREAD
            ) ||
            !this.props.isCurrentUser
          )
            return;
          let t = Date.now() - ef.default.extractTimestamp(e.id);
          if (!(t >= ej))
            return (0, s.jsx)("div", {
              className: eD.threadRoleMentionFailure,
              children: eP.default.Messages.THREAD_ROLE_MENTION_FAILURE,
            });
        }
        renderSuppressConfirmModal() {
          let { channel: e, message: t } = this.props;
          return (0, s.jsxs)(c.DeclarativeConfirmModal, {
            dismissable: !0,
            header: eP.default.Messages.SUPPRESS_EMBED_TITLE,
            confirmText: eP.default.Messages.SUPPRESS_EMBED_CONFIRM,
            cancelText: eP.default.Messages.CANCEL,
            onCancel: () => this.setState({ showSuppressModal: !1 }),
            onConfirm: () => {
              E.default.suppressEmbeds(e.id, t.id),
                this.setState({ showSuppressModal: !1 });
            },
            children: [
              (0, s.jsx)(c.Text, {
                variant: "text-md/normal",
                color: "text-normal",
                className: eD.confirmText,
                children: eP.default.Messages.SUPPRESS_EMBED_BODY,
              }),
              (0, s.jsx)(c.Text, {
                variant: "text-md/normal",
                color: "text-muted",
                children: eP.default.Messages.SUPPRESS_EMBED_TIP,
              }),
            ],
          });
        }
        renderRemoveAttachmentConfirmModal() {
          let { channel: e, message: t } = this.props,
            { attachmentToDelete: n } = this.state;
          if (null == n) {
            this.setState({ showRemoveAttachmentModal: !1 });
            return;
          }
          return (0, s.jsx)(c.DeclarativeConfirmModal, {
            dismissable: !0,
            header: eP.default.Messages.REMOVE_ATTACHMENT_TITLE,
            confirmText: eP.default.Messages.REMOVE_ATTACHMENT_CONFIRM,
            cancelText: eP.default.Messages.CANCEL,
            onCancel: () =>
              this.setState({
                showRemoveAttachmentModal: !1,
                attachmentToDelete: null,
              }),
            onConfirm: () => {
              let s = t.attachments.filter(e => e.id !== n.id);
              E.default.patchMessageAttachments(e.id, t.id, s),
                this.setState({
                  showRemoveAttachmentModal: !1,
                  attachmentToDelete: null,
                });
            },
            children: (0, s.jsx)(c.Text, {
              variant: "text-md/normal",
              color: "text-normal",
              className: eD.confirmText,
              children: eP.default.Messages.REMOVE_ATTACHMENT_BODY,
            }),
          });
        }
        renderInteractionPremiumUpsell(e) {
          let t = e.applicationId;
          return e.type !== r.MessageTypes.INTERACTION_PREMIUM_UPSELL ||
            null == t
            ? null
            : (0, s.jsx)(eO.default, {
                applicationId: t,
                guildId: this.props.channel.guild_id,
              });
        }
        renderEmbeddedApplicationInstanceEmbed(e) {
          let { application: t, activityInstance: n, interaction: a } = e;
          return null == t ||
            null == n ||
            (null == a ? void 0 : a.type) !==
              T.InteractionTypes.APPLICATION_COMMAND
            ? null
            : (0, s.jsx)(eS.default, {
                application: t,
                activityInstance: n,
                channelId: this.props.channel.id,
                guildId: this.props.channel.guild_id,
              });
        }
        renderMediaPostEmbeds(e) {
          return e.embeds.flatMap(t =>
            t.type !== eL.MessageEmbedTypes.POST_PREVIEW || null == t.url
              ? []
              : (0, s.jsx)(
                  b.default,
                  { embedUrl: t.url, message: e, channel: this.props.channel },
                  t.id
                )
          );
        }
        renderSafetyPolicyNotice(e) {
          return 1 === e.embeds.length &&
            e.embeds[0].type === eL.MessageEmbedTypes.SAFETY_POLICY_NOTICE
            ? (0, s.jsx)(V.SafetyPolicyNotice, { message: e })
            : null;
        }
        renderSafetySystemNotification(e) {
          return 1 === e.embeds.length &&
            e.embeds[0].type === eL.MessageEmbedTypes.SAFETY_SYSTEM_NOTIFICATION
            ? (0, s.jsx)(Y.SafetySystemNotification, { embed: e.embeds[0] })
            : null;
        }
        renderVoiceChannelInvite(e, t) {
          if (
            1 === e.embeds.length &&
            e.embeds[0].type === eL.MessageEmbedTypes.VOICE_CHANNEL
          )
            return (0, s.jsx)(P.VoiceChannelInviteEmbed, {
              message: e,
              channel: t,
            });
        }
        renderMediaObscureNotice(e) {
          if (0 === e.attachments.length && 0 === e.embeds.length) return null;
          let { obscuredAttachments: t, obscuredEmbeds: n } = (0,
          C.getObscuredMediaForMessage)(e);
          return 0 === t.length && 0 === n.length
            ? null
            : (0, s.jsx)(g.default, { message: e });
        }
        renderPoll(e, t) {
          if (null != t)
            return (0, s.jsx)(B.default, {
              message: e,
              poll: t,
              className: eD.pollContainer,
            });
        }
        render() {
          let { className: e, message: t, channel: n, poll: a } = this.props,
            { showSuppressModal: l, showRemoveAttachmentModal: r } = this.state,
            o = this.renderCodedLinks(t),
            u = this.renderGiftCodes(t),
            d = this.renderReferralTrial(t),
            c = this.renderAttachments(t),
            E = this.renderCtaButton(),
            f = this.renderSocialProofingFileSizeNitroUpsell(t),
            _ = this.renderEmbeds(t),
            T = this.renderActivityInvite(t),
            I = this.renderReactions(t),
            m = this.renderPublishBump(t),
            N = this.renderEphemeralAccessories(t, n),
            p = this.renderStickersAccessories(t),
            S = this.renderThreadAccessories(t),
            C = this.renderComponentAccessories(t),
            A = this.renderThreadRoleMentionWarning(t),
            h = this.renderEmbeddedApplicationInstanceEmbed(t),
            g = this.renderInteractionPremiumUpsell(t),
            M = this.renderMediaPostEmbeds(t),
            O = this.renderSafetyPolicyNotice(t),
            R = this.renderSafetySystemNotification(t),
            L = this.renderVoiceChannelInvite(t, n),
            v = this.renderMediaObscureNotice(t),
            P = this.renderPoll(t, a);
          return null == o &&
            null == c &&
            null == _ &&
            null == T &&
            null == I &&
            null == u &&
            null == d &&
            null == m &&
            null == N &&
            null == p &&
            null == S &&
            null == C &&
            null == h &&
            null == A &&
            null == M &&
            null == O &&
            null != g &&
            null == P &&
            null == L
            ? null
            : (0, s.jsxs)("div", {
                id: (0, eh.getMessageAccessoriesId)(t),
                className: i(e, eD.container),
                children: [
                  A,
                  P,
                  o,
                  u,
                  d,
                  M,
                  c,
                  E,
                  _,
                  v,
                  T,
                  p,
                  C,
                  h,
                  g,
                  f,
                  I,
                  m,
                  N,
                  l && this.renderSuppressConfirmModal(),
                  r && this.renderRemoveAttachmentConfirmModal(),
                  S,
                  O,
                  R,
                  L,
                ],
              });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              showSuppressModal: !1,
              showRemoveAttachmentModal: !1,
              attachmentToDelete: null,
            }),
            (this.getAcceptInviteContext = e => {
              let { channel: t, message: n } = this.props;
              return {
                location: e,
                location_guild_id: t.getGuildId(),
                location_channel_id: t.id,
                location_channel_type: t.type,
                location_message_id: n.id,
              };
            }),
            (this.renderEmbed = (e, t, n, a) => {
              let {
                  gifAutoPlay: l,
                  inlineEmbedMedia: i,
                  canSuppressEmbeds: r,
                  hasSpoilerEmbeds: o,
                  shouldRedactExplicitContent: u,
                } = this.props,
                d = (0, eT.getObscureReasonForEmbed)(e, a, n, o, u);
              return e.type === eL.MessageEmbedTypes.GIFT
                ? null
                : (0, s.jsx)(
                    es.GIFAccessoryContext.Provider,
                    {
                      value: eG(e.url, e.image, e.video),
                      children: (0, s.jsx)(et.default, {
                        className: eD.embedWrapper,
                        embed: e,
                        obscureReason: null != d ? d : void 0,
                        autoPlayGif: l,
                        hideMedia: !i,
                        onSuppressEmbed: r
                          ? this.handleEmbedSuppressed
                          : void 0,
                        renderTitle: this.renderEmbedTitle,
                        renderDescription: this.renderEmbedDescription,
                        messageId: n,
                        channelId: a,
                        ...t,
                      }),
                    },
                    e.id
                  );
            }),
            (this.renderEmbedTitle = (e, t) =>
              e.type === eL.MessageEmbedTypes.RICH
                ? U.default.parseEmbedTitle(t, !0, {
                    channelId: this.props.channel.id,
                  })
                : t),
            (this.renderEmbedDescription = (e, t, n) =>
              e.type === eL.MessageEmbedTypes.RICH
                ? U.default.parse(t, !0, {
                    channelId: this.props.channel.id,
                    allowLinks: !0,
                    allowEmojiLinks: !0,
                    allowList: this.props.showListsAndHeaders,
                    allowHeading: !n && this.props.showListsAndHeaders,
                    previewLinkTarget: this.props.showMaskedLinks,
                  })
                : t),
            (this.handleEmbedSuppressed = e => {
              let { channel: t, message: n } = this.props;
              e.shiftKey
                ? E.default.suppressEmbeds(t.id, n.id)
                : this.setState({ showSuppressModal: !0 });
            }),
            (this.handleRemoveAttachment = e => {
              this.setState({
                showRemoveAttachmentModal: !0,
                attachmentToDelete: e,
              });
            });
        }
      }
      function eF(e) {
        var t;
        let { channel: n, message: a, renderSuppressEmbeds: l } = e,
          i = (0, o.useStateFromStores)([J.default], () => J.default.getId()),
          r = Z.InlineAttachmentMedia.useSetting(),
          u = Z.InlineEmbedMedia.useSetting(),
          d = Z.RenderEmbeds.useSetting(),
          c = d && !(0, em.default)(e.message),
          E = Z.RenderReactions.useSetting(),
          f = Z.GifAutoPlay.useSetting(),
          _ = (0, o.useStateFromStores)(
            [X.default],
            () => null == n.guild_id || X.default.canChatInGuild(n.guild_id),
            [n]
          ),
          T = (0, o.useStateFromStores)(
            [x.default],
            () => null != n.guild_id && x.default.isLurking(n.guild_id),
            [n]
          ),
          I = (0, o.useStateFromStores)(
            [q.default],
            () => q.default.isCurrentUserGuest(n.guild_id),
            [n]
          ),
          m = (0, o.useStateFromStores)([q.default, ee.default], () => {
            var e, t;
            let s = ee.default.getCurrentUser();
            return (
              null !==
                (t =
                  null != n.guild_id && null != s
                    ? null === (e = q.default.getMember(n.guild_id, s.id)) ||
                      void 0 === e
                      ? void 0
                      : e.isPending
                    : null) &&
              void 0 !== t &&
              t
            );
          }),
          { canAddNewReactions: N, canManageMessages: p } = (0,
          o.useStateFromStoresObject)(
            [$.default],
            () => ({
              canAddNewReactions:
                _ && $.default.can(eL.Permissions.ADD_REACTIONS, n),
              canManageMessages: $.default.can(
                eL.Permissions.MANAGE_MESSAGES,
                n
              ),
            }),
            [_, n]
          ),
          [, S] = (0, O.useCurrentUserCommunicationDisabled)(n.guild_id),
          C = (0, z.useIsActiveChannelOrUnarchivableThread)(n),
          g =
            (i === a.author.id || p) &&
            a.author.id !== eL.LOCAL_BOT_ID &&
            !1 !== l &&
            !(0, ec.hasFlag)(a.flags, eL.MessageFlags.EPHEMERAL) &&
            C,
          M = i === a.author.id && C,
          R = a.author.id === i,
          L = a.isFirstMessageInForumPost(n),
          v = (0, eN.default)({
            channel: n,
            canChat: _,
            renderReactions: E,
            canAddNewReactions: N,
            isLurking: T,
            isGuest: I,
            communicationDisabled: S,
            isActiveChannelOrUnarchivableThread: C,
          }),
          P = (0, y.isMessageNewerThanImprovedMarkdownEpoch)(
            (null !== (t = a.editedTimestamp) && void 0 !== t
              ? t
              : a.timestamp
            ).valueOf()
          ),
          D = (0, j.default)(null == n ? void 0 : n.id),
          U = (0, G.default)(a),
          b = (0, A.useShouldRedactExplicitContent)(n.id, a.author.id),
          B = (0, h.useShouldRenderReportFalsePositiveButton)(a.id);
        return (0, s.jsx)(ek, {
          canSuppressEmbeds: g,
          canDeleteAttachments: M,
          ...v,
          disableReactionReads: !!L || v.disableReactionReads,
          ...e,
          isLurking: T && _,
          isGuest: I && _,
          isPendingMember: m && _,
          isCurrentUser: R,
          inlineAttachmentMedia: r,
          inlineEmbedMedia: u,
          renderEmbeds: c,
          gifAutoPlay: f,
          canRenderReferralEmbed: n.isDM(),
          poll: U,
          showListsAndHeaders: P,
          showMaskedLinks: P,
          shouldHideMediaOptions: D,
          shouldRedactExplicitContent: b,
          shouldRenderCtaButton: B,
        });
      }
      ek.defaultProps = { renderEmbeds: !0, compact: !1 };
      let ew = e => {
        var t;
        let {
            message: n,
            channel: a,
            disableReactionReads: l = !1,
            renderComponentAccessory: i = !1,
            renderThreadAccessory: r = !1,
            disableReactionCreates: o = !0,
            disableReactionUpdates: u = !0,
            ...d
          } = e,
          c = Z.InlineAttachmentMedia.useSetting(),
          E = Z.InlineEmbedMedia.useSetting(),
          f = Z.RenderEmbeds.useSetting(),
          _ = Z.GifAutoPlay.useSetting(),
          T = (0, y.isMessageNewerThanImprovedMarkdownEpoch)(
            (null !== (t = n.editedTimestamp) && void 0 !== t
              ? t
              : n.timestamp
            ).valueOf()
          ),
          I = (0, j.default)(null == a ? void 0 : a.id),
          m = (0, A.useShouldRedactExplicitContent)(a.id, n.author.id),
          N = (0, h.useShouldRenderReportFalsePositiveButton)(n.id),
          p = (0, G.default)(n);
        return (0, s.jsx)(ek, {
          ...d,
          message: n,
          channel: a,
          disableReactionReads: l,
          disableReactionCreates: o,
          disableReactionUpdates: u,
          canSuppressEmbeds: !1,
          canDeleteAttachments: !1,
          renderComponentAccessory: i,
          renderThreadAccessory: r,
          inlineAttachmentMedia: c,
          inlineEmbedMedia: E,
          renderEmbeds: f,
          gifAutoPlay: _,
          poll: p,
          showListsAndHeaders: T,
          showMaskedLinks: T,
          shouldHideMediaOptions: I,
          shouldRedactExplicitContent: m,
          shouldRenderCtaButton: N,
        });
      };
    },
    5982: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("803816"),
        i = n("685665"),
        r = n("653047"),
        o = n("671071"),
        u = n("271938"),
        d = n("824563"),
        c = n("49111"),
        E = n("450484"),
        f = n("348077"),
        _ = e => {
          var t;
          let { channel: n, message: _, hideParty: T } = e,
            { analyticsLocations: I } = (0, i.default)(),
            m = (0, a.useStateFromStores)([u.default], () => u.default.getId()),
            N = (0, a.useStateFromStores)(
              [d.default],
              () => {
                if (null == _.application)
                  return d.default.findActivity(
                    _.author.id,
                    e => e.type === c.ActivityTypes.LISTENING
                  );
                {
                  var e;
                  let t = _.author.id;
                  return (
                    (null === (e = _.activity) || void 0 === e
                      ? void 0
                      : e.type) === c.ActivityActionTypes.JOIN_REQUEST &&
                      (t = t === m && n.isPrivate() ? n.getRecipientId() : m),
                    d.default.getApplicationActivity(t, _.application.id)
                  );
                }
              },
              [_, n, m]
            );
          return (0, s.jsx)(l.default, {
            className: f.container,
            activity: N,
            activityActionType: null != _.activity ? _.activity.type : null,
            partyId: null != _.activity ? _.activity.party_id : null,
            userId: _.author.id,
            application:
              null != (t = _).application
                ? r.default.createFromServer(t.application)
                : null != t.activity &&
                    null != t.activity.party_id &&
                    (0, E.isSpotifyParty)(t.activity.party_id)
                  ? o.SpotifyApplication
                  : void 0,
            message: _,
            channelId: n.id,
            guildId: n.getGuildId(),
            hideParty: T,
            isSender: _.author.id === m,
            analyticsLocations: I,
          });
        };
    },
    600536: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("77078"),
        i = n("991254"),
        r = n("248933"),
        o = n("129408"),
        u = n("777053"),
        d = n("375010"),
        c = n("49111"),
        E = n("782340");
      function f(e) {
        let { applicationId: t, guildId: n } = e,
          f = (0, i.useApplication)(t),
          { listingsLoaded: _ } = (0, i.useFetchListingsForApplication)(
            t,
            null == f ? void 0 : f.primarySkuId
          ),
          T = (0, a.useStateFromStores)(
            [r.default],
            () => r.default.getSubscriptionGroupListingForApplication(t),
            [t]
          ),
          I = null != T ? (0, o.getPayableSubscriptionListing)(T) : null,
          { openModal: m, canOpenModal: N } = (0, d.default)({
            listing: I,
            guildId: n,
            groupListingId: null == T ? void 0 : T.id,
            showBenefitsFirst: !0,
            analyticsLocation: c.AnalyticsLocations.INTERACTION_RESPONSE,
          });
        return (0, s.jsx)(u.default, {
          size: l.Button.Sizes.MEDIUM,
          onClick: () => m(),
          disabled: !N || !_,
          children: E.default.Messages.INTERACTION_PREMIUM_UPSELL_CTA,
        });
      }
    },
    592707: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          findReactionIndex: function () {
            return N;
          },
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("266491"),
        o = n("77078"),
        u = n("875978"),
        d = n("836943"),
        c = n("865343"),
        E = n("621698"),
        f = n("350134"),
        _ = n("782340"),
        T = n("159441"),
        I = n("450076");
      let m = (e, t) => (null == e && null == t) || e === t,
        N = (e, t) =>
          e.findIndex(
            e =>
              m(e.emoji.id, null == t ? void 0 : t.id) &&
              m(e.emoji.name, null == t ? void 0 : t.name)
          ),
        p = (e, t) => {
          if (null == t) return e;
          let n = N(e, t);
          return n < 0 ? e : [e[n], ...e.slice(0, n), ...e.slice(n + 1)];
        };
      class S extends a.PureComponent {
        static getDerivedStateFromProps(e, t) {
          let n = e.message.reactions.length;
          return 0 === t.reactionsCount && n > 0
            ? { disableTransitionAppear: !1, reactionsCount: n }
            : t.reactionsCount !== n
              ? { reactionsCount: n }
              : null;
        }
        render() {
          let {
              message: e,
              disableReactionCreates: t,
              disableReactionUpdates: n,
              isLurking: a,
              isGuest: l,
              isPendingMember: m,
              isForumToolbar: N,
              channel: p,
              className: S,
              forceAddReactions: C,
              reactionClassName: A,
              useChatFontScaling: h,
              forceHideReactionCreates: g,
              remainingReactions: M,
              combinedReactions: O,
              visibleReactionsCount: R,
            } = this.props,
            { disableTransitionAppear: L } = this.state,
            v = h ? I : T,
            P = R > 0;
          return P || C
            ? (0, s.jsxs)(r.TransitionGroup, {
                component: "div",
                className: i(v.reactions, S),
                transitionAppear: !L,
                role: "group",
                transitionLeave: !1,
                id: (0, c.getMessageReactionsId)(e),
                onMouseEnter: () => this.setState({ isHovered: !0 }),
                onMouseLeave: () => this.setState({ isHovered: !1 }),
                children: [
                  (0, s.jsx)(E.MessageReactionsGroupWrapper, {
                    reactions: O,
                    message: e,
                    readOnly: n,
                    isLurking: a,
                    isGuest: l,
                    isPendingMember: m,
                    isForumToolbar: N,
                    useChatFontScaling: h,
                    className: A,
                  }),
                  M > 0 &&
                    (0, s.jsx)(o.Clickable, {
                      onClick: t => {
                        t.stopPropagation(), (0, f.showReactionsModal)(p, e);
                      },
                      className: i(v.reaction, A, v.remainingReactions),
                      "aria-label": _.default.Messages.ADD_REACTION,
                      children: (0, s.jsxs)(o.Text, {
                        className: v.reactionInner,
                        variant: "text-sm/normal",
                        children: ["+", M],
                      }),
                    }),
                  !t &&
                    !g &&
                    (0, s.jsx)(d.ButtonAddReaction, {
                      type: u.ReactionTypes.NORMAL,
                      message: e,
                      channel: p,
                      useChatFontScaling: h,
                      isHovered: this.state.isHovered,
                      className: i({
                        [v.forceShow]: C && !P,
                        [v.forceShowLook]: C,
                      }),
                    }),
                ],
              })
            : null;
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              disableTransitionAppear: !0,
              reactionsCount: this.props.message.reactions.length,
              isHovered: !1,
            });
        }
      }
      var C = e => {
        let { message: t, maxReactions: n, hoistReaction: l } = e,
          {
            combinedReactions: i,
            remainingReactions: r,
            visibleReactionsCount: o,
          } = a.useMemo(() => {
            let e = [],
              s = p(t.reactions, l),
              a = null != n && n < s.length,
              i = a ? s.slice(0, n) : s,
              r = s.length - i.length,
              o = s.length;
            return (
              i.forEach(t => {
                t.burst_count > 0 &&
                  e.push({ ...t, type: u.ReactionTypes.BURST }),
                  t.count > 0 && e.push({ ...t, type: u.ReactionTypes.NORMAL }),
                  null != t.me_vote && --o;
              }),
              {
                combinedReactions: e,
                visibleReactionsCount: o,
                remainingReactions: r,
              }
            );
          }, [l, n, t.reactions]);
        return (0, s.jsx)(S, {
          ...e,
          visibleReactionsCount: o,
          combinedReactions: i,
          remainingReactions: r,
        });
      };
    },
    621698: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MessageReactionsGroupWrapper: function () {
            return m;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("509043"),
        o = n("430568"),
        u = n("811425"),
        d = n("102873"),
        c = n("738107"),
        E = n("875978"),
        f = n("350134"),
        _ = n("159441"),
        T = n("450076");
      let I = a.memo(function (e) {
          let t,
            n,
            {
              useChatFontScaling: a,
              hideEmoji: l,
              emoji: u,
              className: I,
              count: m,
              me: N,
              me_burst: p,
              burst_count: S,
              burst_colors: C,
              readOnly: A,
              isLurking: h,
              isGuest: g,
              isPendingMember: M,
              type: O,
            } = e,
            R = O === E.ReactionTypes.BURST,
            L = (0, f.isMeReaction)(N, p, O),
            v = (0, d.useEmojiColorPalette)(R && null != C ? C : []),
            P = a ? T : _,
            D = R ? S : m,
            x = (0, c.getMinCounterWidth)(D, f.REACTION_MIN_WIDTH_DIGITS),
            y = {};
          if (R && null != v) {
            var U;
            let { accentColor: e, backgroundColor: s, opacity: a } = v,
              l =
                null !== (U = (0, r.hex2rgb)(null != s ? s : "", a)) &&
                void 0 !== U
                  ? U
                  : "";
            L && (y.borderColor = s), (y.background = l), (t = e), (n = e);
          }
          let j = { minWidth: x, color: t, borderColor: n };
          return (0, s.jsxs)("div", {
            className: i(P.reaction, P.reactionInner, I, {
              [P.reactionMe]: L,
              [P.reactionReadOnly]: A && !h && !M && !g,
            }),
            style: y,
            children: [
              (0, s.jsx)(o.default, {
                className: i({ [P.hideEmoji]: l }),
                emojiId: u.id,
                emojiName: u.name,
                size: "reaction",
                animated: R && u.animated,
              }),
              (0, s.jsx)("div", {
                className: P.reactionCount,
                style: j,
                children: D,
              }),
            ],
          });
        }),
        m = a.memo(function (e) {
          let { showImmediate: t, reactions: n, ...l } = e,
            [i, r] = a.useState(!1),
            [o, d] = a.useTransition(),
            c = a.useCallback(
              e => {
                e &&
                  !i &&
                  !o &&
                  d(() => {
                    r(!0);
                  });
              },
              [i, o]
            ),
            _ = (0, u.useIsVisible)(c),
            T = (!i || o) && !t,
            m = T ? I : f.Reaction;
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)("div", { ref: _ }),
              n.map(e => {
                var t, n;
                return (0, s.jsx)(
                  m,
                  { ...l, ...e },
                  ((t = e),
                  ""
                    .concat(t.type === E.ReactionTypes.BURST ? "burst:" : "")
                    .concat(
                      null !== (n = t.emoji.id) && void 0 !== n ? n : 0,
                      ":"
                    )
                    .concat(t.emoji.name))
                );
              }),
            ],
          });
        });
    },
    844061: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eO;
          },
        }),
        n("70102");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("272030"),
        o = n("819689"),
        u = n("987317"),
        d = n("990766"),
        c = n("798609"),
        E = n("881536"),
        f = n("441979"),
        _ = n("605250"),
        T = n("201131"),
        I = n("95039"),
        m = n("289967"),
        N = n("866027"),
        p = n("398604"),
        S = n("477558"),
        C = n("592407"),
        A = n("569382"),
        h = n("86456"),
        g = n("393414"),
        M = n("244480"),
        O = n("488464"),
        R = n("808422"),
        L = n("120252"),
        v = n("967241"),
        P = n("936436"),
        D = n("271938"),
        x = n("950104"),
        y = n("42203"),
        U = n("305961"),
        j = n("957255"),
        b = n("824563"),
        G = n("18494"),
        B = n("697218"),
        k = n("800762"),
        F = n("277174"),
        w = n("497880"),
        H = n("944662"),
        V = n("748880"),
        Y = n("888393"),
        K = n("548703"),
        W = n("859316"),
        z = n("427655"),
        Q = n("161225"),
        Z = n("41163"),
        J = n("830220"),
        q = n("924399"),
        X = n("954060"),
        $ = n("178889"),
        ee = n("52538"),
        et = n("879033"),
        en = n("523257"),
        es = n("14733"),
        ea = n("513448"),
        el = n("606099"),
        ei = n("151218"),
        er = n("423509"),
        eo = n("80301"),
        eu = n("210977"),
        ed = n("512622"),
        ec = n("874612"),
        eE = n("703712"),
        ef = n("659500"),
        e_ = n("387111"),
        eT = n("286235"),
        eI = n("299039"),
        em = n("95045"),
        eN = n("232259"),
        ep = n("49111"),
        eS = n("706530"),
        eC = n("782340"),
        eA = n("714478");
      function eh(e) {
        let { message: t, channel: n, compact: i } = e,
          { author: r } = t,
          { guild_id: o } = n,
          u = t.getChannelId(),
          d = (0, l.useStateFromStores)(
            [U.default],
            () => U.default.getGuild(o),
            [o]
          ),
          c = a.useCallback(() => {
            null != d &&
              (0, I.openGuildBoostingMarketingModal)({
                guildId: d.id,
                location: {
                  section: ep.AnalyticsSections.CHANNEL_TEXT_AREA,
                  object: ep.AnalyticsObjects.BOOST_ANNOUNCEMENT_UPSELL,
                },
              });
          }, [d]),
          E = (0, eN.useUsernameHook)({
            user: r,
            channelId: u,
            guildId: n.guild_id,
            messageId: t.id,
            stopPropagation: !0,
          });
        return (0, s.jsx)(eE.default, {
          message: t,
          compact: i,
          guild: d,
          usernameHook: E,
          onClickMessage: c,
        });
      }
      function eg(e) {
        let { message: t, compact: n, channel: a } = e,
          l = (0, eN.useUsernameHook)({
            user: t.author,
            channelId: a.id,
            guildId: a.guild_id,
            messageId: t.id,
          });
        return (0, s.jsx)(Q.default, {
          message: t,
          compact: n,
          usernameHook: l,
        });
      }
      let eM = Object.freeze({
        [ep.MessageTypes.DEFAULT]: void 0,
        [ep.MessageTypes.REPLY]: void 0,
        [ep.MessageTypes.CHAT_INPUT_COMMAND]: void 0,
        [ep.MessageTypes.CONTEXT_MENU_COMMAND]: void 0,
        [ep.MessageTypes.RECIPIENT_ADD]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            { author: i } = t,
            r = t.getChannelId(),
            o = (0, l.useStateFromStores)(
              [B.default],
              () => B.default.getUser(t.mentions[0]),
              [t]
            ),
            u = e_.default.getName(null, r, o),
            d = (0, eN.useUsernameHook)({
              user: i,
              channelId: r,
              guildId: n.guild_id,
              messageId: t.id,
            }),
            c = (0, eN.useUsernameHook)({
              user: o,
              channelId: r,
              guildId: n.guild_id,
              messageId: t.id,
            });
          return n.isThread()
            ? (0, s.jsx)(eo.default, {
                message: t,
                channel: n,
                compact: a,
                targetUser: o,
                actorUsernameHook: d,
                targetUsernameHook: c,
              })
            : (0, s.jsx)(ee.default, {
                message: t,
                compact: a,
                otherUsername: u,
                usernameHook: d,
                otherUsernameHook: c,
              });
        },
        [ep.MessageTypes.RECIPIENT_REMOVE]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            { author: i } = t,
            r = t.getChannelId(),
            o = (0, l.useStateFromStores)(
              [B.default],
              () => B.default.getUser(t.mentions[0]),
              [t]
            ),
            u = (0, eN.useUsernameHook)({
              user: i,
              channelId: r,
              guildId: n.guild_id,
              messageId: t.id,
            }),
            d = (0, eN.useUsernameHook)({
              user: o,
              channelId: r,
              guildId: n.guild_id,
              messageId: t.id,
            });
          return n.isThread()
            ? (0, s.jsx)(eu.default, {
                message: t,
                channel: n,
                compact: a,
                targetUser: o,
                actorUsernameHook: u,
                targetUsernameHook: d,
              })
            : null != o && o.id !== i.id
              ? (0, s.jsx)(et.default, {
                  message: t,
                  channel: n,
                  compact: a,
                  usernameHook: u,
                  otherUser: o,
                  otherUsernameHook: d,
                })
              : (0, s.jsx)(et.default, {
                  message: t,
                  channel: n,
                  usernameHook: u,
                });
        },
        [ep.MessageTypes.CALL]: function (e) {
          let { message: t, compact: n, channel: i } = e,
            { id: r, author: o } = t,
            d = D.default.getId(),
            c = t.getChannelId(),
            E = (0, l.useStateFromStores)(
              [x.default],
              () => x.default.isCallActive(c, r),
              [c, r]
            ),
            f = (0, l.useStateFromStores)([k.default], () =>
              k.default.getVoiceState(ep.ME, d)
            ),
            _ = !E && null != t.call && !t.call.participants.includes(d),
            T = E && (null == f || f.channelId !== c),
            I = a.useCallback(() => u.default.selectVoiceChannel(c), [c]),
            m = (0, eN.useUsernameHook)({
              user: o,
              channelId: c,
              guildId: i.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(V.default, {
            compact: n,
            message: t,
            missed: _,
            joinable: T,
            usernameHook: m,
            onClickJoinCall: I,
          });
        },
        [ep.MessageTypes.CHANNEL_NAME_CHANGE]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            { author: l } = t,
            i = t.getChannelId(),
            r = (0, eN.useUsernameHook)({
              user: l,
              channelId: i,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(W.default, {
            compact: n,
            message: t,
            usernameHook: r,
            isForumPost: a.isForumPost(),
          });
        },
        [ep.MessageTypes.CHANNEL_ICON_CHANGE]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            { author: l } = t,
            i = t.getChannelId(),
            r = (0, eN.useUsernameHook)({
              user: l,
              channelId: i,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(K.default, {
            compact: n,
            message: t,
            usernameHook: r,
          });
        },
        [ep.MessageTypes.CHANNEL_PINNED_MESSAGE]: function (e) {
          let { message: t, compact: n, channel: l } = e,
            { author: i } = t,
            r = t.getChannelId(),
            o = a.useCallback(() => {
              if (G.default.getChannelId() !== r) {
                let e = y.default.getChannel(r);
                null != e && (0, g.transitionToGuild)(e.guild_id, e.id);
              }
              setTimeout(
                () =>
                  ef.ComponentDispatch.dispatch(
                    ep.ComponentActions.TOGGLE_CHANNEL_PINS
                  ),
                0
              );
            }, [r]),
            u = (0, eN.useUsernameHook)({
              user: i,
              channelId: r,
              guildId: l.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(z.default, {
            message: t,
            compact: n,
            usernameHook: u,
            onClickPins: __OVERLAY__ ? null : o,
          });
        },
        [ep.MessageTypes.USER_JOIN]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            { author: l } = t,
            i = t.getChannelId(),
            r = (0, eN.useUsernameHook)({
              user: l,
              channelId: i,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(ec.default, {
                message: t,
                compact: n,
                usernameHook: r,
              }),
              (0, s.jsx)(P.WelcomeCTAContainer, { channel: a, message: t }),
            ],
          });
        },
        [ep.MessageTypes.GUILD_BOOST]: eh,
        [ep.MessageTypes.GUILD_BOOST_TIER_1]: eh,
        [ep.MessageTypes.GUILD_BOOST_TIER_2]: eh,
        [ep.MessageTypes.GUILD_BOOST_TIER_3]: eh,
        [ep.MessageTypes.CHANNEL_FOLLOW_ADD]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            { author: l } = t,
            i = t.getChannelId(),
            r = (0, eN.useUsernameHook)({
              user: l,
              channelId: i,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(Y.default, {
            message: t,
            compact: n,
            usernameHook: r,
          });
        },
        [ep.MessageTypes.GUILD_STREAM]: function (e) {
          let { message: t, compact: n, channel: i } = e,
            {
              author: r,
              author: { id: o },
              messageReference: u,
            } = t,
            c = t.getChannelId(),
            E = (0, l.useStateFromStores)(
              [b.default],
              () =>
                b.default.findActivity(
                  o,
                  e => e.type === ep.ActivityTypes.PLAYING
                ),
              [o]
            ),
            f = (0, l.useStateFromStores)(
              [y.default],
              () => (null != u ? y.default.getChannel(u.channel_id) : null),
              [u]
            ),
            _ = null == u ? void 0 : u.guild_id,
            T = (0, eN.useUsernameHook)({
              user: r,
              channelId: c,
              guildId: i.guild_id,
              messageId: t.id,
            }),
            I = a.useCallback(() => {
              null != f &&
                null != _ &&
                (0, d.watchStreamAndTransitionToStream)({
                  streamType: eS.StreamTypes.GUILD,
                  ownerId: o,
                  channelId: f.id,
                  guildId: _,
                });
            }, [o, f, _]);
          return null != u && null != f && null != u.guild_id
            ? (0, s.jsx)(X.default, {
                message: t,
                compact: n,
                channel: f,
                playingActivity: E,
                onJoinStream: I,
                usernameHook: T,
              })
            : null;
        },
        [ep.MessageTypes.GUILD_DISCOVERY_DISQUALIFIED]: function (e) {
          let { message: t, compact: n } = e,
            a = t.getChannelId(),
            i = (0, l.useStateFromStores)(
              [y.default],
              () => y.default.getChannel(a),
              [a]
            ),
            r = null != i ? i.getGuildId() : null;
          return (0, s.jsx)(Z.UIKitGuildDiscoveryDisqualified, {
            message: t,
            compact: n,
            onClick: () => {
              null != r &&
                C.default.open(r, ep.GuildSettingsSections.DISCOVERY);
            },
          });
        },
        [ep.MessageTypes.GUILD_DISCOVERY_REQUALIFIED]:
          Z.UIKitGuildDiscoveryRequalified,
        [ep.MessageTypes.GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING]:
          Z.UIKitGuildDiscoveryGracePeriodInitialWarning,
        [ep.MessageTypes.GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING]:
          Z.UIKitGuildDiscoveryGracePeriodFinalWarning,
        [ep.MessageTypes.THREAD_CREATED]: function (e) {
          let { message: t, channel: l, compact: o } = e,
            u = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: t.channel_id,
              guildId: l.guild_id,
              messageId: t.id,
            }),
            d = a.useCallback(
              async e => {
                var n;
                let s =
                  null === (n = t.messageReference) || void 0 === n
                    ? void 0
                    : n.channel_id;
                if (null != s) {
                  await L.default.loadThread(s);
                  let t = y.default.getChannel(s);
                  null != t &&
                    (0, v.openThreadSidebarForViewing)(t, e.shiftKey);
                }
              },
              [t]
            ),
            c = a.useCallback(() => {
              (0, i.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("33250")
                  .then(n.bind(n, "33250"));
                return t => (0, s.jsx)(e, { channel: l, ...t });
              });
            }, [l]),
            E = a.useCallback(
              e => {
                var a;
                let l = y.default.getChannel(
                  null === (a = t.messageReference) || void 0 === a
                    ? void 0
                    : a.channel_id
                );
                null != l &&
                  (0, r.openContextMenuLazy)(e, async () => {
                    let { default: e } = await n
                      .el("994827")
                      .then(n.bind(n, "994827"));
                    return t => (0, s.jsx)(e, { ...t, channel: l });
                  });
              },
              [t]
            );
          return (0, s.jsx)(er.default, {
            message: t,
            compact: o,
            usernameHook: u,
            onClickThread: d,
            onClickViewThreads: c,
            onContextMenuThread: E,
          });
        },
        [ep.MessageTypes.THREAD_STARTER_MESSAGE]: ed.default,
        [ep.MessageTypes.GUILD_INVITE_REMINDER]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            i = (0, l.useStateFromStores)([B.default], () =>
              B.default.getCurrentUser()
            ),
            r = (0, l.useStateFromStores)([U.default], () => {
              var e, t;
              return (
                null !==
                  (t =
                    null === (e = U.default.getGuild(n.getGuildId())) ||
                    void 0 === e
                      ? void 0
                      : e.isOwner(i)) &&
                void 0 !== t &&
                t
              );
            });
          return (0, s.jsx)($.default, {
            message: t,
            compact: a,
            isOwner: r,
            channel: n,
          });
        },
        [ep.MessageTypes.AUTO_MODERATION_ACTION]: function (e) {
          let { message: t, compact: n, channel: a } = e;
          return (0, T.isAutomodMessageRecord)(t)
            ? (0, s.jsx)(H.default, { message: t, compact: n, channel: a })
            : null;
        },
        [ep.MessageTypes.GUILD_INCIDENT_ALERT_MODE_ENABLED]: eg,
        [ep.MessageTypes.GUILD_INCIDENT_ALERT_MODE_DISABLED]: eg,
        [ep.MessageTypes.GUILD_INCIDENT_REPORT_RAID]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            l = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: a.id,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(q.default, {
            message: t,
            compact: n,
            channel: a,
            usernameHook: l,
          });
        },
        [ep.MessageTypes.GUILD_INCIDENT_REPORT_FALSE_ALARM]: function (e) {
          let { message: t, compact: n, channel: a } = e,
            l = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: a.id,
              guildId: a.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(J.default, {
            message: t,
            compact: n,
            channel: a,
            usernameHook: l,
          });
        },
        [ep.MessageTypes.ROLE_SUBSCRIPTION_PURCHASE]: N.default,
        [ep.MessageTypes.PURCHASE_NOTIFICATION]: function (e) {
          var t;
          let { message: n, channel: a, compact: l } = e;
          return (null === (t = n.purchaseNotification) || void 0 === t
            ? void 0
            : t.type) === c.PurchaseNotificationType.GUILD_PRODUCT
            ? (0, s.jsx)(m.default, { message: n, channel: a, compact: l })
            : null;
        },
        [ep.MessageTypes.INTERACTION_PREMIUM_UPSELL]: void 0,
        [ep.MessageTypes.STAGE_START]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            i = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: n.id,
              guildId: n.guild_id,
              messageId: t.id,
            }),
            r = (0, l.useStateFromStores)(
              [p.default],
              () => p.default.getActiveEventByChannel(n.id),
              [n.id]
            );
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(el.default, {
                message: t,
                compact: a,
                usernameHook: i,
              }),
              null != r && r.name === t.content
                ? (0, s.jsx)(S.default, {
                    code: "".concat(n.guild_id, "-").concat(r.id),
                  })
                : null,
            ],
          });
        },
        [ep.MessageTypes.STAGE_END]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            l = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: n.id,
              guildId: n.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(en.default, {
            message: t,
            compact: a,
            usernameHook: l,
          });
        },
        [ep.MessageTypes.STAGE_SPEAKER]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            l = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: n.id,
              guildId: n.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(ea.default, {
            message: t,
            compact: a,
            usernameHook: l,
          });
        },
        [ep.MessageTypes.STAGE_RAISE_HAND]: function (e) {
          var t, n;
          let { message: a, channel: r, compact: u } = e,
            d = (0, eN.useUsernameHook)({
              user: a.author,
              channelId: r.id,
              guildId: r.guild_id,
              messageId: a.id,
            }),
            c = (0, l.useStateFromStores)([j.default], () =>
              j.default.can(ep.Permissions.MUTE_MEMBERS, r)
            ),
            E = (0, l.useStateFromStores)([O.default], () =>
              O.default.getParticipant(r.id, a.author.id)
            ),
            f =
              new Date(eI.default.extractTimestamp(a.id)).toISOString() ===
              new Date(
                null !==
                  (n =
                    null == E
                      ? void 0
                      : null === (t = E.voiceState) || void 0 === t
                        ? void 0
                        : t.requestToSpeakTimestamp) && void 0 !== n
                  ? n
                  : 0
              ).toISOString(),
            _ =
              c &&
              (null == E ? void 0 : E.rtsState) ===
                R.RequestToSpeakStates.REQUESTED_TO_SPEAK &&
              f;
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(es.default, {
                message: a,
                compact: u,
                usernameHook: d,
              }),
              _
                ? (0, s.jsxs)(i.Button, {
                    wrapperClassName: eA.inviteToSpeakButtonWrapper,
                    innerClassName: eA.inviteToSpeakButtonInner,
                    look: i.Button.Looks.FILLED,
                    color: i.Button.Colors.PRIMARY,
                    onClick: () => {
                      (0, M.setUserSuppress)(r, a.author.id, !1),
                        o.default.deleteMessage(r.id, a.id, !0);
                    },
                    children: [
                      (0, s.jsx)(F.default, { height: 20, width: 20 }),
                      eC.default.Messages.REQUEST_TO_SPEAK_ACCEPT,
                    ],
                  })
                : null,
            ],
          });
        },
        [ep.MessageTypes.STAGE_TOPIC]: function (e) {
          let { message: t, channel: n, compact: a } = e,
            l = (0, eN.useUsernameHook)({
              user: t.author,
              channelId: n.id,
              guildId: n.guild_id,
              messageId: t.id,
            });
          return (0, s.jsx)(ei.default, {
            message: t,
            compact: a,
            usernameHook: l,
          });
        },
        [ep.MessageTypes.GUILD_APPLICATION_PREMIUM_SUBSCRIPTION]: A.default,
        [ep.MessageTypes.PRIVATE_CHANNEL_INTEGRATION_ADDED]:
          h.PrivateChannelIntegrationAddedSystemMessage,
        [ep.MessageTypes.PRIVATE_CHANNEL_INTEGRATION_REMOVED]:
          h.PrivateChannelIntegrationRemovedSystemMessage,
        [ep.MessageTypes.PREMIUM_REFERRAL]: void 0,
        [ep.MessageTypes.GUILD_DEADCHAT_REVIVE_PROMPT]: function (e) {
          let { message: t, channel: n, compact: a } = e;
          return (0, s.jsx)(f.default, { message: t, channel: n, compact: a });
        },
        [ep.MessageTypes.CUSTOM_GIFT]: void 0,
        [ep.MessageTypes.GUILD_GAMING_STATS_PROMPT]: function (e) {
          let { message: t, channel: n, compact: a } = e;
          return (0, s.jsx)(E.default, { message: t, channel: n, compact: a });
        },
        [ep.MessageTypes.VOICE_HANGOUT_INVITE]: void 0,
      });
      var eO = a.memo(function (e) {
        let { message: t, channel: n, compact: a } = e,
          { type: l } = t,
          i = eM[l];
        if (null == i) {
          var r;
          return (
            (r = Error("unknown message type ".concat(t.type))),
            eT.default.captureException(r),
            new (0, _.default)("SystemMessage").error("", r),
            null
          );
        }
        return (0, s.jsx)(w.default, {
          message: t,
          content: (0, em.default)(t).content,
          children: (0, s.jsx)(i, { message: t, channel: n, compact: a }),
        });
      });
    },
    909917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("246060"),
        r = n("730541"),
        o = n("407972"),
        u = n("981601"),
        d = n("42203"),
        c = n("25116");
      function E(e, t) {
        if ((0, r.isPublicSystemMessage)(t)) return (0, s.jsx)(o.default, {});
        if ((0, c.default)(t)) {
          let {
            guild_id: e,
            channel_id: n,
            message_id: a,
          } = t.messageReference;
          if (null != e)
            return (0, s.jsx)(i.default, {
              guildId: e,
              channelId: n,
              messageId: a,
            });
        }
        if (null != t.interaction && "SENDING" === t.state)
          return (0, s.jsx)(s.Fragment, {});
        let n = d.default.getChannel(t.channel_id);
        return (
          l(null != n, "renderUserGuildPopout: channel should never be null"),
          (0, s.jsx)(u.default, {
            ...e,
            channelId: t.channel_id,
            messageId: t.id,
            guildId: n.guild_id,
            userId: t.author.id,
            user: null != t.webhookId ? t.author : void 0,
          })
        );
      }
    },
    380986: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useClickMessageAuthorUsername: function () {
            return O;
          },
          useClickReferencedMessageAuthorUsername: function () {
            return R;
          },
          useClickInteractionUserUsername: function () {
            return L;
          },
          useClickMessageAuthorAvatar: function () {
            return P;
          },
          useClickReferencedMessageAuthorAvatar: function () {
            return D;
          },
          useClickInteractionUserAvatar: function () {
            return x;
          },
          useContextMenuMessage: function () {
            return y;
          },
          useContextMenuUser: function () {
            return U;
          },
          useContextMenuModerateUser: function () {
            return j;
          },
          useContextMenuRaidAlert: function () {
            return b;
          },
          useClickMessage: function () {
            return G;
          },
          useHoveredMessage: function () {
            return B;
          },
          useFocusInside: function () {
            return k;
          },
          useClickReply: function () {
            return F;
          },
          useClickInteractionCommandName: function () {
            return w;
          },
        }),
        n("702976"),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("404118"),
        i = n("272030"),
        r = n("819689"),
        o = n("352674"),
        u = n("244201"),
        d = n("42203"),
        c = n("836417"),
        E = n("377253"),
        f = n("697218"),
        _ = n("659500"),
        T = n("791776"),
        I = n("568734"),
        m = n("773336"),
        N = n("158998"),
        p = n("441823"),
        S = n("913491"),
        C = n("456936"),
        A = n("49111"),
        h = n("782340");
      function g(e, t, n) {
        return a.useCallback(() => {
          n({ [e]: !t });
        }, [e, n, t]);
      }
      function M(e, t, n) {
        return a.useCallback(
          s => {
            let a = f.default.getUser(e);
            if (null == a) return;
            if ((s.preventDefault(), s.stopPropagation(), !s.shiftKey)) {
              n();
              return;
            }
            let l = "@".concat(
                N.default.getUserTag(a, { decoration: "never" })
              ),
              i = "<@".concat(e, ">");
            _.ComponentDispatch.dispatchToLastSubscribed(
              A.ComponentActions.INSERT_TEXT,
              { plainText: l, rawText: i }
            ),
              o.default.startTyping(t);
          },
          [e, t, n]
        );
      }
      function O(e, t, n, s) {
        let a = g("usernameProfile", n, s);
        return M(e.author.id, t.id, a);
      }
      function R(e, t, n, s) {
        let a = g("referencedUsernameProfile", n, s);
        return M(null == e ? void 0 : e.author.id, t.id, a);
      }
      function L(e, t, n, s) {
        let a = g("interactionUsernameProfile", n, s);
        return M(null == e ? void 0 : e.user.id, t.id, a);
      }
      function v(e) {
        return a.useCallback(
          t => {
            t.preventDefault(), t.stopPropagation(), e();
          },
          [e]
        );
      }
      function P(e, t) {
        let n = g("avatarProfile", e, t);
        return v(n);
      }
      function D(e, t) {
        let n = g("referencedAvatarProfile", e, t);
        return v(n);
      }
      function x(e, t) {
        let n = g("interactionAvatarProfile", e, t);
        return v(n);
      }
      function y(e, t, l, r) {
        let { id: o } = t,
          { id: f, flags: _ } = e,
          T = (0, I.hasFlag)(_, A.MessageFlags.EPHEMERAL),
          N = (0, S.default)(e),
          p = (0, u.useAppContext)();
        return a.useCallback(
          (e, t) => {
            if (T) return;
            if (!m.isPlatformEmbedded) {
              let t = e.target;
              if (
                ("A" === t.tagName && "" !== t.textContent) ||
                null == window.getSelection
              )
                return;
              let n = window.getSelection();
              if (
                null != n &&
                !n.isCollapsed &&
                (n.focusNode === e.target || t.contains(n.focusNode))
              )
                return;
            }
            let a = d.default.getChannel(o),
              u = E.default.getMessage(o, f),
              _ = c.default.isEditing(o, f);
            null != a &&
              null != u &&
              !_ &&
              (l({ contextMenu: !0 }),
              (0, i.openContextMenuLazy)(
                e,
                async () => {
                  if (N) {
                    let { default: e } = await n
                      .el("385065")
                      .then(n.bind(n, "385065"));
                    return n =>
                      (0, s.jsx)(e, {
                        ...n,
                        message: u,
                        channel: a,
                        attachment: t,
                      });
                  }
                  {
                    let { default: e } = await n
                      .el("261649")
                      .then(n.bind(n, "261649"));
                    return n =>
                      (0, s.jsx)(e, {
                        ...n,
                        message: u,
                        channel: a,
                        attachment: t,
                        shouldHideMediaOptions: r,
                      });
                  }
                },
                { onClose: () => l({ contextMenu: !1 }), context: p }
              ));
          },
          [T, o, f, l, p, N, r]
        );
      }
      function U(e, t) {
        return a.useCallback(
          n => {
            let s = f.default.getUser(e),
              a = d.default.getChannel(t);
            null != s &&
              null != a &&
              (n.stopPropagation(), (0, p.openUserContextMenu)(n, s, a));
          },
          [e, t]
        );
      }
      function j(e, t, n) {
        return a.useCallback(
          s => {
            let a = f.default.getUser(e),
              l = d.default.getChannel(t);
            null != a &&
              null != l &&
              (s.stopPropagation(),
              (0, p.openModerateUserContextMenu)(s, {
                user: a,
                channel: l,
                moderationAlertId: n,
              }));
          },
          [e, t, n]
        );
      }
      function b(e, t) {
        return a.useCallback(
          n => {
            let s = f.default.getUser(e),
              a = d.default.getChannel(t);
            null != s &&
              null != a &&
              (n.stopPropagation(),
              (0, p.openModerationRaidContextMenu)(n, s, a.guild_id));
          },
          [e, t]
        );
      }
      function G(e, t) {
        let { id: n } = e,
          { id: s } = t;
        return a.useCallback(
          e => {
            e.altKey && (e.preventDefault(), (0, C.default)(s, n));
          },
          [s, n]
        );
      }
      function B(e, t, n) {
        let s = "".concat(e, ":").concat(t),
          l = a.useRef(n),
          [i, r] = a.useState(n);
        l.current = i || l.current;
        let o = a.useCallback(() => {
            !i &&
              (_.ComponentDispatch.dispatchKeyed(
                A.ComponentActionsKeyed.ANIMATE_CHAT_AVATAR,
                s,
                !0
              ),
              r(!0));
          }, [i, s]),
          u = a.useCallback(() => {
            _.ComponentDispatch.dispatchKeyed(
              A.ComponentActionsKeyed.ANIMATE_CHAT_AVATAR,
              s,
              !1
            ),
              r(!1);
          }, [s]);
        return {
          hasHovered: l.current,
          isHovered: i,
          handleMouseEnter: o,
          handleMouseLeave: u,
        };
      }
      function k(e, t) {
        let [n, s] = a.useState(!1),
          [l, i] = a.useState(!1),
          r = a.useCallback(
            t => {
              var n, a;
              let l =
                null !==
                  (a =
                    null === (n = (0, T.eventOwnerDocument)(t)) || void 0 === n
                      ? void 0
                      : n.activeElement) && void 0 !== a
                  ? a
                  : null;
              (t.target === t.currentTarget || t.currentTarget.contains(l)) &&
                (i(!0), s(!0)),
                null != e && e(t);
            },
            [e]
          ),
          o = a.useCallback(
            e => {
              var n, a;
              let l =
                null !==
                  (a =
                    null === (n = (0, T.eventOwnerDocument)(e)) || void 0 === n
                      ? void 0
                      : n.activeElement) && void 0 !== a
                  ? a
                  : null;
              (e.target === e.currentTarget || !e.currentTarget.contains(l)) &&
                s(!1),
                null != t && t(e);
            },
            [t]
          );
        return { handleFocus: r, handleBlur: o, isFocused: n, hasFocused: l };
      }
      function F(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return a.useCallback(() => {
          null != t &&
            (n
              ? l.default.show({
                  title: h.default.Messages.UNBLOCK_TO_JUMP_TITLE,
                  body: h.default.Messages.UNBLOCK_TO_JUMP_BODY.format({
                    name: t.author.username,
                  }),
                  confirmText: h.default.Messages.OKAY,
                })
              : r.default.jumpToMessage({
                  channelId: t.channel_id,
                  messageId: t.id,
                  flash: !0,
                  returnMessageId: e.id,
                }));
        }, [n, e.id, t]);
      }
      function w(e, t) {
        let n = g("interactionData", e, t);
        return a.useCallback(
          e => {
            e.preventDefault(), e.stopPropagation(), n();
          },
          [n]
        );
      }
    },
    969706: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var s = n("884691"),
        a = n("659500"),
        l = n("49111");
      function i(e) {
        return Object.keys(e).some(t => e[t]);
      }
      function r(e, t) {
        let [n, r] = s.useState(t),
          [o, u] = s.useState(i(n)),
          d = s.useRef(o),
          c = s.useRef(null),
          E = s.useCallback(e => {
            r(t => {
              let n = { ...t, ...e },
                s = i(n);
              return (
                s !== d.current &&
                  ((d.current = s),
                  null != c.current &&
                    (cancelAnimationFrame(c.current), (c.current = null)),
                  s ? u(!0) : (c.current = requestAnimationFrame(() => u(!1)))),
                n
              );
            });
          }, []);
        return (
          s.useEffect(() => {
            let t = e => {
              let { emojiPicker: t, emojiBurstPicker: n } = e;
              return E({ emojiPicker: t, emojiBurstPicker: n });
            };
            return (
              a.ComponentDispatch.subscribeKeyed(
                l.ComponentActionsKeyed.TOGGLE_REACTION_POPOUT,
                e,
                t
              ),
              () =>
                void a.ComponentDispatch.unsubscribeKeyed(
                  l.ComponentActionsKeyed.TOGGLE_REACTION_POPOUT,
                  e,
                  t
                )
            );
          }, [e, E]),
          { popouts: n, setPopout: E, selected: o }
        );
      }
    },
    68480: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("884691"),
        a = n("298386"),
        l = n("446674"),
        i = n("811425"),
        r = n("305961"),
        o = n("333363"),
        u = n("596512"),
        d = n("49111");
      function c(e) {
        var t, n;
        let { message: c, channel: E, enabled: f = !0 } = e,
          _ = (0, l.useStateFromStores)(
            [r.default],
            () => {
              var e;
              let t = r.default.getGuild(E.guild_id);
              return (
                null !==
                  (e =
                    null == t
                      ? void 0
                      : t.hasFeature(d.GuildFeatures.COMMUNITY)) &&
                void 0 !== e &&
                e
              );
            },
            [E.guild_id]
          ),
          T =
            (null === (t = c.messageReference) || void 0 === t
              ? void 0
              : t.guild_id) != null &&
            null != c.webhookId &&
            c.hasFlag(d.MessageFlags.IS_CROSSPOST) &&
            null != E.guild_id,
          I = E.type === a.ChannelTypes.GUILD_ANNOUNCEMENT && _,
          m = !c.hasFlag(d.MessageFlags.EPHEMERAL) && (T || I),
          N =
            T && null != c.messageReference
              ? c.messageReference.message_id
              : c.id,
          p =
            T && null != c.messageReference
              ? c.messageReference.channel_id
              : E.id,
          S =
            T &&
            (null === (n = c.messageReference) || void 0 === n
              ? void 0
              : n.guild_id) != null
              ? c.messageReference.guild_id
              : E.guild_id,
          C = s.useCallback(
            e => {
              e
                ? u.default.handleMessageBecameVisible({
                    messageId: N,
                    channelId: E.id,
                    guildId: E.guild_id,
                    sourceChannelId: p,
                    sourceGuildId: S,
                  })
                : u.default.handleMessageLostVisibility(N);
            },
            [N, E.id, E.guild_id, p, S]
          ),
          A = o.default.useExperiment(
            { location: "836a4b_1" },
            { disable: !m || !f, autoTrackExposure: !0 }
          ).enabled,
          h = (0, i.useIsVisible)(C, 0, A);
        return (
          s.useEffect(
            () => () => {
              u.default.handleMessageLostVisibility(N);
            },
            [N]
          ),
          h
        );
      }
    },
    430625: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return k;
          },
        }),
        n("424973"),
        n("222007"),
        n("881410");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("446674"),
        d = n("769846"),
        c = n("77078"),
        E = n("970728"),
        f = n("191225"),
        _ = n("969380"),
        T = n("817039"),
        I = n("812204"),
        m = n("685665"),
        N = n("442939"),
        p = n("419830"),
        S = n("813006"),
        C = n("42203"),
        A = n("305961"),
        h = n("957255"),
        g = n("697218"),
        M = n("174622"),
        O = n("98292"),
        R = n("811305"),
        L = n("159885"),
        v = n("793079"),
        P = n("49111"),
        D = n("91366"),
        x = n("782340"),
        y = n("257752");
      let U = (0, L.cssValueToNumber)(
          d.default.EMBEDDED_APPLICATION_INVITE_IMAGE_WIDTH_LARGE
        ),
        j = (0, L.cssValueToNumber)(
          d.default.EMBEDDED_APPLICATION_INVITE_IMAGE_WIDTH_SMALL
        ),
        b = (0, L.cssValueToNumber)(
          d.default.EMBEDDED_APPLICATION_INVITE_CONTENT_WIDTH
        );
      function G(e) {
        let { members: t, membersOnline: n, isLarge: a, isStacked: l } = e,
          r = [];
        return (
          null != n &&
            n > 0 &&
            r.push(
              (0, s.jsxs)(
                "div",
                {
                  className: y.statusWrapper,
                  children: [
                    (0, s.jsx)("i", { className: y.statusOnline }),
                    (0, s.jsx)(c.Text, {
                      variant: "text-xs/normal",
                      className: y.count,
                      children:
                        x.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format(
                          { membersOnline: n }
                        ),
                    }),
                  ],
                },
                "onlineCount"
              )
            ),
          null != t &&
            r.push(
              (0, s.jsxs)(
                "div",
                {
                  className: y.statusWrapper,
                  children: [
                    (0, s.jsx)("i", { className: y.statusOffline }),
                    (0, s.jsx)(c.Text, {
                      variant: "text-xs/normal",
                      className: y.count,
                      children:
                        x.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format(
                          { count: t }
                        ),
                    }),
                  ],
                },
                "memberCount"
              )
            ),
          (0, s.jsx)("div", {
            className: i(y.statusCounts, { [y.large]: a, [y.stacked]: l }),
            children: r,
          })
        );
      }
      function B(e) {
        let { channel: t, guild: n, isStacked: a, hasEnded: l } = e;
        if (null != t && null != n) {
          let e = (0, p.getChannelIconComponent)(t, n);
          return (0, s.jsxs)("div", {
            className: i(y.channel, { [y.stacked]: a, [y.ended]: l }),
            children: [
              null != e
                ? (0, s.jsx)(e, {
                    className: y.channelIcon,
                    width: 16,
                    height: 16,
                  })
                : null,
              (0, s.jsx)(O.default, {
                children: (0, s.jsx)(c.Text, {
                  variant: "text-xs/normal",
                  children:
                    x.default.Messages.EMBEDDED_ACTIVITIES_INVITE_CHANNEL_IN_SERVER.format(
                      { channelName: t.name, serverName: n.name }
                    ),
                }),
              }),
            ],
          });
        }
        return null != n
          ? (0, s.jsx)("div", {
              className: i(y.channel, { [y.stacked]: a, [y.ended]: l }),
              children: (0, s.jsx)(O.default, {
                children: (0, s.jsx)(c.Text, {
                  variant: "text-xs/normal",
                  children:
                    x.default.Messages.INVITE_BUTTON_STREAMING_SUBTEXT.format({
                      guildName: n.name,
                    }),
                }),
              }),
            })
          : null;
      }
      function k(e) {
        var t, n;
        let l,
          r,
          { invite: d, getAcceptInviteContext: p } = e,
          {
            approximate_member_count: O,
            approximate_presence_count: L,
            target_type: k,
            target_application: F,
          } = d;
        o(
          k === D.InviteTargetTypes.EMBEDDED_APPLICATION && null != F,
          "invalid application invite"
        );
        let w = a.useRef(null),
          [H, V] = a.useState(!1),
          [Y, K] = a.useState(!1);
        a.useEffect(() => {
          let e = new ResizeObserver(() =>
              (function () {
                var e;
                let t =
                  null === (e = w.current) || void 0 === e
                    ? void 0
                    : e.offsetWidth;
                null != t && (V(t < b + j), K(t <= 2 * U));
              })()
            ),
            t = w.current;
          return (
            null != t && e.observe(t),
            () => {
              e.disconnect();
            }
          );
        }, [w, V, K]);
        let W = (0, u.useStateFromStores)(
            [A.default],
            () => (null != d.guild ? A.default.getGuild(d.guild.id) : null),
            [d]
          ),
          z = (0, N.default)([F.id])[0],
          Q = (0, u.useStateFromStores)([f.default], () => {
            var e;
            return (
              (null == d ? void 0 : d.channel) != null &&
              (null ===
                (e = f.default.getSelfEmbeddedActivityForChannel(
                  d.channel.id
                )) || void 0 === e
                ? void 0
                : e.applicationId) === F.id
            );
          }),
          Z = (0, u.useStateFromStores)([f.default], () => {
            var e;
            let t =
              (null === (e = d.channel) || void 0 === e ? void 0 : e.id) != null
                ? f.default.getEmbeddedActivitiesForChannel(d.channel.id)
                : [];
            return t.some(e => {
              let { applicationId: t } = e;
              return F.id === t;
            });
          }),
          J = C.default.getChannel(
            null === (t = d.channel) || void 0 === t ? void 0 : t.id
          ),
          q = (0, u.useStateFromStores)(
            [h.default],
            () =>
              null != J &&
              h.default.can(P.Permissions.USE_EMBEDDED_ACTIVITIES, J),
            [J]
          ),
          { analyticsLocations: X } = (0, m.default)(I.default.INVITE_EMBED),
          $ = (0, _.default)({ applicationId: F.id, size: U }),
          ee = (0, u.useStateFromStoresArray)(
            [f.default],
            () =>
              null != J
                ? f.default
                    .getEmbeddedActivitiesForChannel(J.id)
                    .filter(e => e.applicationId === F.id)
                    .flatMap(e => Array.from(e.userIds))
                : [],
            [J, F.id]
          ),
          et = (0, u.useStateFromStoresArray)(
            [g.default],
            () => ee.map(e => g.default.getUser(e)),
            [ee]
          ),
          en = d.state === P.InviteStates.ACCEPTING,
          es = null != W;
        if (null == W) {
          if (null == d.guild) return (0, s.jsx)(v.default, {});
          W = new S.default(d.guild);
        }
        let ea = (es && !q) || (es && Q),
          el = () => {
            E.default.acceptInviteAndTransitionToInviteChannel({
              inviteKey: d.code,
              context: p("Invite Button Embed"),
              analyticsLocations: X,
            });
          };
        return (es &&
          Q &&
          (l = x.default.Messages.EMBEDDED_ACTIVITIES_ALREADY_IN_ACTIVITY),
        !q && (l = x.default.Messages.EMBEDDED_ACTIVITIES_INVALID_PERMISSIONS),
        (r = Q
          ? x.default.Messages.INVITE_EMBED_JOINED
          : Z || !es
            ? x.default.Messages.JOIN
            : x.default.Messages.START),
        null == d.code || "" === d.code)
          ? null
          : (0, s.jsxs)("div", {
              className: y.container,
              ref: w,
              children: [
                (0, s.jsx)("div", {
                  className: i(y.imgContainer, {
                    [y.large]: H,
                    [y.stacked]: Y,
                  }),
                  children: (0, s.jsx)(T.default, {
                    imageBackground: $,
                    applicationName:
                      null !== (n = null == z ? void 0 : z.name) && void 0 !== n
                        ? n
                        : "",
                    imageClassName: i(y.img, { [y.large]: H, [y.stacked]: Y }),
                    imageNotFoundClassName: i(y.brokenImg, {
                      [y.large]: H,
                      [y.stacked]: Y,
                    }),
                  }),
                }),
                (0, s.jsxs)(M.default, {
                  className: i(y.content, { [y.large]: H, [y.stacked]: Y }),
                  children: [
                    (0, s.jsxs)("div", {
                      className: y.info,
                      children: [
                        (0, s.jsx)(c.FormTitle, {
                          children: es
                            ? x.default.Messages
                                .EMBEDDED_ACTIVITIES_EMBED_TITLE_INVITED_TO_JOIN
                            : x.default.Messages.INVITE_BUTTON_TITLE_INVITED,
                        }),
                        (0, s.jsx)(c.Heading, {
                          className: y.heading,
                          variant: "heading-xl/semibold",
                          children: null == z ? void 0 : z.name,
                        }),
                        (0, s.jsx)(B, {
                          channel: J,
                          guild: W,
                          isStacked: Y,
                          hasEnded: !Z,
                        }),
                      ],
                    }),
                    (0, s.jsxs)("div", {
                      className: i(y.currentState, {
                        [y.large]: H,
                        [y.split]: !Z && Y,
                      }),
                      children: [
                        !Z && es
                          ? (0, s.jsxs)("div", {
                              className: i(y.endedNote, { [y.large]: H }),
                              children: [
                                (0, s.jsx)(c.Text, {
                                  variant: "text-xs/medium",
                                  children:
                                    x.default.Messages
                                      .EMBEDDED_ACTIVITIES_EMBED_ENDED,
                                }),
                                (0, s.jsx)(c.Text, {
                                  variant: "text-xs/medium",
                                  children:
                                    x.default.Messages
                                      .EMBEDDED_ACTIVITIES_EMBED_START,
                                }),
                              ],
                            })
                          : null,
                        es
                          ? null
                          : (0, s.jsx)(G, {
                              members: O,
                              membersOnline: L,
                              isLarge: H,
                              isStacked: Y,
                            }),
                        (0, s.jsxs)("div", {
                          className: y.cta,
                          children: [
                            null != W && Z
                              ? (0, s.jsx)("div", {
                                  className: y.avatars,
                                  children: (0, s.jsx)(R.default, {
                                    guildId: W.id,
                                    users: et,
                                    max: 4,
                                  }),
                                })
                              : null,
                            (0, s.jsx)(c.Tooltip, {
                              text: l,
                              children: e => {
                                let { onClick: t, ...n } = e;
                                return (0, s.jsx)(c.Button, {
                                  className: y.actionButton,
                                  onClick: () => {
                                    el(), null == t || t();
                                  },
                                  wrapperClassName: y.tooltipButtonWrapper,
                                  ...n,
                                  submitting: en,
                                  disabled: ea,
                                  color: c.ButtonColors.GREEN,
                                  children: r,
                                });
                              },
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            });
      }
    },
    740589: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("271938"),
        i = n("174622"),
        r = n("883029"),
        o = n("782340");
      function u(e) {
        var t, n;
        let { author: u, inviteError: d } = e,
          c = (0, a.useStateFromStores)([l.default], () => l.default.getId()),
          E = c === u.id,
          f = E
            ? o.default.Messages.INVITE_BUTTON_TITLE_INVITER_INVALID
            : o.default.Messages.INVITE_BUTTON_TITLE_INVITED_INVALID,
          _ = (0, r.getDescriptiveInviteError)(null == d ? void 0 : d.code);
        return (0, s.jsxs)(i.default, {
          children: [
            (0, s.jsx)(i.default.Header, { text: f }),
            (0, s.jsxs)(i.default.Body, {
              children: [
                (0, s.jsx)(i.default.Icon, { expired: !0 }),
                (0, s.jsx)(i.default.Info, {
                  expired: !0,
                  title:
                    null !== (t = null == _ ? void 0 : _.title) && void 0 !== t
                      ? t
                      : o.default.Messages.INVITE_BUTTON_INVALID,
                  children:
                    null !== (n = null == _ ? void 0 : _.description) &&
                    void 0 !== n
                      ? n
                      : null == d
                        ? void 0
                        : d.message,
                }),
              ],
            }),
          ],
        });
      }
    },
    472315: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("450911"),
        r = n("970728"),
        o = n("766274"),
        u = n("271938"),
        d = n("42203"),
        c = n("27618"),
        E = n("174622"),
        f = n("158998"),
        _ = n("49111"),
        T = n("782340"),
        I = n("599541");
      function m(e) {
        var t;
        let { invite: n, getAcceptInviteContext: m } = e,
          N = (0, l.useStateFromStores)([u.default], () => u.default.getId()),
          p = (null === (t = n.inviter) || void 0 === t ? void 0 : t.id) === N,
          S = n.state === _.InviteStates.ACCEPTING,
          C = (0, l.useStateFromStores)([c.default], () => {
            var e;
            return (
              null != n.inviter &&
              c.default.isFriend(
                null === (e = n.inviter) || void 0 === e ? void 0 : e.id
              )
            );
          }),
          A = a.useCallback(() => {
            if (null != n.inviter) {
              let e = d.default.getDMFromUserId(n.inviter.id);
              null != e && i.default.openPrivateChannel([n.inviter.id]);
            }
          }, [n.inviter]),
          h = a.useCallback(() => {
            let e = m("Invite Button Embed");
            r.default.acceptInviteAndTransitionToInviteChannel({
              inviteKey: n.code,
              context: e,
            });
          }, [n.code, m]);
        if (null == n.inviter) return null;
        let g = C ? A : h,
          M = T.default.Messages.INVITE_BUTTON_ADD_FRIEND,
          O = E.default.Button.Colors.GREEN;
        C
          ? ((M = T.default.Messages.INVITE_BUTTON_ALREADY_FRIENDS),
            (O = E.default.Button.Colors.PRIMARY))
          : p &&
            ((M = T.default.Messages.INVITE_BUTTON_ADD_FRIEND),
            (O = E.default.Button.Colors.PRIMARY));
        let R = p
            ? T.default.Messages.INVITE_BUTTON_TITLE_INVITER_FRIEND
            : T.default.Messages.INVITE_BUTTON_TITLE_INVITED_FRIEND,
          L = null != n.inviter ? "".concat(n.inviter.username) : "",
          v = null != n.inviter ? f.default.getUserTag(n.inviter) : "";
        return (0, s.jsxs)(E.default, {
          children: [
            (0, s.jsx)(E.default.Header, { text: R }),
            (0, s.jsxs)(E.default.Body, {
              children: [
                (0, s.jsxs)("div", {
                  className: I.headerLine,
                  children: [
                    (0, s.jsx)(E.default.Icon, {
                      user: new o.default(n.inviter),
                      onClick: C ? g : void 0,
                    }),
                    (0, s.jsx)(E.default.Info, {
                      title: L,
                      onClick: C ? g : void 0,
                      children: v,
                    }),
                  ],
                }),
                (0, s.jsx)(E.default.Button, {
                  onClick: g,
                  submitting: S,
                  isDisabled: p,
                  color: O,
                  children: M,
                }),
              ],
            }),
          ],
        });
      }
    },
    783940: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("808653"),
        n("424973");
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("446674"),
        r = n("233069"),
        o = n("42203"),
        u = n("697218"),
        d = n("174622"),
        c = n("449008"),
        E = n("793079"),
        f = n("49111"),
        _ = n("782340"),
        T = n("599541");
      function I(e) {
        let t,
          {
            invite: n,
            author: a,
            currentUserId: I,
            onTransitionToInviteChannel: m,
            onAcceptInstantInvite: N,
          } = e,
          p = I === a.id,
          S = n.state === f.InviteStates.ACCEPTING,
          C = (0, i.useStateFromStores)(
            [o.default],
            () =>
              null != n.channel ? o.default.getChannel(n.channel.id) : null,
            [n]
          );
        l(null == C || C.isPrivate(), "must be a private channel");
        let A = null != C;
        if (null == C) {
          if (null == n.channel) return (0, s.jsx)(E.default, {});
          (C = (0, r.createChannelRecordFromInvite)(n.channel)),
            (t =
              null != n.channel && null != n.channel.recipients
                ? n.channel.recipients
                : []);
        } else {
          t = C.recipients.reduce((e, t) => {
            let n = u.default.getUser(t);
            return null != n && e.push(n), e;
          }, []);
          let e = u.default.getCurrentUser();
          A && null != e && t.push(e);
        }
        let h = C.name;
        (null == h || "" === h) &&
          (h =
            t.length > 0
              ? t
                  .filter(c.isNotNullish)
                  .map(e => e.username)
                  .join(", ")
              : _.default.Messages.UNNAMED);
        let g = A ? m : N,
          M = _.default.Messages.JOIN_GUILD,
          O = d.default.Button.Colors.GREEN;
        A &&
          ((M = _.default.Messages.JOINED_GUILD),
          (O = d.default.Button.Colors.PRIMARY));
        let R = _.default.Messages.INVITE_BUTTON_TITLE_INVITED_GROUP_DM;
        return (
          p && (R = _.default.Messages.INVITE_BUTTON_TITLE_INVITER_GROUP_DM),
          (0, s.jsxs)(d.default, {
            children: [
              (0, s.jsx)(d.default.Header, { text: R }),
              (0, s.jsxs)(d.default.Body, {
                children: [
                  (0, s.jsxs)("div", {
                    className: T.headerLine,
                    children: [
                      (0, s.jsx)(d.default.Icon, {
                        channel: C,
                        onClick: A ? g : void 0,
                      }),
                      (0, s.jsx)(d.default.Info, {
                        title: h,
                        onClick: A ? g : void 0,
                        children: (0, s.jsx)(d.default.Data, {
                          members: t.length,
                        }),
                      }),
                    ],
                  }),
                  (0, s.jsx)(d.default.Button, {
                    onClick: g,
                    submitting: S,
                    isDisabled: A,
                    color: O,
                    children: M,
                  }),
                ],
              }),
            ],
          })
        );
      }
    },
    530078: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("702976");
      var s = n("37983");
      n("884691");
      var a = n("498574"),
        l = n("77078"),
        i = n("974755"),
        r = n("233069"),
        o = n("174622"),
        u = n("266926"),
        d = n("568734"),
        c = n("427459"),
        E = n("665618"),
        f = n("605953"),
        _ = n("793079"),
        T = n("49111"),
        I = n("782340"),
        m = n("599541");
      function N(e) {
        var t, N;
        let p,
          S,
          C,
          {
            onTransitionToInviteChannel: A,
            onAcceptInstantInvite: h,
            guild: g,
            invite: M,
            author: O,
            currentUserId: R,
          } = e,
          L = R === O.id,
          {
            channel: v,
            approximate_member_count: P,
            approximate_presence_count: D,
          } = M,
          x = M.state === T.InviteStates.ACCEPTING,
          y = null != v ? (0, r.createChannelRecordFromInvite)(v) : null,
          U = null != g,
          j = null != y,
          b = null != y && y.isGuildVocal(),
          G = null != y && y.isGuildStageVoice(),
          B = (0, d.hasFlag)(
            null !== (t = M.flags) && void 0 !== t ? t : 0,
            a.GuildInviteFlags.IS_GUEST_INVITE
          ),
          k =
            null !==
              (N = null == g ? void 0 : g.hasFeature(T.GuildFeatures.HUB)) &&
            void 0 !== N &&
            N;
        if (null == g) {
          if (null == M.guild) return (0, s.jsx)(_.default, {});
          g = E.fromInviteGuild(M.guild);
          let e = (0, c.getGuildTierFromAppliedBoostCount)(
            M.guild.premium_subscription_count,
            M.guild.id
          );
          g.premiumTier = e;
        }
        let F = U ? A : h,
          w = (0, f.getHeaderTextForInvite)({
            isVoiceChannel: b,
            isOwnInvite: L,
            isGuest: B,
            isHubGuild: k,
            isStage: G,
            isStream: !1,
          });
        return (
          (S = (0, s.jsxs)("span", {
            className: m.infoTitle,
            children: [
              (0, s.jsx)(o.default.GuildName, { guild: g }),
              (0, s.jsx)("span", {
                className: m.infoBadge,
                children: (0, s.jsx)(i.default, {
                  guild: g,
                  isBannerVisible: !1,
                  disableBoostClick: !0,
                }),
              }),
            ],
          })),
          B &&
            (C = (0, s.jsx)(l.TooltipContainer, {
              className: m.tooltipContainer,
              text: I.default.Messages.GUEST_MEMBERSHIP_EXPLANATION,
              children: (0, s.jsx)(u.default, { className: m.infoIcon }),
            })),
          b
            ? ((S = (0, s.jsx)(o.default.Channel, { channel: y })),
              (p = (0, s.jsxs)("span", {
                className: m.infoTitle,
                children: [
                  I.default.Messages.INVITE_BUTTON_BODY_IN_GUILD.format({
                    guildName: g.name,
                  }),
                  (0, s.jsx)("span", {
                    className: m.infoBadge,
                    children: (0, s.jsx)(i.default, {
                      guild: g,
                      isBannerVisible: !1,
                    }),
                  }),
                ],
              })))
            : (null != P && P >= 5) || (null != D && D > 0)
              ? (p = (0, s.jsx)(o.default.Data, {
                  members: P,
                  membersOnline: D,
                }))
              : j &&
                (p = (0, s.jsx)(o.default.Channel, { channel: y, guild: g })),
          (0, s.jsxs)(o.default, {
            children: [
              (0, s.jsx)(o.default.GuildSplash, { guild: g }),
              (0, s.jsx)(o.default.Header, { text: w, extra: C }),
              (0, s.jsxs)(o.default.Body, {
                children: [
                  (0, s.jsxs)("div", {
                    className: m.headerLine,
                    children: [
                      (0, s.jsx)(o.default.Icon, { guild: g }),
                      (0, s.jsx)(o.default.Info, {
                        title: S,
                        onClick: U ? F : null,
                        children: p,
                      }),
                    ],
                  }),
                  (0, s.jsx)(o.default.Button, {
                    onClick: F,
                    submitting: x,
                    color: o.default.Button.Colors.GREEN,
                    children: b
                      ? G
                        ? I.default.Messages.STAGE_CHANNEL_JOIN
                        : I.default.Messages.INVITE_VOICE_CHANNEL_JOIN
                      : U
                        ? I.default.Messages.JOINED_GUILD
                        : I.default.Messages.JOIN_GUILD,
                  }),
                ],
              }),
              g.hasFeature(T.GuildFeatures.HUB) &&
                (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)("div", { className: m.separator }),
                    (0, s.jsx)(l.Text, {
                      variant: "text-sm/normal",
                      color: "header-secondary",
                      children:
                        I.default.Messages.HUB_INVITE_ANOTHER_SCHOOL_LINK.format(
                          {
                            onClick: () =>
                              (0, l.openModalLazy)(async () => {
                                let { default: e } = await n
                                  .el("927475")
                                  .then(n.bind(n, "927475"));
                                return t => (0, s.jsx)(e, { ...t });
                              }),
                          }
                        ),
                    }),
                  ],
                }),
            ],
          })
        );
      }
    },
    649112: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("352674"),
        i = n("271938"),
        r = n("18494"),
        o = n("174622"),
        u = n("659500"),
        d = n("158998"),
        c = n("49111"),
        E = n("782340"),
        f = n("599541");
      function _(e) {
        let t,
          n,
          _,
          { author: T, banned: I } = e,
          m = (0, a.useStateFromStores)([i.default], () => i.default.getId()),
          N = (0, a.useStateFromStores)([r.default], () =>
            r.default.getChannelId()
          ),
          p = d.default.useName(T),
          S = m === T.id;
        return (
          S
            ? ((t = E.default.Messages.INVITE_BUTTON_INVALID_OWNER),
              (_ = E.default.Messages.INVITE_BUTTON_TITLE_INVITER_INVALID))
            : ((_ = E.default.Messages.INVITE_BUTTON_TITLE_INVITED_INVALID),
              I
                ? (t = E.default.Messages.INSTANT_INVITE_BANNED_INFO)
                : null != p
                  ? ((t =
                      E.default.Messages.INSTANT_INVITE_ASK_USER_FOR_NEW_INVITE.format(
                        { username: p }
                      )),
                    (n = (0, s.jsx)(o.default.Button, {
                      onClick: function () {
                        let { id: e } = T,
                          t = "@".concat(
                            d.default.getUserTag(T, { decoration: "never" })
                          );
                        u.ComponentDispatch.dispatchToLastSubscribed(
                          c.ComponentActions.INSERT_TEXT,
                          { plainText: t, rawText: "<@".concat(e, ">") }
                        ),
                          null != N && l.default.startTyping(N);
                      },
                      children: E.default.Messages.MENTION,
                    })))
                  : (t = E.default.Messages.INSTANT_INVITE_ASK_FOR_NEW_INVITE)),
          (0, s.jsxs)(o.default, {
            children: [
              (0, s.jsx)(o.default.Header, { text: _ }),
              (0, s.jsxs)(o.default.Body, {
                children: [
                  (0, s.jsxs)("div", {
                    className: f.headerLine,
                    children: [
                      (0, s.jsx)(o.default.Icon, { expired: !0 }),
                      (0, s.jsx)(o.default.Info, {
                        expired: !0,
                        title: E.default.Messages.INVITE_BUTTON_INVALID,
                        children: t,
                      }),
                    ],
                  }),
                  n,
                ],
              }),
            ],
          })
        );
      }
    },
    793079: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("174622"),
        l = n("782340");
      function i() {
        return (0, s.jsxs)(a.default, {
          children: [
            (0, s.jsx)(a.default.Header, {
              text: l.default.Messages.INVITE_BUTTON_RESOLVING,
            }),
            (0, s.jsx)(a.default.Body, { resolving: !0 }),
          ],
        });
      }
    },
    135666: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("534438"),
        l = n("174622"),
        i = e => {
          let {
            stageInstance: t,
            guild: n,
            isMember: i,
            onTransitionToInviteChannel: r,
            onAcceptInstantInvite: o,
          } = e;
          return (0, s.jsx)(l.default, {
            children: (0, s.jsx)(a.default, {
              isEmbed: !0,
              stageInstance: t,
              guild: n,
              onClick: i ? r : o,
            }),
          });
        };
    },
    158783: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("627445"),
        l = n.n(a),
        i = n("446674"),
        r = n("233069"),
        o = n("813006"),
        u = n("373469"),
        d = n("162771"),
        c = n("174622"),
        E = n("793079"),
        f = n("49111"),
        _ = n("91366"),
        T = n("782340"),
        I = n("599541");
      function m(e) {
        let t,
          n,
          a,
          {
            invite: m,
            currentUserId: N,
            guild: p,
            onTransitionToInviteChannel: S,
            onAcceptInstantInvite: C,
          } = e,
          A = null == p ? void 0 : p.id,
          h = (0, i.useStateFromStores)([d.default], () =>
            d.default.getGuildId()
          ),
          g = (0, i.useStateFromStores)(
            [u.default],
            () =>
              null != m && null != m.target_user
                ? u.default.getActiveStreamForUser(m.target_user.id, A)
                : null,
            [m, A]
          ),
          M = (0, i.useStateFromStores)(
            [u.default],
            () =>
              null != m && null != m.target_user
                ? u.default.getStreamForUser(m.target_user.id, A)
                : null,
            [m, A]
          ),
          O =
            null != m &&
            m.target_type === _.InviteTargetTypes.STREAM &&
            null != m.target_user &&
            null != g,
          R =
            null != m &&
            null != M &&
            null != m.channel &&
            null != m.guild &&
            M.channelId === m.channel.id &&
            M.guildId === m.guild.id;
        l(null != m, "Invite cannot be null");
        let { target_type: L, target_user: v } = m;
        l(
          L === _.InviteTargetTypes.STREAM && null != v,
          "invalid streaming invite"
        );
        let P = N === v.id,
          D = m.state === f.InviteStates.ACCEPTING,
          x = null != p;
        if (null == p) {
          if (null == m.guild) return (0, s.jsx)(E.default, {});
          p = new o.default(m.guild);
        }
        let y =
            null != m.channel
              ? (0, r.createChannelRecordFromInvite)(m.channel)
              : null,
          U = O ? S : C;
        x && !R
          ? (a = P
              ? T.default.Messages.INVITE_BUTTON_STREAM_ENDED_STREAMER
              : T.default.Messages.INVITE_BUTTON_STREAM_ENDED.format({
                  name: v.username,
                }))
          : ((t = T.default.Messages.WATCH),
            (n = c.default.Button.Colors.GREEN),
            O &&
              ((t = T.default.Messages.INVITE_BUTTON_STREAM_WATCHING),
              (n = c.default.Button.Colors.PRIMARY)),
            (a = P
              ? T.default.Messages.INVITE_BUTTON_STREAMER
              : T.default.Messages.INVITE_BUTTON_STREAMING.format({
                  name: v.username,
                })));
        let j =
          h === p.id && null != y
            ? (0, s.jsx)(c.default.Channel, { channel: y })
            : T.default.Messages.INVITE_BUTTON_STREAMING_SUBTEXT.format({
                guildName: p.name,
              });
        return (0, s.jsxs)(c.default, {
          children: [
            (0, s.jsx)(c.default.Header, {
              text: T.default.Messages.INVITE_BUTTON_TITLE_STREAMING,
            }),
            (0, s.jsxs)(c.default.Body, {
              children: [
                (0, s.jsxs)("div", {
                  className: I.headerLine,
                  children: [
                    (0, s.jsx)(c.default.Icon, {
                      guild: p,
                      onClick: x && R ? U : void 0,
                    }),
                    (0, s.jsx)(c.default.Info, {
                      title: a,
                      onClick: x && R ? U : void 0,
                      children: j,
                    }),
                  ],
                }),
                R
                  ? (0, s.jsx)(c.default.Button, {
                      disabled: x && !R,
                      onClick: U,
                      submitting: D,
                      isDisabled: O && R,
                      color: n,
                      children: t,
                    })
                  : null,
              ],
            }),
          ],
        });
      }
    },
    67541: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("987317"),
        i = n("722525"),
        r = n("974755"),
        o = n("18494"),
        u = n("162771"),
        d = n("174622"),
        c = n("599110"),
        E = n("49111"),
        f = n("782340"),
        _ = n("599541");
      function T(e) {
        var t;
        let { guild: n, channel: T, messageData: I } = e,
          m = u.default.getGuildId(),
          N = o.default.getChannelId(m),
          p = a.useCallback(() => {
            var e;
            c.default.track(E.AnalyticEvents.CHANNEL_LINK_PREVIEW_JOINED, {
              author_id:
                null === (e = I.author) || void 0 === e ? void 0 : e.id,
              link_guild_id: n.id,
              link_channel_id: T.id,
              link_channel_type: T.type,
              guild_id: m,
              channel_id: N,
            }),
              (0, i.transitionToChannel)(n.id, T.id),
              l.default.selectVoiceChannel(T.id);
          }, [
            null === (t = I.author) || void 0 === t ? void 0 : t.id,
            n.id,
            T.id,
            T.type,
            m,
            N,
          ]),
          S = (0, s.jsx)(d.default.Channel, { channel: T });
        return (0, s.jsx)(d.default, {
          children: (0, s.jsxs)(d.default.Body, {
            children: [
              (0, s.jsxs)("div", {
                className: _.headerLine,
                children: [
                  (0, s.jsx)(d.default.Icon, { guild: n }),
                  (0, s.jsx)(d.default.Info, {
                    title: S,
                    onClick: p,
                    children: (0, s.jsxs)("span", {
                      className: _.infoTitle,
                      children: [
                        f.default.Messages.INVITE_BUTTON_BODY_IN_GUILD.format({
                          guildName: n.name,
                        }),
                        (0, s.jsx)("span", {
                          className: _.infoBadge,
                          children: (0, s.jsx)(r.default, {
                            guild: n,
                            isBannerVisible: !1,
                          }),
                        }),
                      ],
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.default.Button, {
                onClick: p,
                color: d.default.Button.Colors.GREEN,
                children: T.isGuildStageVoice()
                  ? f.default.Messages.STAGE_CHANNEL_JOIN
                  : f.default.Messages.JOIN_VOICE,
              }),
            ],
          }),
        });
      }
    },
    115859: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
          renderSimpleAccessories: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("849197"),
        l = n("723931");
      function i(e) {
        let {
          channelMessageProps: { message: t, channel: n, compact: i = !1 },
          hasSpoilerEmbeds: r,
          handleContextMenu: o,
          isInteracting: u,
          isAutomodBlockedMessage: d,
          renderThreadAccessory: c,
          renderComponentAccessory: E,
          renderSuppressEmbeds: f,
          forceAddReactions: _,
          className: T,
        } = e;
        return d
          ? null
          : (0, s.jsx)(a.default, {
              message: t,
              children: (0, s.jsx)(l.default, {
                className: T,
                isInteracting: u,
                message: t,
                channel: n,
                compact: i,
                hasSpoilerEmbeds: r,
                onAttachmentContextMenu: o,
                renderThreadAccessory: c,
                renderComponentAccessory: E,
                renderSuppressEmbeds: f,
                forceAddReactions: _,
              }),
            });
      }
      function r(e, t) {
        let {
          message: n,
          channel: a,
          compact: i = !1,
          renderThreadAccessory: r,
          disableReactionCreates: o,
          disableReactionUpdates: u,
        } = e;
        return (0, s.jsx)(l.SimpleMessageAccessories, {
          message: n,
          channel: a,
          compact: i,
          hasSpoilerEmbeds: t,
          renderThreadAccessory: r,
          disableReactionCreates: o,
          disableReactionUpdates: u,
        });
      }
    },
    862451: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("913491"),
        l = n("844061");
      function i(e) {
        let { message: t, channel: n, compact: i } = e;
        return (0, a.default)(t)
          ? (0, s.jsx)(l.default, { message: t, channel: n, compact: i })
          : null;
      }
    },
    611792: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("27618"),
        i = n("341716");
      function r(e) {
        let { message: t, channel: n, compact: r } = e,
          o = (0, a.useStateFromStores)(
            [l.default],
            () =>
              null != t.interaction &&
              l.default.isBlocked(t.interaction.user.id),
            [t.interaction]
          );
        return (0, s.jsx)(i.default, {
          message: t,
          channel: n,
          compact: r,
          isInteractionUserBlocked: o,
        });
      }
      function o(e, t, n) {
        return null != e.interaction && "" !== e.interaction.displayName
          ? (0, s.jsx)(r, { message: e, channel: t, compact: n })
          : null;
      }
    },
    554372: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("256572"),
        r = n("27618"),
        o = n("93427"),
        u = n("95045"),
        d = n("574073"),
        c = n("49111");
      let E = a.memo(function (e) {
        let {
            baseMessage: t,
            channel: n,
            referencedMessage: c,
            compact: E = !1,
          } = e,
          f = c.state === i.ReferencedMessageState.LOADED ? c.message : void 0,
          _ = a.useMemo(
            () =>
              (null == f ? void 0 : f.content) != null && "" !== f.content
                ? (0, u.default)(f, { formatInline: !0 }).content
                : null,
            [f]
          ),
          T = (0, l.useStateFromStores)(
            [r.default],
            () => null != f && r.default.isBlocked(f.author.id),
            [f]
          ),
          I = (0, d.useNullableMessageAuthor)(f),
          m = (0, d.useNullableMessageAuthor)(t);
        return (0, s.jsx)(o.default, {
          repliedAuthor: I,
          baseAuthor: m,
          baseMessage: t,
          channel: n,
          referencedMessage: c,
          content: _,
          compact: E,
          isReplyAuthorBlocked: T,
        });
      });
      function f(e, t, n, a, l) {
        return e.type !== c.MessageTypes.REPLY || null == n
          ? null
          : (0, s.jsx)(E, {
              baseMessage: e,
              channel: t,
              referencedMessage: a,
              compact: l,
            });
      }
    },
    356070: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("424973");
      var s = n("37983");
      n("884691");
      var a = n("917351"),
        l = n.n(a),
        i = n("77078"),
        r = n("86621"),
        o = n("812204"),
        u = n("506885"),
        d = n("981601"),
        c = n("479020"),
        E = n("449008"),
        f = n("49111"),
        _ = n("224688");
      let T = (0, r.default)(e => {
        let { member: t, empty: n, analyticsContext: a, guildId: l } = e;
        if (n) return (0, s.jsx)("div", { className: _.partyMemberEmpty });
        if (null == t)
          return (0, s.jsx)("div", {
            className: _.partyMemberUnknown,
            children: (0, s.jsx)(c.default, {
              className: _.partyMemberUnknownIcon,
            }),
          });
        let r = {
          location: { ...a.location, object: f.AnalyticsObjects.AVATAR },
        };
        return (0, s.jsx)("div", {
          className: _.partyMemberKnown,
          children: (0, s.jsx)(i.Popout, {
            preload: () =>
              (0, u.default)(t.id, t.getAvatarURL(l, 80), { guildId: l }),
            renderPopout: e =>
              (0, s.jsx)(d.default, {
                ...e,
                userId: t.id,
                analyticsParams: r,
                newAnalyticsLocations: [o.default.AVATAR],
              }),
            position: "left",
            children: e =>
              (0, s.jsx)(i.Avatar, {
                ...e,
                src: t.getAvatarURL(l, 24),
                "aria-label": t.username,
                size: i.AvatarSizes.SIZE_24,
                className: _.partyMember,
              }),
          }),
        });
      });
      var I = e => {
        let {
            partySize: t,
            members: n,
            minAvatarsShown: a = 1,
            maxAvatarsShown: i = 2,
            guildId: r,
          } = e,
          { unknownSize: o, totalSize: u, knownSize: d } = t;
        if (u < a) return null;
        let c = l(n)
          .filter(E.isNotNullish)
          .take(i)
          .map(e => (0, s.jsx)(T, { member: e, guildId: r }, e.id))
          .value();
        for (let e = 0; e < o && c.length < i; e++)
          c.push((0, s.jsx)(T, { guildId: r }, "unknown-member-".concat(e)));
        let f = u - d - o;
        for (let e = 0; e < f && c.length < i; e++)
          c.push(
            (0, s.jsx)(T, { empty: !0, guildId: r }, "empty-member-".concat(e))
          );
        let I = Math.max(Math.min(u - c.length, 99), 0);
        if (1 === I) {
          let e = n[i];
          c.push((0, s.jsx)(T, { member: e, guildId: r }, e.id));
        }
        return (0, s.jsx)("div", {
          className: _.wrapper,
          children: (0, s.jsxs)("div", {
            className: _.partyMembers,
            children: [
              c,
              I > 1
                ? (0, s.jsxs)("div", {
                    className: _.partyMemberOverflow,
                    children: ["+", I],
                  })
                : null,
            ],
          }),
        });
      };
    },
    509167: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("748820"),
        l = n("77078"),
        i = n("112679"),
        r = n("55689"),
        o = n("599110"),
        u = n("49111");
      function d(e) {
        let {
            applicationId: t,
            skuId: d,
            onClose: c,
            onComplete: E,
            analyticsLocations: f,
            analyticsLocationObject: _,
            contextKey: T,
          } = e,
          I = !1,
          m = (0, a.v4)();
        (0, l.openModalLazy)(
          async () => {
            let { default: e } = await n.el("405314").then(n.bind(n, "405314"));
            return n => {
              let { onClose: a, ...l } = n;
              return (0, s.jsx)(e, {
                ...l,
                loadId: m,
                applicationId: t,
                skuId: d,
                analyticsLocations: f,
                analyticsLocationObject: _,
                onClose: e => {
                  a(), null == c || c(e);
                },
                onComplete: e => {
                  (I = !0), null == E || E(e);
                },
              });
            };
          },
          {
            contextKey: T,
            onCloseCallback: () => {
              !I &&
                o.default.track(u.AnalyticEvents.PAYMENT_FLOW_CANCELED, {
                  load_id: m,
                  payment_type:
                    u.PurchaseTypeToAnalyticsPaymentType[
                      u.PurchaseTypes.ONE_TIME
                    ],
                  location: _,
                  is_gift: !1,
                  application_id: t,
                  location_stack: f,
                }),
                (0, i.clearError)(),
                (0, r.clearPurchaseTokenAuthState)(),
                null == c || c(I);
            },
            onCloseRequest: u.NOOP,
          }
        );
      }
    },
    314743: function (e, t, n) {
      "use strict";
      function s(e, t) {
        var n;
        let s = decodeURIComponent(t),
          a =
            null !== (n = s.split("/").pop()) && void 0 !== n ? n : "temp.gif";
        return "".concat(e, "-").concat(a);
      }
      n.r(t),
        n.d(t, {
          getFileNameFromGifUrl: function () {
            return s;
          },
        }),
        n("491096");
    },
    239013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showVotesForAnswer: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078");
      function l(e) {
        let { message: t, initialAnswerId: l } = e;
        (0, a.openModalLazy)(async () => {
          let { default: e } = await n.el("915299").then(n.bind(n, "915299"));
          return n => (0, s.jsx)(e, { ...n, message: t, initialAnswerId: l });
        });
      }
    },
    914271: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handlePollGifAttachmentAdd: function () {
            return o;
          },
          handlePollMediaAttachmentAdd: function () {
            return u;
          },
          removePollUploadAttachment: function () {
            return d;
          },
          removeAllPollUploadAttachments: function () {
            return c;
          },
          sendPollMessageWithAttachments: function () {
            return E;
          },
        });
      var s = n("81594"),
        a = n("783480"),
        l = n("966724"),
        i = n("474643"),
        r = n("314743");
      async function o(e, t, n) {
        let s = (0, r.getFileNameFromGifUrl)(t, n),
          a = await fetch(n),
          l = await a.blob(),
          i = new File([l], s, { type: "image/gif" });
        return u(e, t, i), n;
      }
      function u(e, t, n) {
        let a = {
          id: t,
          channelId: e,
          file: n,
          platform: l.UploadPlatform.WEB,
        };
        s.default.addFile({
          file: a,
          channelId: e,
          draftType: i.DraftType.Poll,
        });
      }
      async function d(e, t, n) {
        s.default.remove(e, t, i.DraftType.Poll);
      }
      async function c(e) {
        s.default.clearAll(e, i.DraftType.Poll);
      }
      async function E(e) {
        let { channel: t, items: n, poll: s, nonce: l, maxSizeCallback: r } = e;
        return a.default.uploadFiles({
          channelId: t.id,
          uploads: n,
          draftType: i.DraftType.Poll,
          parsedMessage: {
            content: "",
            tts: !1,
            invalidEmojis: [],
            validNonShortcutEmojis: [],
          },
          options: { nonce: l, poll: s },
          raiseEndpointErrors: !0,
        });
      }
    },
    847511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleShowVotesForAnswer: function () {
            return y;
          },
          default: function () {
            return F;
          },
        }),
        n("70102"),
        n("222007"),
        n("881410"),
        n("808653");
      var s = n("627445"),
        a = n.n(s),
        l = n("917351"),
        i = n.n(l),
        r = n("418009"),
        o = n("446674"),
        u = n("913144"),
        d = n("404118"),
        c = n("851387"),
        E = n("819689"),
        f = n("448993"),
        _ = n("716241"),
        T = n("267567"),
        I = n("875978"),
        m = n("815297"),
        N = n("256572"),
        p = n("271938"),
        S = n("42203"),
        C = n("474643"),
        A = n("377253"),
        h = n("585722"),
        g = n("239013"),
        M = n("914271"),
        O = n("690714"),
        R = n("641126"),
        L = n("905206"),
        v = n("49111"),
        P = n("782340");
      function D(e, t) {
        let n = [...t],
          s = 0,
          a = 0;
        for (let t of n) {
          var l;
          let n =
            null == e
              ? void 0
              : null === (l = e.find(e => e.answer_id === parseInt(t))) ||
                  void 0 === l
                ? void 0
                : l.poll_media;
          (null == n ? void 0 : n.text) != null && (s += 1),
            (null == n ? void 0 : n.emoji) != null && (a += 1);
        }
        return {
          analyticsSelectedAnswerIds: n,
          selectedTextAnswersCount: s,
          selectedEmojiAnswersCount: a,
        };
      }
      function x(e) {
        let { guildId: t, title: n, body: s } = e;
        d.default.show({
          title: n,
          body: s,
          confirmText: P.default.Messages.LURKER_MODE_POPOUT_JOIN,
          cancelText: P.default.Messages.LURKER_MODE_POPOUT_CANCEL,
          onConfirm: () => {
            c.default.joinGuild(t, { source: v.JoinGuildSources.POLL_ALERT });
          },
        });
      }
      function y(e) {
        let { channelId: t, messageId: n, answerId: s } = e,
          a = S.default.getChannel(t);
        if (null == a) return;
        if (T.default.isLurking(null == a ? void 0 : a.guild_id)) {
          x({
            guildId: a.guild_id,
            title: P.default.Messages.POLL_LURKING_SEE_VOTES_TITLE,
            body: P.default.Messages.POLL_LURKING_VOTE_SUBTITLE,
          });
          return;
        }
        let l = A.default.getMessage(t, n);
        if (null == l || null == l.poll || 0 === l.poll.answers.length) return;
        let i = null != s ? s : String(l.poll.answers[0].answer_id);
        g.showVotesForAnswer({ message: l, initialAnswerId: i });
      }
      function U(e) {
        let { channelId: t, messageId: n, isEditing: s } = e;
        (0, R.updatePollState)(t, n, e => {
          var n;
          return {
            channelId: t,
            selectedAnswerIds: new Set(),
            submitting: !1,
            editing: s,
            showResults:
              null !== (n = null == e ? void 0 : e.showResults) &&
              void 0 !== n &&
              n,
          };
        });
      }
      function j(e) {
        let { channelId: t, messageId: n } = e,
          s = A.default.getMessage(t, n);
        return null == s
          ? []
          : s.reactions.flatMap(e => (!0 === e.me_vote ? e.emoji.name : []));
      }
      async function b(e) {
        let { channelId: t, messageId: n, answerIds: s } = e,
          a = j({ channelId: t, messageId: n }),
          l = i.difference(a, s),
          r = i.difference(s, a),
          d = p.default.getId(),
          c = [
            ...l.map(e => ({ type: "MESSAGE_REACTION_REMOVE", id: e })),
            ...r.map(e => ({ type: "MESSAGE_REACTION_ADD", id: e })),
          ],
          E = o.default.Emitter.batched(() => {
            let e;
            for (let { id: s, type: a } of c)
              e = u.default.dispatch({
                type: a,
                channelId: t,
                messageId: n,
                emoji: { id: s, name: s },
                userId: d,
                optimistic: !0,
                reactionType: I.ReactionTypes.VOTE,
              });
            return e;
          });
        null != E && (await E);
      }
      async function G(e) {
        let { channelId: t, messageId: n } = e,
          s = S.default.getChannel(t);
        if (null == s) return;
        if (T.default.isLurking(null == s ? void 0 : s.guild_id)) {
          x({
            guildId: s.guild_id,
            title: P.default.Messages.POLL_LURKING_VOTE_TITLE,
            body: P.default.Messages.POLL_LURKING_VOTE_SUBTITLE,
          });
          return;
        }
        let l = (0, R.getPollState)(t, n);
        a(null != l, "Must not be able to vote without existing state!");
        let i = j({ channelId: t, messageId: n });
        try {
          let e = [...l.selectedAnswerIds.values()];
          (0, R.updatePollState)(
            t,
            n,
            e => (
              a(null != e, "Must not be able to vote without existing state!"),
              { ...e, submitting: !0, editing: !1 }
            )
          ),
            await b({ channelId: t, messageId: n, answerIds: e }),
            await O.submitPollVote({
              channelId: t,
              messageId: n,
              answerIds: e,
            }),
            (0, R.updatePollState)(t, n, () => void 0);
        } catch (e) {
          var r, o, u;
          d.default.show({
            title: P.default.Messages.GENERIC_ERROR_TITLE,
            body:
              null !==
                (u =
                  null !==
                    (o =
                      null === (r = e.getAnyErrorMessage) || void 0 === r
                        ? void 0
                        : r.call(e)) && void 0 !== o
                    ? o
                    : e.message) && void 0 !== u
                ? u
                : P.default.Messages.GENERIC_ERROR_BODY,
          }),
            await b({ channelId: t, messageId: n, answerIds: i }),
            (0, R.updatePollState)(t, n, e => {
              if (null != e) return { ...e, submitting: !1, editing: !1 };
            });
        }
      }
      async function B(e) {
        let { channelId: t, messageId: n } = e,
          s = S.default.getChannel(t);
        if (null != s) {
          if (T.default.isLurking(null == s ? void 0 : s.guild_id)) {
            x({
              guildId: s.guild_id,
              title: P.default.Messages.POLL_LURKING_UNVOTE_TITLE,
              body: P.default.Messages.POLL_LURKING_UNVOTE_SUBTITLE,
            });
            return;
          }
          return (
            (0, R.updatePollState)(t, n, e => {
              var n;
              return {
                channelId: t,
                selectedAnswerIds: new Set(),
                submitting: !1,
                editing: !1,
                showResults:
                  null !== (n = null == e ? void 0 : e.showResults) &&
                  void 0 !== n &&
                  n,
              };
            }),
            await G({ channelId: t, messageId: n })
          );
        }
      }
      async function k(e) {
        let { channelId: t, messageId: n, type: s } = e;
        switch (s) {
          case "submit":
            await G({ channelId: t, messageId: n });
            break;
          case "remove":
            await B({ channelId: t, messageId: n });
            break;
          case "cancel":
            U({ channelId: t, messageId: n, isEditing: !1 });
            break;
          case "showVotes":
            !(function (e) {
              let { channelId: t, messageId: n } = e;
              (0, R.updatePollState)(t, n, e => {
                var s, a;
                let l = null == e || !e.showResults,
                  i = A.default.getMessage(t, n),
                  r =
                    null != i
                      ? i.reactions.reduce((e, t) => {
                          var n, s;
                          return (
                            e +
                            (null !==
                              (s =
                                null === (n = t.count_details) || void 0 === n
                                  ? void 0
                                  : n.vote) && void 0 !== s
                              ? s
                              : 0)
                          );
                        }, 0)
                      : 0;
                return (
                  _.default.trackWithMetadata(
                    v.AnalyticEvents.POLL_SHOW_RESULTS_CLICKED,
                    {
                      channel_id: t,
                      message_id: n,
                      show_results: l,
                      votes_count: r,
                    }
                  ),
                  {
                    channelId: t,
                    selectedAnswerIds: new Set(),
                    submitting:
                      null !== (s = null == e ? void 0 : e.submitting) &&
                      void 0 !== s &&
                      s,
                    editing:
                      null !== (a = null == e ? void 0 : e.submitting) &&
                      void 0 !== a &&
                      a,
                    showResults: l,
                  }
                );
              });
            })({ channelId: t, messageId: n });
            break;
          case "showVoterDetails":
            y({ channelId: t, messageId: n });
            break;
          default:
            a(!1, "Unknown poll action type: ".concat(s));
        }
      }
      var F = {
        handlePollAnswerTapped: function (e) {
          var t, n;
          let { answerId: s, ...l } = e,
            {
              channelId: i,
              messageId: r,
              message: o,
            } = (function (e) {
              let { channelId: t, messageId: n } = e,
                s = A.default.getMessage(t, n);
              if (null != s) return { message: s, channelId: t, messageId: n };
              let l = N.default.getMessage(t, n);
              if (null != l.message)
                return { channelId: t, messageId: n, message: l.message };
              throw (
                (a(null != s, "Tapped on a non-existent poll message"), Error())
              );
            })(l),
            { tapShouldOpenVotersModal: u } =
              null !== (n = (0, L.computeBasicPollChatData)(o)) && void 0 !== n
                ? n
                : {};
          if (!0 === u) {
            y({ channelId: i, messageId: r, answerId: s });
            return;
          }
          let d =
            null === (t = o.poll) || void 0 === t
              ? void 0
              : t.allow_multiselect;
          (0, R.updatePollState)(i, r, e => {
            var t, n;
            if (null == e) {
              let e = new Set([s]),
                {
                  analyticsSelectedAnswerIds: t,
                  selectedTextAnswersCount: a,
                  selectedEmojiAnswersCount: l,
                } = D(
                  null === (n = o.poll) || void 0 === n ? void 0 : n.answers,
                  e
                );
              return (
                _.default.trackWithMetadata(
                  v.AnalyticEvents.POLL_VOTE_SELECTED,
                  {
                    channel_id: i,
                    message_id: r,
                    selected_answer_ids: t,
                    selected_text_answers_count: a,
                    selected_emoji_answers_count: l,
                  }
                ),
                {
                  channelId: i,
                  selectedAnswerIds: e,
                  submitting: !1,
                  editing: !1,
                  showResults: !1,
                }
              );
            }
            let a = { ...e },
              l = new Set(a.selectedAnswerIds);
            if (((a.selectedAnswerIds = l), l.has(s))) l.delete(s);
            else {
              if (!d) for (let e of l) l.delete(e);
              l.add(s);
            }
            let {
              analyticsSelectedAnswerIds: u,
              selectedTextAnswersCount: c,
              selectedEmojiAnswersCount: E,
            } = D(
              null === (t = o.poll) || void 0 === t ? void 0 : t.answers,
              l
            );
            return (
              _.default.trackWithMetadata(v.AnalyticEvents.POLL_VOTE_SELECTED, {
                channel_id: i,
                message_id: r,
                selected_answer_ids: u,
                selected_text_answers_count: c,
                selected_emoji_answers_count: E,
              }),
              a
            );
          });
        },
        handlePollSubmitVote: G,
        handleUpdateVoteEditingState: U,
        handlePollActionTapped: k,
        createPoll: async function e(e) {
          let {
              channel: t,
              question: n,
              answers: s,
              allowMultiSelect: a,
              duration: l,
              layout: i,
              onClose: o,
            } = e,
            u = h.default.getUploads(t.id, C.DraftType.Poll),
            d = s.map(e => {
              var t, n;
              let s =
                  null == u
                    ? void 0
                    : u.findIndex(t => t.id === e.localCreationAnswerId),
                a = { attachment_ids: -1 !== s ? ["".concat(s)] : void 0 };
              i === r.PollLayoutTypes.DEFAULT &&
                (a.text =
                  null === (n = e.text) || void 0 === n ? void 0 : n.trim());
              let l = null === (t = e.image) || void 0 === t ? void 0 : t.emoji;
              return (
                null != l &&
                  (null != l.id
                    ? (a.emoji = { id: l.id, name: "" })
                    : null != l.optionallyDiverseSequence &&
                      (a.emoji = { name: l.optionallyDiverseSequence })),
                { poll_media: a }
              );
            }),
            c = {
              question: { text: n.trim() },
              answers: d,
              allow_multiselect: a,
              duration: l,
              layout_type: i,
            };
          try {
            if (null != u && u.length > 0) {
              var _;
              let e =
                null !== (_ = p.default.getToken()) && void 0 !== _ ? _ : "";
              await M.sendPollMessageWithAttachments({
                channel: t,
                items: u,
                token: e,
                poll: c,
                nonce: (0, m.createNonce)(),
                maxSizeCallback: () => {},
              });
            } else await E.default.sendPollMessage(t.id, c);
            null == o || o();
          } catch (t) {
            let e = t instanceof f.APIError ? t : new f.APIError(t);
            if ("poll" === e.getAnyErrorMessage() && null != t.text)
              throw { ...t, body: JSON.parse(t.text) };
            throw t;
          }
        },
        endPollEarly: async function e(e) {
          let { channelId: t, messageId: n } = e,
            s = await d.default.confirm({
              title: P.default.Messages.POLL_END_EARLY_CONFIRMATION_TITLE,
              body: P.default.Messages.POLL_END_EARLY_CONFIRMATION_TEXT,
            });
          s && (await O.endPollEarly({ channelId: t, messageId: n }));
        },
      };
    },
    690714: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          submitPollVote: function () {
            return i;
          },
          endPollEarly: function () {
            return r;
          },
        });
      var s = n("872717"),
        a = n("448993"),
        l = n("49111");
      async function i(e) {
        let { channelId: t, messageId: n, answerIds: i } = e;
        try {
          await s.HTTP.put({
            url: l.Endpoints.POLL_ANSWERS(t, n),
            body: { answer_ids: i },
          });
        } catch (e) {
          throw new a.APIError(e);
        }
      }
      async function r(e) {
        let { channelId: t, messageId: n } = e;
        try {
          await s.HTTP.post({ url: l.Endpoints.POLL_EXPIRE(t, n) });
        } catch (e) {
          throw new a.APIError(e);
        }
      }
    },
    641126: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useChannelPollInteractions: function () {
            return r;
          },
          updatePollState: function () {
            return o;
          },
          getPollState: function () {
            return u;
          },
        });
      var s = n("308503"),
        a = n("233736");
      let l = {},
        i = (0, s.default)(e => ({
          polls: {},
          updatePollState(t, n, s) {
            e(e => {
              var a;
              return {
                polls: {
                  ...e.polls,
                  [t]: {
                    ...e.polls[t],
                    [n]: s(
                      null === (a = e.polls[t]) || void 0 === a ? void 0 : a[n]
                    ),
                  },
                },
              };
            });
          },
        }));
      function r(e) {
        return i(t => {
          var n;
          return null !== (n = t.polls[e]) && void 0 !== n ? n : l;
        }, a.default);
      }
      function o(e, t, n) {
        i.getState().updatePollState(e, t, n);
      }
      function u(e, t) {
        var n;
        return null === (n = i.getState().polls[e]) || void 0 === n
          ? void 0
          : n[t];
      }
    },
    849197: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useInteractivePollMessage: function () {
            return E;
          },
          default: function () {
            return _;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("65597"),
        o = n("819689"),
        u = n("377253"),
        d = n("905206");
      let c = a.createContext(void 0);
      function E(e) {
        var t;
        let n = null !== (t = a.useContext(c)) && void 0 !== t ? t : e;
        return (
          i(
            null != n,
            "Using PollReferenceMessageContext without a provider (or a fallback)"
          ),
          n
        );
      }
      function f(e) {
        let { message: t, children: n } = e,
          l = (0, r.useStateFromStores)(
            [u.default],
            () => u.default.getMessage(t.channel_id, t.id),
            [t.channel_id, t.id]
          ),
          i = null != l;
        return (
          a.useEffect(() => {
            !i &&
              o.default.focusMessage({
                channelId: t.channel_id,
                messageId: t.id,
              });
          }, [i, t.channel_id, t.id]),
          (0, s.jsx)(c.Provider, { value: null != l ? l : t, children: n })
        );
      }
      function _(e) {
        let { message: t, children: n } = e;
        return (0, d.isPollMessageDirectlyInteractive)(t)
          ? (0, s.jsx)(s.Fragment, { children: n })
          : (0, s.jsx)(f, { message: t, children: n });
      }
    },
    214400: function (e, t, n) {
      "use strict";
      var s, a, l, i, r, o;
      n.r(t),
        n.d(t, {
          PollChatAnswerInteractionType: function () {
            return l;
          },
        }),
        ((i = s || (s = {}))[(i.NONE = 0)] = "NONE"),
        (i[(i.LOW = 1)] = "LOW"),
        (i[(i.HIGH = 2)] = "HIGH"),
        ((r = a || (a = {}))[(r.NONE = 0)] = "NONE"),
        (r[(r.HOLLOW = 1)] = "HOLLOW"),
        (r[(r.FILLED = 2)] = "FILLED"),
        (r[(r.CHECKMARK = 3)] = "CHECKMARK"),
        ((o = l || (l = {}))[(o.LIST = 1)] = "LIST"),
        (o[(o.CHECKBOXES = 2)] = "CHECKBOXES"),
        (o[(o.RADIO_BUTTONS = 3)] = "RADIO_BUTTONS");
    },
    410328: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          buildPlatformPollResources: function () {
            return i;
          },
          getAvatarUrl: function () {
            return r;
          },
        }),
        n("794252");
      var s = n("506838"),
        a = n("418009"),
        l = n("162570");
      function i(e, t) {
        let n = (0, s.match)(t)
            .with(
              a.PollLayoutTypes.IMAGE_ONLY_ANSWERS,
              () => l.normalStylesImageOnlyAnswers
            )
            .otherwise(() => l.normalStylesDefault),
          i = {
            styles: {
              loserSelected: n,
              normal: n,
              notVoted: n,
              selected: n,
              voted: l.votedStyles,
              victorSelected: l.victorStyles,
              victorNotSelected: l.victorStyles,
              normalVote: n,
            },
          };
        return i;
      }
      function r(e, t) {
        return e.getAvatarURL(t, 20, !1);
      }
    },
    868586: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("917351"),
        a = n("410328"),
        l = (0, s.memoize)(
          function (e) {
            let { theme: t, layoutType: n } = e;
            return (0, a.buildPlatformPollResources)(t, n);
          },
          e => {
            let { theme: t, layoutType: n } = e;
            return "".concat(t, ":").concat(n);
          }
        );
    },
    905206: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          reactionForId: function () {
            return A;
          },
          isPollMessageDirectlyInteractive: function () {
            return g;
          },
          computeBasicPollChatData: function () {
            return M;
          },
          default: function () {
            return O;
          },
        }),
        n("222007"),
        n("794252");
      var s = n("506838"),
        a = n("418009"),
        l = n("385976"),
        i = n("867805"),
        r = n("42203"),
        o = n("377253"),
        u = n("697218"),
        d = n("315102"),
        c = n("402671"),
        E = n("773336"),
        f = n("641126"),
        _ = n("562228"),
        T = n("214400"),
        I = n("410328"),
        m = n("868586"),
        N = n("973799"),
        p = n("49111"),
        S = n("782340");
      let C = {
        channelId: p.EMPTY_STRING_SNOWFLAKE_ID,
        selectedAnswerIds: new Set(),
        submitting: !1,
        editing: !1,
        showResults: !1,
      };
      function A(e, t) {
        for (let n of e) {
          let e =
            "number" == typeof n.emoji.id ? "".concat(n.emoji.id) : n.emoji.id;
          if (e === t) return n;
        }
      }
      let h = e =>
        (0, s.match)(e)
          .with({ isInteractive: !1 }, () => "normalVote")
          .with(
            { isExpired: !0, isLeader: !0, didSelfVote: !0 },
            () => "victorSelected"
          )
          .with(
            { isExpired: !0, isLeader: !0, didSelfVote: !1 },
            () => "victorNotSelected"
          )
          .with({ isExpired: !0, didSelfVote: !0 }, () => "loserSelected")
          .with({ isExpired: !0 }, () => "notVoted")
          .with({ didSelfVote: !0, isExpired: !1 }, () => "voted")
          .with({ hasVoted: !0, isExpired: !1 }, () => "notVoted")
          .with({ isSelected: !0 }, () => "selected")
          .with({ isExpired: !1, showResults: !0 }, () => "notVoted")
          .otherwise(() => "normalVote");
      function g(e) {
        let t = o.default.getMessage(e.channel_id, e.id);
        return t === e && !0;
      }
      function M(e, t) {
        var n, s;
        let { formattedExpirationLabel: a } =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          { poll: l } = e;
        if (null == l) return;
        let i = e.state === p.MessageStates.SENT,
          r = i ? (null != a ? a : (0, N.formatExpirationLabel)(l.expiry)) : "",
          u = null == r && i,
          {
            selectedAnswerIds: d,
            submitting: c,
            editing: E,
            showResults: _,
          } = null !==
            (n = null != t ? t : (0, f.getPollState)(e.getChannelId(), e.id)) &&
          void 0 !== n
            ? n
            : C,
          T = e.reactions,
          I = !0;
        if (!g(e)) {
          let t = o.default.getMessage(e.channel_id, e.id);
          (I = null != t),
            (T =
              null !== (s = null == t ? void 0 : t.reactions) && void 0 !== s
                ? s
                : T);
        }
        let m = d.size > 0,
          S = T.some(e => !0 === e.me_vote),
          A = !E && S,
          h = I && (A || u || _);
        return {
          poll: l,
          canTapAnswers: i && (!S || E || h),
          canRemoveVote: A && i && !u,
          canShowVoteCounts: h,
          canSubmitVote: !c && m && !A && i,
          expirationLabel: r,
          hasSelectedAnswer: m,
          hasVoted: A,
          hasVoteRecorded: S,
          isEditingVote: E,
          isExpired: u,
          isInteractive: I,
          isSent: i,
          reactions: T,
          selectedAnswerIds: d,
          submitting: c,
          tapShouldOpenVotersModal: h,
          showResults: _,
        };
      }
      function O(e, t) {
        var n, o;
        let {
            animateEmoji: f = !1,
            theme: N = "dark",
            formattedExpirationLabel: p,
          } = arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : {},
          { poll: C } = e;
        if (null == C) return;
        let g = u.default.getCurrentUser();
        if (null == g) return;
        let O =
            null === (o = r.default.getChannel(e.getChannelId())) ||
            void 0 === o
              ? void 0
              : null === (n = o.getGuildId) || void 0 === n
                ? void 0
                : n.call(o),
          R = (0, I.getAvatarUrl)(g, O),
          L = C.answers,
          v = C.layout_type,
          P = M(e, t, { formattedExpirationLabel: p });
        if (null == P) return;
        let {
            canTapAnswers: D,
            canRemoveVote: x,
            canShowVoteCounts: y,
            canSubmitVote: U,
            expirationLabel: j = S.default.Messages.POLL_EXPIRED,
            hasSelectedAnswer: b,
            hasVoted: G,
            isEditingVote: B,
            isExpired: k,
            isInteractive: F,
            reactions: w,
            selectedAnswerIds: H,
            submitting: V,
            tapShouldOpenVotersModal: Y,
            showResults: K,
          } = P,
          W = (0, _.getTotalVotes)(w),
          z = S.default.Messages.POLL_VOTES_COUNT.format({ count: String(W) }),
          Q = Math.max(
            ...L.map(e => {
              var t, n;
              let s = A(w, "".concat(e.answer_id));
              return null !==
                (n =
                  null == s
                    ? void 0
                    : null === (t = s.count_details) || void 0 === t
                      ? void 0
                      : t.vote) && void 0 !== n
                ? n
                : 0;
            })
          ),
          Z = L.map(e => {
            var t, n, r;
            let o = "".concat(e.answer_id),
              u = A(w, o),
              E =
                null !==
                  (n =
                    null == u
                      ? void 0
                      : null === (t = u.count_details) || void 0 === t
                        ? void 0
                        : t.vote) && void 0 !== n
                  ? n
                  : 0,
              _ = H.has(o),
              T = E >= Q && 0 !== E,
              I =
                G &&
                null !== (r = null == u ? void 0 : u.me_vote) &&
                void 0 !== r &&
                r,
              m = h({
                didSelfVote: I,
                hasVoted: G,
                isExpired: k,
                isInteractive: F,
                isSelected: _,
                isLeader: T,
                showResults: K,
              });
            return {
              answerId: o,
              pollMedia: {
                text: e.poll_media.text,
                emoji: (function (e) {
                  let { animateEmoji: t = !1, size: n = 48 } =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (null == e) return;
                  let s = e.animated;
                  if (null == s && null != e.id) {
                    var a, r;
                    s =
                      null !==
                        (r =
                          null === (a = l.default.getCustomEmojiById(e.id)) ||
                          void 0 === a
                            ? void 0
                            : a.animated) &&
                      void 0 !== r &&
                      r;
                  }
                  let o = t && null != s && s;
                  return {
                    id: null == e.id ? null : "".concat(e.id),
                    name: e.name,
                    displayName:
                      null == e.id
                        ? i.default.convertSurrogateToName(e.name)
                        : e.name,
                    src:
                      null == e.id
                        ? c.default.getURL(e.name)
                        : d.default.getEmojiURL({
                            id: e.id,
                            animated: o,
                            size: n,
                          }),
                    animated: o,
                  };
                })(e.poll_media.emoji, { animateEmoji: f }),
                stickerId: e.poll_media.sticker_id,
                attachmentIds: e.poll_media.attachment_ids,
              },
              isSelected: _,
              isVictor: k && T,
              didSelfVote: I,
              style: m,
              shouldAnimateTransition: V,
              votesPercentage: Math.round(100 * (0 === W ? 0 : E / W)),
              votes: (0, s.match)(v)
                .with(a.PollLayoutTypes.IMAGE_ONLY_ANSWERS, () =>
                  "(".concat(String(E), ")")
                )
                .otherwise(() =>
                  S.default.Messages.POLL_VOTES_COUNT.format({
                    count: String(E),
                  })
                ),
            };
          }),
          J = (0, s.match)({
            isExpired: k,
            canSubmitVote: U,
            hasVoted: G,
            isEditingVote: B,
            canRemoveVote: x,
            isInteractive: F,
            showResults: K,
          })
            .with({ isInteractive: !1 }, () => void 0)
            .with({ isExpired: !0 }, () => void 0)
            .with({ isEditingVote: !0 }, () => ({
              label: S.default.Messages.POLL_SUBMIT_VOTE,
              presentation: "button",
              enabled: b,
              type: "submit",
            }))
            .with({ canRemoveVote: !0 }, () => ({
              label: S.default.Messages.POLL_REMOVE_VOTE,
              presentation: "secondaryButton",
              enabled: !0,
              type: "remove",
            }))
            .with({ hasVoted: !1, showResults: !0 }, () => ({
              label: S.default.Messages.POLL_HIDE_VOTES,
              presentation: "secondaryButton",
              enabled: !0,
              type: "showVotes",
            }))
            .otherwise(() => ({
              label: S.default.Messages.POLL_SUBMIT_VOTE,
              presentation: "button",
              enabled: U,
              type: "submit",
            })),
          q = (0, s.match)({ isInteractive: F, isEditingVote: B })
            .with({ isInteractive: !1 }, () => ({
              label: S.default.Messages.POLL_NOT_INTERACTIVE,
              presentation: "text",
              enabled: !1,
            }))
            .with({ isEditingVote: !0 }, () => ({
              label: S.default.Messages.CANCEL,
              presentation: "textButton",
              enabled: !0,
              type: "cancel",
            }))
            .otherwise(() => ({
              label: z,
              secondaryLabel: j,
              presentation: "text",
              enabled: !0,
              type: "showVoterDetails",
            })),
          X =
            !F || k || G || K
              ? void 0
              : {
                  label: S.default.Messages.POLL_SHOW_VOTES,
                  presentation: "textButton",
                  enabled: !0,
                  type: "showVotes",
                },
          $ = C.allow_multiselect,
          ee = (0, s.match)({
            isInteractive: F,
            isExpired: k,
            canSelectMultipleAnswers: $,
          })
            .with({ isInteractive: !1 }, () => void 0)
            .with({ isExpired: !0 }, () => void 0)
            .with(
              { canSelectMultipleAnswers: !0 },
              () => S.default.Messages.POLL_SELECT_MULTIPLE_ANSWERS
            )
            .otherwise(() => S.default.Messages.POLL_SELECT_ONE_ANSWER);
        return {
          question: C.question,
          promptLabel: ee,
          answers: Z,
          answersInteraction: (0, s.match)({
            tapShouldOpenVotersModal: Y,
            canTapAnswers: D,
            canSelectMultipleAnswers: $,
          })
            .with(
              { tapShouldOpenVotersModal: !0 },
              () => T.PollChatAnswerInteractionType.LIST
            )
            .with(
              { canTapAnswers: !1 },
              () => T.PollChatAnswerInteractionType.LIST
            )
            .with(
              { canSelectMultipleAnswers: !1 },
              () => T.PollChatAnswerInteractionType.RADIO_BUTTONS
            )
            .with(
              { canSelectMultipleAnswers: !0 },
              () => T.PollChatAnswerInteractionType.CHECKBOXES
            )
            .exhaustive(),
          answerTapAccessibilityLabel: (0, s.match)({
            tapShouldOpenVotersModal: Y,
            platform: (0, E.getNativePlatform)(),
          })
            .with(
              { tapShouldOpenVotersModal: !0, platform: "android" },
              () => S.default.Messages.POLL_TAP_FOR_VOTERS_A11Y_ANDROID
            )
            .with(
              { tapShouldOpenVotersModal: !0, platform: "ios" },
              () => S.default.Messages.POLL_TAP_FOR_VOTERS_A11Y_IOS
            )
            .with(
              { tapShouldOpenVotersModal: !0, platform: "web" },
              () => S.default.Messages.POLL_TAP_FOR_VOTERS_A11Y_ANDROID
            )
            .otherwise(() => void 0),
          layoutType: v,
          resources: (0, m.default)({ theme: N, layoutType: v }),
          containerStyle: "normal",
          primaryAction: J,
          canTapAnswers: D,
          canSelectMultipleAnswers: $,
          hasSelectedAnswer: b,
          canShowVoteCounts: y,
          hasVoted: G,
          isExpired: k,
          myAvatarUrl: R,
          secondaryAction: q,
          tertiaryAction: X,
        };
      }
    },
    973799: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          formatExpirationLabel: function () {
            return i;
          },
          default: function () {
            return r;
          },
        });
      var s = n("866227"),
        a = n.n(s),
        l = n("782340");
      function i(e) {
        let t = a();
        if (e <= t) return;
        let n = e.diff(t, "days");
        if (n > 1)
          return l.default.Messages.POLL_EXPIRY_DAYS_REMAINING.format({
            days: n,
          });
        let s = e.diff(t, "hours");
        if (s > 1)
          return l.default.Messages.POLL_EXPIRY_HOURS_REMAINING.format({
            hours: s,
          });
        let i = e.diff(t, "minutes");
        return l.default.Messages.POLL_EXPIRY_MINUTES_REMAINING.format({
          minutes: i,
        });
      }
      function r(e) {
        if (null != e) return i(e);
      }
    },
    985883: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("884691"),
        a = n("841098"),
        l = n("845579"),
        i = n("641126"),
        r = n("849197"),
        o = n("905206"),
        u = n("973799");
      function d(e, t) {
        var n;
        let d = (0, r.useInteractivePollMessage)(e),
          c = (0, i.useChannelPollInteractions)(d.getChannelId()),
          E = c[d.id],
          f = (0, u.default)(
            null === (n = d.poll) || void 0 === n ? void 0 : n.expiry
          ),
          _ = l.AnimateEmoji.useSetting(),
          T = (0, a.default)(),
          I = null != t ? t : T;
        return s.useMemo(
          () =>
            (0, o.default)(d, E, {
              animateEmoji: _,
              theme: I,
              formattedExpirationLabel: f,
            }),
          [_, d, E, f, I]
        );
      }
    },
    426490: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PollAnswers: function () {
            return b;
          },
          PollEmojiMediaView: function () {
            return k;
          },
          PollMediaView: function () {
            return w;
          },
          PollAnswerVotedIcon: function () {
            return H;
          },
          PollAnswerRadioIcon: function () {
            return V;
          },
          PollAnswerCheckboxIcon: function () {
            return Y;
          },
        }),
        n("794252");
      var s,
        a,
        l = n("37983"),
        i = n("884691"),
        r = n("414456"),
        o = n.n(r),
        u = n("506838"),
        d = n("65597"),
        c = n("77078"),
        E = n("430568"),
        f = n("449918"),
        _ = n("20606"),
        T = n("385976"),
        I = n("845579"),
        m = n("952368"),
        N = n("36694"),
        p = n("578706"),
        S = n("904276"),
        C = n("875436"),
        A = n("866190"),
        h = n("847511"),
        g = n("562228"),
        M = n("214400"),
        O = n("74232"),
        R = n("316350"),
        L = n("49111"),
        v = n("782340"),
        P = n("193169");
      function D(e) {
        let { className: t, children: n } = e;
        return (0, l.jsx)("ul", {
          "aria-label": v.default.Messages.POLL_OPTIONS_ARIA,
          className: t,
          children: n,
        });
      }
      function x(e) {
        let { className: t, children: n } = e;
        return (0, l.jsx)("div", {
          "aria-label": v.default.Messages.POLL_OPTIONS_ARIA,
          role: "group",
          className: t,
          children: n,
        });
      }
      function y(e) {
        let { className: t, children: n } = e,
          s = (0, c.useRadioGroup)({ orientation: "vertical" });
        return (0, l.jsx)("div", {
          "aria-label": v.default.Messages.POLL_OPTIONS_ARIA,
          ...s,
          className: t,
          children: n,
        });
      }
      function U(e) {
        let {
            className: t,
            onClick: n,
            isSelected: s,
            isFirstAnswer: a,
            children: i,
          } = e,
          { pollAnswerRef: r } = (0, R.usePollFocusManager)();
        return (0, l.jsx)(c.Clickable, {
          role: "checkbox",
          className: o(t, P.enabled),
          onClick: n,
          "aria-checked": s,
          ref: a ? r : void 0,
          children: i,
        });
      }
      function j(e) {
        let t,
          {
            className: n,
            children: s,
            onClick: a,
            isSelected: i,
            hasSelectedAnyAnswer: r,
            isFirstAnswer: u,
          } = e;
        t = r ? (i ? 0 : -1) : u ? 0 : -1;
        let { pollAnswerRef: d } = (0, R.usePollFocusManager)();
        return (0, l.jsx)(c.Clickable, {
          role: "radio",
          className: o(n, P.enabled),
          onClick: a,
          "aria-checked": i,
          tabIndex: t,
          ref: u ? d : void 0,
          children: s,
        });
      }
      function b(e) {
        let {
            answers: t,
            answersInteraction: n,
            answerTapAccessibilityLabel: s,
            canTapAnswers: a,
            hasSelectedAnyAnswer: i,
            className: r,
            answerClassName: d,
            renderAnswerContent: c,
          } = e,
          { ContainerComponent: E, answerElementType: f } = (0, u.match)({
            canTapAnswers: a,
            answersInteraction: n,
          })
            .with(
              {
                answersInteraction:
                  M.PollChatAnswerInteractionType.RADIO_BUTTONS,
              },
              () => ({ ContainerComponent: y, answerElementType: 1 })
            )
            .with(
              {
                answersInteraction: M.PollChatAnswerInteractionType.CHECKBOXES,
              },
              () => ({ ContainerComponent: x, answerElementType: 2 })
            )
            .with(
              {
                canTapAnswers: !0,
                answersInteraction: M.PollChatAnswerInteractionType.LIST,
              },
              () => ({ ContainerComponent: D, answerElementType: 3 })
            )
            .otherwise(() => ({ ContainerComponent: D, answerElementType: 0 }));
        return (0, l.jsx)(E, {
          className: r,
          children: t.map((e, t) =>
            (0, l.jsx)(
              G,
              {
                className: o(P.answer, d),
                answer: e,
                isFirstAnswer: 0 === t,
                elementType: f,
                answerTapAccessibilityLabel: s,
                hasSelectedAnyAnswer: i,
                children: c(e),
              },
              e.answerId
            )
          ),
        });
      }
      function G(e) {
        let {
            className: t,
            answer: n,
            children: s,
            hasSelectedAnyAnswer: a,
            isFirstAnswer: r,
            elementType: u,
          } = e,
          { channelId: d, messageId: c } = (0, O.useMessageIds)(),
          E = (0, O.useStyleClass)(n.style),
          f = !0 === n.isSelected,
          _ = i.useCallback(() => {
            h.default.handlePollAnswerTapped({
              channelId: d,
              messageId: c,
              answerId: n.answerId,
            });
          }, [d, c, n.answerId]);
        switch (u) {
          case 0:
          case 3:
            return (0, l.jsx)("li", { className: o(t, E), children: s });
          case 1:
            return (0, l.jsx)(j, {
              className: o(t, E),
              onClick: _,
              isSelected: f,
              hasSelectedAnyAnswer: a,
              isFirstAnswer: r,
              children: s,
            });
          case 2:
            return (0, l.jsx)(U, {
              className: o(t, E),
              onClick: _,
              isSelected: f,
              isFirstAnswer: r,
              children: s,
            });
        }
      }
      function B(e) {
        var t;
        let { attachment: n, className: s } = e,
          a = (0, A.useIsWindowFocused)(),
          i = I.GifAutoPlay.useSetting();
        return (0, l.jsx)(m.default, {
          className: s,
          imageClassName: P.attachmentImage,
          src: null != n.proxy_url && "" !== n.proxy_url ? n.proxy_url : n.url,
          alt:
            null !== (t = n.description) && void 0 !== t
              ? t
              : (0, g.filterOutUUID)(n.filename),
          responsive: !0,
          width: 212,
          height: 212,
          autoPlay: i,
          shouldAnimate: a,
          shouldRenderAccessory: !1,
        });
      }
      function k(e) {
        var t;
        let { className: n, emoji: s } = e,
          a = (0, d.useStateFromStores)(
            [T.default],
            () => {
              var e;
              return T.default.getCustomEmojiById(
                null !== (e = null == s ? void 0 : s.id) && void 0 !== e
                  ? e
                  : ""
              );
            },
            [s.id]
          ),
          i =
            (null == s ? void 0 : s.name) !== ""
              ? s.name
              : null == a
                ? void 0
                : a.name;
        return (0, l.jsx)(E.default, {
          className: n,
          emojiId: null == s ? void 0 : s.id,
          emojiName: null == s ? void 0 : s.name,
          alt: i,
          animated:
            null !== (t = null == a ? void 0 : a.animated) && void 0 !== t && t,
        });
      }
      function F(e, t) {
        return null != e
          ? (0, l.jsx)("div", { className: e, children: t })
          : (0, l.jsx)(l.Fragment, { children: t });
      }
      function w(e) {
        let {
            media: t,
            containerClassName: n,
            attachmentClassName: s,
            emojiClassName: a,
            fallback: i,
          } = e,
          { message: r } = (0, O.usePollContext)();
        if (null != t.attachmentIds && t.attachmentIds.length > 0) {
          let e = r.attachments.find(e => {
            var n;
            return (
              e.id ===
              (null === (n = t.attachmentIds) || void 0 === n ? void 0 : n[0])
            );
          });
          if (null != e)
            return F(n, (0, l.jsx)(B, { className: s, attachment: e }));
        }
        return null != t.emoji
          ? F(n, (0, l.jsx)(k, { className: a, emoji: t.emoji }))
          : void 0 !== i
            ? (0, l.jsx)(l.Fragment, { children: i })
            : null;
      }
      function H(e) {
        let { isVictor: t, isExpired: n, size: s, className: a } = e,
          { color: i, backgroundColor: r } = (0, u.match)({
            isVictor: t,
            isExpired: n,
          })
            .with({ isExpired: !0, isVictor: !0 }, () => ({
              color: _.default.BUTTON_POSITIVE_BACKGROUND,
              backgroundColor: (0, f.getColor)(L.Color.WHITE_500),
            }))
            .with({ isExpired: !0, isVictor: !1 }, () => ({
              color: _.default.ICON_PRIMARY,
              backgroundColor: _.default.BG_MOD_FAINT,
            }))
            .otherwise(() => ({
              color: (0, f.getColor)(L.Color.BRAND_500),
              backgroundColor: (0, f.getColor)(L.Color.WHITE_500),
            }));
        return (0, l.jsx)(p.default, {
          width: s,
          height: s,
          className: a,
          color: i,
          backgroundColor: r,
          "aria-hidden": !0,
        });
      }
      function V(e) {
        let { isSelected: t, size: n, className: s } = e,
          a = {
            width: n,
            height: n,
            background: P.radioBackground,
            "aria-hidden": !0,
          };
        return t
          ? (0, l.jsx)(C.default, {
              ...a,
              foreground: P.radioForeground,
              className: s,
            })
          : (0, l.jsx)(S.default, { ...a, className: s });
      }
      function Y(e) {
        let { isSelected: t, size: n, className: s } = e,
          a = 0.85 * n;
        return (0, l.jsx)("div", {
          className: o(P.checkbox, { [P.checkboxSelected]: t }, s),
          style: { width: n, height: n },
          "aria-hidden": !0,
          children:
            t &&
            (0, l.jsx)(N.default, {
              width: a,
              height: a,
              color: (0, f.getColor)(L.Color.WHITE_500),
            }),
        });
      }
      ((a = s || (s = {}))[(a.LIST_ITEM = 0)] = "LIST_ITEM"),
        (a[(a.RADIO = 1)] = "RADIO"),
        (a[(a.CHECKBOX = 2)] = "CHECKBOX"),
        (a[(a.LIST_ITEM_BUTTON = 3)] = "LIST_ITEM_BUTTON");
    },
    619544: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("597287"),
        r = n("77078"),
        o = n("214400"),
        u = n("426490"),
        d = n("782340"),
        c = n("758888");
      function E(e) {
        let { didSelfVote: t, label: n, percentage: a } = e;
        return (0, s.jsxs)("div", {
          className: c.votesData,
          children: [
            t &&
              (0, s.jsx)(i.VisuallyHidden, {
                children: d.default.Messages.POLL_ANSWER_VOTED_ARIA,
              }),
            (0, s.jsxs)(r.Text, {
              variant: "text-md/semibold",
              color: "none",
              children: [a, "%"],
            }),
            (0, s.jsx)(r.Text, {
              variant: "text-xs/semibold",
              color: "none",
              children: n,
            }),
          ],
        });
      }
      function f(e) {
        let {
            answer: t,
            isExpired: n,
            myAvatarUrl: a,
            canShowVoteCounts: i,
          } = e,
          r = !0 === t.isSelected,
          o = !0 === t.didSelfVote,
          d = !0 === t.isVictor;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(u.PollMediaView, {
              attachmentClassName: l(c.attachment, {
                [c.attachmentWithResults]: i,
              }),
              emojiClassName: c.emoji,
              media: t.pollMedia,
              fallback: (0, s.jsx)("div", {
                className: l(c.attachment, c.mediaMissing),
              }),
            }),
            r &&
              (0, s.jsx)(u.PollAnswerVotedIcon, {
                size: 40,
                isVictor: d,
                isExpired: n,
                className: c.selectedIcon,
              }),
            i &&
              (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(E, {
                    didSelfVote: o,
                    percentage: t.votesPercentage,
                    label: t.votes,
                    myAvatarUrl: o ? a : void 0,
                  }),
                  ((!n && o) || d) &&
                    (0, s.jsx)(u.PollAnswerVotedIcon, {
                      size: 18,
                      isVictor: d,
                      isExpired: n,
                      className: c.pollAnswerIcon,
                    }),
                ],
              }),
          ],
        });
      }
      function _(e) {
        let {
          isExpired: t,
          myAvatarUrl: n,
          answersInteraction: a,
          canShowVoteCounts: i,
          ...r
        } = e;
        return (0, s.jsx)(u.PollAnswers, {
          className: c.answersContainer,
          answerClassName: l(c.answer, {
            [c.currentlyVoting]: a !== o.PollChatAnswerInteractionType.LIST,
          }),
          myAvatarUrl: n,
          answersInteraction: a,
          renderAnswerContent: e =>
            (0, s.jsx)(f, {
              answer: e,
              isExpired: t,
              myAvatarUrl: n,
              answersInteraction: a,
              canShowVoteCounts: i,
            }),
          ...r,
        });
      }
    },
    74232: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          usePollContext: function () {
            return i;
          },
          PollContextProvider: function () {
            return r;
          },
          useStyleClass: function () {
            return o;
          },
          useMessageIds: function () {
            return u;
          },
        }),
        n("70102");
      var s = n("37983"),
        a = n("884691");
      let l = a.createContext(void 0);
      function i() {
        let e = a.useContext(l);
        if (null == e) throw Error("No PollContextProvider found");
        return e;
      }
      function r(e) {
        let { children: t, message: n, poll: i } = e,
          r = a.useMemo(() => ({ message: n, poll: i }), [n, i]);
        return (0, s.jsx)(l.Provider, { value: r, children: t });
      }
      function o(e) {
        let t = (function () {
          let { poll: e } = i();
          return e.resources;
        })();
        return t.styles[e];
      }
      function u() {
        let { message: e } = i(),
          t = e.getChannelId();
        return a.useMemo(() => ({ channelId: t, messageId: e.id }), [e.id, t]);
      }
    },
    311830: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        }),
        n("794252");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("506838"),
        o = n("418009"),
        u = n("77078"),
        d = n("20606"),
        c = n("266926"),
        E = n("701909"),
        f = n("847511"),
        _ = n("619544"),
        T = n("74232"),
        I = n("316350"),
        m = n("909366"),
        N = n("49111"),
        p = n("782340"),
        S = n("831797");
      function C(e) {
        let { media: t } = e;
        return (0, s.jsx)(u.Heading, {
          variant: "text-md/medium",
          className: S.question,
          scaleFontToUserSetting: !0,
          children: t.text,
        });
      }
      function A(e) {
        let { className: t } = e;
        return (0, s.jsx)(u.Tooltip, {
          text: (0, s.jsx)(u.Text, {
            variant: "text-sm/medium",
            color: "text-normal",
            scaleFontToUserSetting: !0,
            children: p.default.Messages.POLLS_EXPERIMENT_INFO_TEXT,
          }),
          "aria-label": p.default.Messages.POLLS_EXPERIMENT_INFO_TEXT,
          children: e =>
            (0, s.jsx)(u.Clickable, {
              ...e,
              className: t,
              tag: "a",
              role: "link",
              href: E.default.getArticleURL(N.HelpdeskArticles.POLLS_FAQ),
              target: "_blank",
              children: (0, s.jsx)(c.default, {
                width: 24,
                height: 24,
                color: d.default.TEXT_MUTED,
                "aria-hidden": !0,
              }),
            }),
        });
      }
      function h(e) {
        let {
          children: t,
          onClick: n,
          variant: a = "text-sm/medium",
          color: l = "interactive-active",
          className: r,
          buttonRef: o,
        } = e;
        return (0, s.jsx)(u.Button, {
          onClick: n,
          className: i(S.textButton, r),
          look: u.Button.Looks.BLANK,
          size: u.Button.Sizes.NONE,
          buttonRef: o,
          children: (0, s.jsx)(u.Text, {
            variant: a,
            color: l,
            scaleFontToUserSetting: !0,
            children: t,
          }),
        });
      }
      function g(e) {
        let {
          buttonLabel: t,
          secondaryLabel: n,
          handleClick: a,
          className: l,
        } = e;
        return (0, s.jsxs)("div", {
          className: i(S.detailsText, l),
          children: [
            (0, s.jsx)(h, {
              onClick: a,
              variant: "text-sm/normal",
              color: "none",
              className: S.detailsTextButton,
              children: t,
            }),
            null != n &&
              (0, s.jsx)(u.Text, {
                variant: "text-sm/normal",
                color: "text-muted",
                scaleFontToUserSetting: !0,
                children: n,
              }),
          ],
        });
      }
      function M(e) {
        let { action: t, channelId: n, messageId: l, className: i } = e,
          { actionButtonRef: r, manageFocusOnAction: o } = (0,
          I.usePollFocusManager)(),
          d = a.useCallback(async () => {
            (null == t ? void 0 : t.type) != null &&
              (await f.default.handlePollActionTapped({
                channelId: n,
                messageId: l,
                type: t.type,
              }),
              o(t.type));
          }, [null == t ? void 0 : t.type, n, l, o]);
        return null == t
          ? null
          : "button" === t.presentation || "secondaryButton" === t.presentation
            ? (0, s.jsx)(
                u.Button,
                {
                  buttonRef: r,
                  onClick: d,
                  disabled: !t.enabled,
                  color:
                    "secondaryButton" === t.presentation
                      ? u.Button.Colors.PRIMARY
                      : u.Button.Colors.BRAND,
                  size: u.Button.Sizes.SMALL,
                  className: i,
                  children: (0, s.jsx)(u.Text, {
                    variant: "text-sm/medium",
                    color: "interactive-active",
                    scaleFontToUserSetting: !0,
                    children: t.label,
                  }),
                },
                t.presentation
              )
            : "textButton" === t.presentation
              ? (0, s.jsx)(h, {
                  buttonRef: r,
                  onClick: d,
                  className: i,
                  children: t.label,
                })
              : (0, s.jsx)(g, {
                  buttonLabel: t.label,
                  secondaryLabel: t.secondaryLabel,
                  handleClick: d,
                  className: i,
                });
      }
      function O(e) {
        let { message: t, poll: n, className: a } = e,
          l = (0, T.useStyleClass)(n.containerStyle),
          d = (function (e, t) {
            let n = {
              answers: t.answers,
              answersInteraction: t.answersInteraction,
              answerTapAccessibilityLabel: t.answerTapAccessibilityLabel,
              isExpired: t.isExpired,
              canTapAnswers: t.canTapAnswers,
              hasSelectedAnyAnswer: t.hasSelectedAnswer,
              myAvatarUrl: t.myAvatarUrl,
              canShowVoteCounts: t.canShowVoteCounts,
            };
            return (0, r.match)(t.layoutType)
              .with(o.PollLayoutTypes.DEFAULT, () =>
                (0, s.jsx)(m.TextAndImageAnswers, { ...n })
              )
              .with(o.PollLayoutTypes.IMAGE_ONLY_ANSWERS, () =>
                (0, s.jsx)(_.default, { ...n })
              )
              .otherwise(() => null);
          })(0, n);
        return null == d
          ? null
          : (0, s.jsx)("div", {
              className: i(S.container, l, a),
              children: (0, s.jsxs)(u.HeadingLevel, {
                children: [
                  (0, s.jsxs)("div", {
                    className: S.header,
                    children: [
                      (0, s.jsx)(A, { className: S.infoButton }),
                      (0, s.jsx)(C, { media: n.question }),
                      null != n.promptLabel &&
                        (0, s.jsx)(u.Text, {
                          variant: "text-sm/normal",
                          color: "text-muted",
                          className: S.prompt,
                          scaleFontToUserSetting: !0,
                          children: n.promptLabel,
                        }),
                    ],
                  }),
                  d,
                  (0, s.jsxs)("div", {
                    className: S.bottomBar,
                    children: [
                      (0, s.jsx)(M, {
                        channelId: t.getChannelId(),
                        messageId: t.id,
                        action: n.secondaryAction,
                        className: S.secondaryAction,
                      }),
                      (0, s.jsx)(M, {
                        channelId: t.getChannelId(),
                        messageId: t.id,
                        action: n.tertiaryAction,
                        className: S.tertiaryAction,
                      }),
                      (0, s.jsx)(M, {
                        channelId: t.getChannelId(),
                        messageId: t.id,
                        action: n.primaryAction,
                      }),
                    ],
                  }),
                ],
              }),
            });
      }
      function R(e) {
        let { message: t, poll: n, className: a } = e;
        return (0, s.jsx)(T.PollContextProvider, {
          message: t,
          poll: n,
          children: (0, s.jsx)(I.PollFocusManager, {
            children: (0, s.jsx)(O, { message: t, poll: n, className: a }),
          }),
        });
      }
    },
    316350: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          usePollFocusManager: function () {
            return u;
          },
          PollFocusManager: function () {
            return c;
          },
        }),
        n("70102"),
        n("222007");
      var s,
        a,
        l = n("37983"),
        i = n("884691"),
        r = n("449008");
      ((a = s || (s = {})).POLL_ANSWERS = "POLL_ANSWERS"),
        (a.ACTION_BUTTON = "ACTION_BUTTON");
      let o = i.createContext(void 0);
      function u() {
        let e = i.useContext(o);
        if (null == e) throw Error("No PollFocusContextProvider found");
        return e;
      }
      function d(e) {
        let {
            children: t,
            actionButtonRef: n,
            pollAnswerRef: s,
            manageFocusOnAction: a,
          } = e,
          r = i.useMemo(
            () => ({
              actionButtonRef: n,
              pollAnswerRef: s,
              manageFocusOnAction: a,
            }),
            [n, s, a]
          );
        return (0, l.jsx)(o.Provider, { value: r, children: t });
      }
      function c(e) {
        let { children: t } = e,
          [n, s] = i.useState(),
          a = i.useRef(null),
          o = i.useRef(null);
        return (
          i.useEffect(() => {
            var e, t, s;
            "POLL_ANSWERS" === n &&
              null != o.current &&
              (null === (t = o.current) ||
                void 0 === t ||
                null === (e = t.ref) ||
                void 0 === e ||
                e.focus()),
              "ACTION_BUTTON" === n &&
                null != a.current &&
                (null === (s = a.current) || void 0 === s || s.focus());
          }, [n]),
          (0, l.jsx)(d, {
            pollAnswerRef: o,
            actionButtonRef: a,
            manageFocusOnAction: e => {
              switch (e) {
                case "submit":
                case "cancel":
                  s("ACTION_BUTTON");
                  break;
                case "remove":
                case "showVotes":
                  s("POLL_ANSWERS");
                  break;
                case "showVoterDetails":
                  break;
                default:
                  (0, r.assertNever)(e);
              }
            },
            children: t,
          })
        );
      }
    },
    909366: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TextAndImageAnswers: function () {
            return O;
          },
        }),
        n("222007"),
        n("794252");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("597287"),
        o = n("146606"),
        u = n("506838"),
        d = n("446674"),
        c = n("77078"),
        E = n("206230"),
        f = n("486996"),
        _ = n("476765"),
        T = n("847511"),
        I = n("562228"),
        m = n("214400"),
        N = n("426490"),
        p = n("74232"),
        S = n("782340"),
        C = n("997559");
      function A(e) {
        let {
            percentage: t,
            label: n,
            canShowVoterDetails: l,
            answerId: i,
          } = e,
          o = (0, _.useUID)(),
          { channelId: u, messageId: d } = (0, p.useMessageIds)(),
          [E, m] = a.useState(""),
          [N, S] = a.useState(!1),
          A = "" !== E && N,
          h = a.useCallback(() => {
            let e = (0, I.getPollAnswerVotesTooltipText)(d, u, i);
            m(e);
          }, [d, u, i]),
          g = a.useCallback(() => {
            h(), S(!0);
          }, [h]),
          M = a.useCallback(() => {
            S(!1);
          }, []),
          O = a.useCallback(() => {
            (0, T.handleShowVotesForAnswer)({
              channelId: u,
              messageId: d,
              answerId: i,
            });
          }, [u, d, i]);
        a.useEffect(() => {
          if (N)
            return (
              f.default.addReactChangeListener(h),
              () => {
                f.default.removeReactChangeListener(h);
              }
            );
        }, [N, h]);
        let R = (0, s.jsx)(c.Text, {
          variant: "text-xs/semibold",
          color: "none",
          className: C.voteCount,
          scaleFontToUserSetting: !0,
          children: n,
        });
        return (0, s.jsxs)("div", {
          className: C.votesData,
          children: [
            l
              ? (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(c.Tooltip, {
                      text: (0, s.jsx)(c.Text, {
                        variant: "text-sm/normal",
                        color: "text-muted",
                        scaleFontToUserSetting: !0,
                        children: E,
                      }),
                      forceOpen: A,
                      "aria-label": !1,
                      children: e =>
                        (0, s.jsx)(c.Button, {
                          ...e,
                          onMouseEnter: g,
                          onMouseLeave: M,
                          onFocus: g,
                          onBlur: M,
                          onClick: O,
                          className: C.voteCountButton,
                          "aria-describedby": A ? o : void 0,
                          look: c.Button.Looks.BLANK,
                          size: c.Button.Sizes.NONE,
                          children: R,
                        }),
                    }),
                    A && (0, s.jsx)(r.VisuallyHidden, { id: o, children: E }),
                  ],
                })
              : (0, s.jsx)(s.Fragment, { children: R }),
            (0, s.jsxs)(c.Text, {
              variant: "text-md/bold",
              color: "none",
              scaleFontToUserSetting: !0,
              children: [t, "%"],
            }),
          ],
        });
      }
      function h(e) {
        let { percentage: t } = e,
          n = (0, d.useStateFromStores)(
            [E.default],
            () => E.default.useReducedMotion
          ),
          a = (0, o.useSpring)({
            from: { width: "0%" },
            to: { width: "".concat(t, "%") },
            immediate: n,
            config: 100 !== t && 0 !== t ? o.config.wobbly : o.config.default,
          });
        return (0, s.jsx)(o.animated.span, {
          className: C.votePercentageBar,
          style: a,
          "aria-hidden": !0,
        });
      }
      function g(e) {
        let {
          answersInteraction: t,
          isSelected: n,
          didSelfVote: a,
          isVictor: l,
          isExpired: i,
          className: r,
        } = e;
        return (0, u.match)({ answersInteraction: t, didSelfVote: a })
          .with(
            {
              answersInteraction: m.PollChatAnswerInteractionType.RADIO_BUTTONS,
            },
            () =>
              (0, s.jsx)(N.PollAnswerRadioIcon, {
                isSelected: n,
                size: 24,
                className: r,
              })
          )
          .with(
            { answersInteraction: m.PollChatAnswerInteractionType.CHECKBOXES },
            () =>
              (0, s.jsx)(N.PollAnswerCheckboxIcon, {
                isSelected: n,
                size: 20,
                className: r,
              })
          )
          .with(
            {
              answersInteraction: m.PollChatAnswerInteractionType.LIST,
              didSelfVote: !0,
            },
            () =>
              (0, s.jsx)(N.PollAnswerVotedIcon, {
                isVictor: l,
                isExpired: i,
                size: 24,
                className: r,
              })
          )
          .otherwise(() => null);
      }
      function M(e) {
        let {
            answer: t,
            isExpired: n,
            answersInteraction: a,
            canShowVoteCounts: l,
            canShowVoterDetails: o,
          } = e,
          u = !0 === t.isSelected,
          d = !0 === t.didSelfVote,
          E = !0 === t.isVictor;
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: i(C.answerInner, {
              [C.currentlyVoting]: a !== m.PollChatAnswerInteractionType.LIST,
              [C.selected]: u,
            }),
            children: [
              l ? (0, s.jsx)(h, { percentage: t.votesPercentage }) : null,
              null != t.pollMedia.emoji &&
                (0, s.jsx)(N.PollEmojiMediaView, {
                  className: C.emoji,
                  emoji: t.pollMedia.emoji,
                }),
              (0, s.jsx)(c.Text, {
                className: C.label,
                variant: "text-sm/semibold",
                color: "none",
                scaleFontToUserSetting: !0,
                children: t.pollMedia.text,
              }),
              t.didSelfVote &&
                (0, s.jsx)(r.VisuallyHidden, {
                  children: S.default.Messages.POLL_ANSWER_VOTED_ARIA,
                }),
              l &&
                (0, s.jsx)(A, {
                  percentage: t.votesPercentage,
                  label: t.votes,
                  canShowVoterDetails: o,
                  answerId: t.answerId,
                }),
              (0, s.jsx)(g, {
                answersInteraction: a,
                isSelected: u,
                didSelfVote: d,
                isVictor: E,
                isExpired: n,
                className: C.answerSelectionIcon,
              }),
            ],
          }),
        });
      }
      function O(e) {
        let {
          isExpired: t,
          answersInteraction: n,
          canShowVoteCounts: a,
          canTapAnswers: l,
          ...i
        } = e;
        return (0, s.jsx)(N.PollAnswers, {
          className: C.answersContainer,
          answerClassName: C.answer,
          answersInteraction: n,
          canTapAnswers: l,
          renderAnswerContent: e =>
            (0, s.jsx)(M, {
              answer: e,
              isExpired: t,
              answersInteraction: n,
              canShowVoteCounts: a,
              canShowVoterDetails: l,
            }),
          ...i,
        });
      }
    },
    167209: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForPomelo: function () {
            return i;
          },
          useIsEligibleForPomelo: function () {
            return r;
          },
        });
      var s = n("65597"),
        a = n("697218"),
        l = n("553257");
      let i = () =>
          o(a.default.getCurrentUser(), (0, l.getPomeloEligibility)()),
        r = () =>
          o(
            (0, s.useStateFromStores)([a.default], () =>
              a.default.getCurrentUser()
            ),
            (0, l.usePomeloEligibility)()
          );
      function o(e, t) {
        return (
          !(null == e || e.isPomelo()) &&
          !!e.hasVerifiedEmailOrPhone() &&
          !!t &&
          !0
        );
      }
    },
    141254: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isAtGuildCapAndNonPremium: function () {
            return r;
          },
        }),
        n("446674"),
        n("139321");
      var s = n("305961"),
        a = n("697218"),
        l = n("719923"),
        i = n("49111");
      function r() {
        let e = s.default.getGuildCount() >= i.MAX_USER_GUILDS,
          t = l.default.canUseIncreasedGuildCap(a.default.getCurrentUser());
        return e && !t;
      }
    },
    909469: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PAYMENT_SOURCE_NAMES: function () {
            return E;
          },
          getLocalizedPricingNotice: function () {
            return _;
          },
          getLocalizedPricingBannerStrings: function () {
            return T;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("592861"),
        a = n("988415"),
        l = n("701909"),
        i = n("153160"),
        r = n("49111"),
        o = n("843455"),
        u = n("782340");
      let d = new Set([
          o.CurrencyCodes.ARS,
          o.CurrencyCodes.CLP,
          o.CurrencyCodes.COP,
        ]),
        c = new Set([o.CurrencyCodes.USD, o.CurrencyCodes.JPY]),
        E = {
          [r.PaymentSourceTypes.CARD]: () =>
            u.default.Messages.PAYMENT_SOURCE_CREDIT_CARD_CARD_ONLY,
          [r.PaymentSourceTypes.PAYPAL]: () =>
            u.default.Messages.PAYMENT_SOURCE_PAYPAL,
          [r.PaymentSourceTypes.SOFORT]: () =>
            u.default.Messages.PAYMENT_SOURCE_SOFORT,
          [r.PaymentSourceTypes.GIROPAY]: () =>
            u.default.Messages.PAYMENT_SOURCE_GIROPAY,
          [r.PaymentSourceTypes.PRZELEWY24]: () =>
            u.default.Messages.PAYMENT_SOURCE_PRZELEWY24,
          [r.PaymentSourceTypes.PAYSAFE_CARD]: () =>
            u.default.Messages.PAYMENT_SOURCE_PAYSAFE_CARD,
          [r.PaymentSourceTypes.GCASH]: () =>
            u.default.Messages.PAYMENT_SOURCE_GCASH,
          [r.PaymentSourceTypes.GRABPAY_MY]: () =>
            u.default.Messages.PAYMENT_SOURCE_GRABPAY,
          [r.PaymentSourceTypes.MOMO_WALLET]: () =>
            u.default.Messages.PAYMENT_SOURCE_MOMO_WALLET,
          [r.PaymentSourceTypes.VENMO]: () =>
            u.default.Messages.PAYMENT_SOURCE_VENMO,
          [r.PaymentSourceTypes.KAKAOPAY]: () =>
            u.default.Messages.PAYMENT_SOURCE_KAKAOPAY,
          [r.PaymentSourceTypes.GOPAY_WALLET]: () =>
            u.default.Messages.PAYMENT_SOURCE_GOPAY_WALLET,
          [r.PaymentSourceTypes.BANCONTACT]: () =>
            u.default.Messages.PAYMENT_SOURCE_BANCONTACT,
          [r.PaymentSourceTypes.EPS]: () =>
            u.default.Messages.PAYMENT_SOURCE_EPS,
          [r.PaymentSourceTypes.IDEAL]: () =>
            u.default.Messages.PAYMENT_SOURCE_IDEAL,
          [r.PaymentSourceTypes.CASH_APP]: () =>
            u.default.Messages.PAYMENT_SOURCE_CASH_APP_PAY,
          [r.PaymentSourceTypes.APPLE]: () =>
            u.default.Messages.PAYMENT_SOURCE_APPLE,
        },
        f = [
          r.PaymentSourceTypes.EPS,
          r.PaymentSourceTypes.BANCONTACT,
          r.PaymentSourceTypes.IDEAL,
          r.PaymentSourceTypes.SOFORT,
          r.PaymentSourceTypes.GIROPAY,
          r.PaymentSourceTypes.SEPA_DEBIT,
          r.PaymentSourceTypes.PAYSAFE_CARD,
        ],
        _ = (e, t, n, s) => {
          if (null == e) return "";
          let l = (0, a.getI18NCountryName)(e);
          if (t === o.CurrencyCodes.EUR)
            return n
              ? u.default.Messages.LOCALIZED_PRICING_NOTICE_GENERALIZED_PAYMENT_METHODS_PROMO.format(
                  { country: l }
                )
              : u.default.Messages.LOCALIZED_PRICING_NOTICE_NO_LOWERED_PRICE.format(
                  { currencyISOCode: t.toUpperCase() }
                );
          return s
            ? u.default.Messages.NOTICE_NITRO_PRICE_CHANGED.format({
                countryName: l,
              })
            : u.default.Messages.LOCALIZED_PRICING_NOTICE.format({
                country: l,
              });
        },
        T = e => {
          let {
              localizedPricingPromo: t,
              subscription: n,
              forceSingleLine: s = !1,
              userLocale: _,
            } = e,
            {
              countryCode: T,
              amount: m,
              currency: N,
              paymentSourceTypes: p,
            } = t,
            S = 0 !== p.length,
            C = I(T),
            A = (0, i.formatPrice)(m, N, {
              style: "currency",
              currency: N,
              currencyDisplay: "symbol",
              localeOverride: C,
            }),
            h =
              u.default.Messages.LOCALIZED_PRICING_BANNER_BODY_NEW_CURRENCY.format(
                {
                  helpCenterLink: l.default.getArticleURL(
                    r.HelpdeskArticles.LOCALIZED_PRICING
                  ),
                  currencyISOCode: N.toUpperCase(),
                  localizedPriceWithCurrencySymbol: A,
                }
              );
          if (
            (c.has(N) &&
              (h =
                u.default.Messages.LOCALIZED_PRICING_BANNER_BODY_EXISTING_CURRENCY.format(
                  {
                    helpCenterLink: l.default.getArticleURL(
                      r.HelpdeskArticles.LOCALIZED_PRICING
                    ),
                    localizedPriceWithCurrencySymbol: A,
                  }
                )),
            d.has(N) &&
              (h =
                u.default.Messages.LOCALIZED_PRICING_BANNER_BODY_NEW_CURRENCY_WITH_AMBIGUOUS_SYMBOL.format(
                  {
                    helpCenterLink: l.default.getArticleURL(
                      r.HelpdeskArticles.LOCALIZED_PRICING
                    ),
                    currencyISOCode: N.toUpperCase(),
                    localizedPriceWithCurrencySymbol: A,
                  }
                )),
            null != n &&
              !n.hasPremiumNitroMonthly &&
              (h =
                u.default.Messages.LOCALIZED_PRICING_BANNER_BODY_WITHOUT_PRICE.format(
                  {
                    helpCenterLink: l.default.getArticleURL(
                      r.HelpdeskArticles.LOCALIZED_PRICING
                    ),
                    currencyISOCode: N.toUpperCase(),
                  }
                )),
            N === o.CurrencyCodes.EUR &&
              (h = s
                ? u.default.Messages.LOCALIZED_PRICING_BANNER_NO_LOWERED_PRICE_SINGLE_STRING.format(
                    {
                      country: (0, a.getI18NCountryName)(T),
                      currencyISOCode: N.toUpperCase(),
                      helpCenterLink: l.default.getArticleURL(
                        r.HelpdeskArticles.LOCALIZED_PRICING
                      ),
                    }
                  )
                : u.default.Messages.LOCALIZED_PRICING_BANNER_NO_LOWERED_PRICE.format(
                    {
                      currencyISOCode: N.toUpperCase(),
                      helpCenterLink: l.default.getArticleURL(
                        r.HelpdeskArticles.LOCALIZED_PRICING
                      ),
                    }
                  )),
            S)
          ) {
            let e = f.filter(e => p.includes(e)),
              t = p.filter(e => !f.includes(e)),
              n = [...e, ...t],
              s = n.slice(0, 2).map(e => {
                var t, n;
                return null !==
                  (n =
                    null === (t = E[e]) || void 0 === t ? void 0 : t.call(E)) &&
                  void 0 !== n
                  ? n
                  : u.default.Messages.PAYMENT_SOURCE_UNKNOWN;
              });
            p.length >= 3 &&
              s.push(u.default.Messages.LOCALIZED_PRICING_MORE_NEW_WAYS_TO_PAY);
            let a = new Intl.ListFormat(_, {
              style: "short",
              type: "conjunction",
            });
            h =
              u.default.Messages.LOCALIZED_PRICING_PAYMENT_METHODS_PROMO.format(
                {
                  helpCenterLink: l.default.getArticleURL(
                    r.HelpdeskArticles.LOCALIZED_PRICING
                  ),
                  paymentMethods: a.format(s),
                }
              );
          }
          return {
            localizedPricingBannerHeader:
              u.default.Messages.LOCALIZED_PRICING_BANNER_HEADER.format({
                country: (0, a.getI18NCountryName)(T),
              }),
            localizedPricingBannerBody: h,
            localizedPricingBannerLinkOnly:
              u.default.Messages.LOCALIZED_PRICING_BANNER_LINK_ONLY.format({
                helpCenterLink: l.default.getArticleURL(
                  r.HelpdeskArticles.LOCALIZED_PRICING
                ),
              }),
            localizedPricingBannerSubNotif: S
              ? void 0
              : u.default.Messages.LOCALIZED_PRICING_BANNER_SUB_NOTIF,
          };
        },
        I = e => {
          let t = s.default.find(t => t.alpha2 === e);
          return null == t ? void 0 : t.localeForICU;
        };
    },
    428786: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("866227"),
        o = n.n(r),
        u = n("394846"),
        d = n("446674"),
        c = n("77078"),
        E = n("4919"),
        f = n("812204"),
        _ = n("685665"),
        T = n("649844"),
        I = n("697218"),
        m = n("521012"),
        N = n("888400"),
        p = n("719923"),
        S = n("158998"),
        C = n("540692"),
        A = n("166960"),
        h = n("833516"),
        g = n("646718"),
        M = n("782340"),
        O = n("179171");
      class R extends a.Component {
        renderTitle(e, t) {
          let { trialOffer: n } = this.props,
            s = I.default.getUser(n.user_id),
            a = null != s ? s.username : "???";
          return e && void 0 === n.redeemed_at
            ? M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_DISABLED_HEADER.format(
                { username: a }
              )
            : t
              ? M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_EXPIRED_HEADER
              : M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_HEADER.format({
                  username: a,
                });
        }
        renderBody(e, t, n) {
          let { trialOffer: s } = this.props,
            a = I.default.getUser(s.referrer_id);
          return (e || t) && n && void 0 === s.redeemed_at
            ? M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_EXPIRED_BODY
            : e && !n && void 0 === s.redeemed_at
              ? M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_DISABLED_BODY
              : M.default.Messages.SHARE_NITRO_EMBEDDED_MESSAGE_BODY.format({
                  username: null != a ? S.default.getName(a) : "???",
                });
        }
        renderActions(e, t, n) {
          let {
              trialOffer: a,
              currentUser: l,
              analyticsLocations: i,
            } = this.props,
            r = {
              onClick: () => {
                this.handleStartTrial(a, i);
              },
              color: c.Button.Colors.BRAND,
            },
            o =
              l.id !== a.user_id ||
              (0, p.isPremium)(l) ||
              !l.verified ||
              (0, h.hasUserTrialOfferExpired)(a),
            u = this.renderExpirationDate(e, t, n);
          return (
            (r.disabled = o),
            (0, s.jsxs)("div", {
              className: O.buttonContainer,
              children: [
                (0, s.jsx)("div", {
                  children: (0, s.jsx)(c.Button, {
                    ...r,
                    size: c.Button.Sizes.SMALL,
                    onClick: () => {
                      (0, T.default)({
                        initialPlanId: null,
                        subscriptionTier: g.PremiumSubscriptionSKUs.TIER_2,
                        analyticsLocations: i,
                        trialId: a.trial_id,
                        referralTrialOfferId: a.id,
                      });
                    },
                    children: M.default.Messages.START_TRIAL,
                  }),
                }),
                (0, s.jsx)("div", { className: O.metadata, children: u }),
              ],
            })
          );
        }
        renderExpirationDate(e, t, n) {
          let { trialOffer: s, trialEndsAt: a } = this.props;
          if (void 0 !== s.redeemed_at && !n && null !== a)
            return M.default.Messages.TRIAL_EXPIRES.format({
              date: (0, N.dateFormat)(o(a), "LL"),
            });
          if (e || void 0 === s.expires_at) return null;
          let l = o(s.expires_at);
          if (t)
            return M.default.Messages.EXPIRED_DATE.format({
              date: (0, N.dateFormat)(o(l), "LL"),
            });
          let i = l.diff(o(), "h");
          if (i > 48) {
            let e = l.diff(o(), "d");
            return M.default.Messages.EXPIRES_DAYS.format({ numDays: e });
          }
          if (i > 1)
            return M.default.Messages.EXPIRES_HOURS.format({ numHours: i });
          let r = l.diff(o(), "minutes");
          return M.default.Messages.EXPIRES_MINUTES.format({ numMinutes: r });
        }
        renderMedia(e) {
          return (0, s.jsx)("div", {
            className: i({ [O.referral]: !e, [O.birthdayReferral]: e }),
          });
        }
        render() {
          let {
              trialOffer: e,
              currentUser: t,
              recipientHasNitro: n,
              shouldShowBirthdayUX: a,
            } = this.props,
            l = (0, h.hasUserTrialOfferExpired)(e),
            r = t.id === e.referrer_id;
          return (0, s.jsxs)("div", {
            className: i(O.tile, O.container),
            children: [
              (0, s.jsx)("div", {
                className: O.media,
                children: this.renderMedia(a),
              }),
              (0, s.jsxs)("div", {
                className: O.description,
                children: [
                  (0, s.jsx)(c.H, {
                    className: O.title,
                    children: this.renderTitle(n, l),
                  }),
                  (0, s.jsx)("div", {
                    className: O.tagline,
                    children: this.renderBody(n, l, r),
                  }),
                  (0, s.jsx)("div", {
                    className: O.actions,
                    children: this.renderActions(n, l, r),
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleStartTrial = (e, t) => {
              (0, T.default)({
                initialPlanId: null,
                subscriptionTier: g.PremiumSubscriptionSKUs.TIER_2,
                analyticsLocations: t,
                trialId: e.trial_id,
              });
            });
        }
      }
      function L(e) {
        let { userTrialOfferId: t, canRenderReferralEmbed: n } = e,
          { trialOffer: a, isResolving: l } = (0, d.useStateFromStoresObject)(
            [C.default],
            () => ({
              trialOffer: n ? C.default.getRelevantUserTrialOffer(t) : null,
              isResolving: !!n && C.default.isResolving(t),
            }),
            [n, t]
          ),
          i = I.default.getCurrentUser(),
          r = (0, d.useStateFromStores)(
            [I.default],
            () =>
              null != a &&
              (0, p.isPremium)(
                void 0 !== i && a.user_id === i.id
                  ? i
                  : I.default.getUser(a.user_id)
              )
          ),
          o = (0, d.useStateFromStores)([m.default], () => {
            var e;
            return r
              ? null === (e = m.default.getPremiumTypeSubscription()) ||
                void 0 === e
                ? void 0
                : e.trialEndsAt
              : null;
          }),
          { analyticsLocations: c } = (0, _.default)(
            f.default.SHARE_NITRO_EMBED
          ),
          { enabled: T } = A.default.useExperiment(
            { location: "f4ff1d_1" },
            { autoTrackExposure: !0 }
          );
        return l
          ? (0, s.jsx)(E.ResponsiveLoadingEmbedTile, {
              isHorizontal: !u.isMobile,
            })
          : n && null != a && void 0 !== i
            ? (0, s.jsx)(R, {
                trialOffer: a,
                currentUser: i,
                recipientHasNitro: r,
                trialEndsAt: o,
                analyticsLocations: c,
                shouldShowBirthdayUX: T,
                ...e,
              })
            : (0, s.jsx)("div", {
                className: O.invalidWrapper,
                children: (0, s.jsx)("div", { className: O.invalid }),
              });
      }
    },
    104032: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("866227"),
        a = n.n(s),
        l = n("446674"),
        i = n("913144"),
        r = n("388290"),
        o = n("697218"),
        u = n("719923");
      let d = !1;
      class c extends l.default.Store {
        shouldShowReactivateNotice() {
          let e = o.default.getCurrentUser();
          return !(0, u.isPremium)(e) && d;
        }
      }
      c.displayName = "SubscriptionRemindersStore";
      var E = new c(i.default, {
        BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_SUCCESS: function (e) {
          let { subscription: t } = e;
          if (null != t) {
            var n;
            let e = r.default.createFromServer(t),
              s = (0, u.getPremiumPlanItem)(e);
            if (
              null == s ||
              (null === (n = e.metadata) || void 0 === n
                ? void 0
                : n.ended_at) == null
            )
              return;
            let l = a(e.metadata.ended_at);
            a().isBetween(
              l.clone().add(4, "days"),
              l.clone().add(11, "days")
            ) && (d = !0);
          }
        },
      });
    },
    456015: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchUserOffer: function () {
            return u;
          },
          acknowledgeUserOffer: function () {
            return d;
          },
        });
      var s = n("872717"),
        a = n("151426"),
        l = n("913144"),
        i = n("10641"),
        r = n("872173"),
        o = n("49111");
      async function u() {
        l.default.dispatch({ type: "BILLING_USER_OFFER_FETCH_START" });
        try {
          var e, t, n;
          let u = await s.HTTP.post({ url: o.Endpoints.USER_OFFER }),
            d =
              null !== (e = u.body.user_trial_offer) && void 0 !== e ? e : null,
            c = null !== (t = u.body.user_discount) && void 0 !== t ? t : null,
            E =
              null !== (n = u.body.user_discount_offer) && void 0 !== n
                ? n
                : null;
          return (
            null == d &&
              (0, i.isDismissibleContentDismissed)(
                a.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING
              ) &&
              (0, r.removeDismissedContent)(
                a.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING
              ),
            l.default.dispatch({
              type: "BILLING_USER_OFFER_FETCH_SUCCESS",
              userTrialOffer: d,
              userDiscount: c,
              userDiscountOffer: E,
            }),
            { userTrialOffer: d, userDiscount: c, userDiscountOffer: E }
          );
        } catch (e) {
          l.default.dispatch({ type: "BILLING_USER_OFFER_FETCH_FAIL" });
        }
      }
      function d(e, t) {
        let n = null != e && null == e.expires_at ? e.id : void 0,
          a = null != t && null == t.expires_at ? t.id : void 0;
        if (void 0 !== n || void 0 !== a)
          return s.HTTP.post({
            url: o.Endpoints.USER_OFFER_ACKNOWLEDGED,
            body: { user_trial_offer_id: n, user_discount_offer_id: a },
            oldFormErrors: !0,
          })
            .then(e => {
              var t, n, s;
              l.default.dispatch({
                type: "BILLING_USER_OFFER_ACKNOWLEDGED_SUCCESS",
                userTrialOffer:
                  null !== (t = e.body.user_trial_offer) && void 0 !== t
                    ? t
                    : null,
                userDiscount:
                  null !== (n = e.body.user_discount) && void 0 !== n
                    ? n
                    : null,
                userDiscountOffer:
                  null !== (s = e.body.user_discount_offer) && void 0 !== s
                    ? s
                    : null,
              });
            })
            .catch(e => {
              404 === e.status &&
                l.default.dispatch({
                  type: "BILLING_USER_OFFER_ACKNOWLEDGED_SUCCESS",
                  userTrialOffer: null,
                  userDiscount: null,
                  userDiscountOffer: null,
                });
            });
      }
    },
    167877: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NitroBrandedAttachmentExperiment: function () {
            return a;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2024-03_nitro_branded_attachment",
        label: "Nitro branded border and pill on large attachment hover",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Users see Nitro branded border and pill when hovering the cursor on a large attachment",
            config: { enabled: !0 },
          },
        ],
      });
    },
    781084: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-09_premium_likelihood_discount_offers",
        label: "Premium Likelihood Discount Offers",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 0,
            label: "Control group. Users will only get trial offers",
            config: { enabled: !0 },
          },
          {
            id: 1,
            label: "Premium likelihood discount enabled for user.",
            config: { enabled: !0 },
          },
          {
            id: 2,
            label: "Holdout. No trial or discount offers",
            config: { enabled: !0 },
          },
        ],
      });
      var l = a;
    },
    191007: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2024-03_premium_offer_generic_endpoint",
        label: "Premium Offer Generic Endpoint",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Uses Generic Premium Offer Endpoint for all offers.",
            config: { enabled: !0 },
          },
        ],
      });
      var l = a;
    },
    983424: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PremiumTier2TrialOfferNoticeExperiment: function () {
            return a;
          },
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-10_premium_tier_2_trial_offer_expiring_notice",
        label: "Premium Tier 2 Trial Offer Expiring Notice",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      var l = function () {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return a.useExperiment(
          { location: "experiment_hook" },
          { autoTrackExposure: e, disable: t }
        );
      };
    },
    786161: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2024-01_reactivation_user_discount_offer_experiment",
        label: "Reactivation User Discount Offer",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 0,
            label: "users receive reactivation trial offers",
            config: { enabled: !0 },
          },
          {
            id: 1,
            label:
              "users receive neither reactivation trial offers nor reactivation discount offers",
            config: { enabled: !0 },
          },
          {
            id: 2,
            label: "users receive reactivation discount offers",
            config: { enabled: !0 },
          },
        ],
      });
      var l = a;
    },
    897107: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-09_window_32_deprecation_message",
        label: "show deprecation message for 32-bit Windows",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "show message", config: { enabled: !0 } }],
      });
      var l = a;
    },
    367594: function (e, t, n) {
      "use strict";
      function s(e) {
        let t = Number(e.content);
        return isNaN(t) || 0 === t ? 1 : t;
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    583711: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGiftCodeAcceptModal: function () {
            return E;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("697218"),
        i = n("521012"),
        r = n("659500"),
        o = n("719923"),
        u = n("676379"),
        d = n("646718"),
        c = n("49111");
      function E(e) {
        let {
            processedCode: t,
            channelContext: E,
            customGiftMessage: f,
            giftInfo: _,
          } = e,
          T = !1,
          I = null,
          m = l.default.getCurrentUser(),
          N = (0, o.isPremiumAtLeast)(
            null == m ? void 0 : m.premiumType,
            d.PremiumTypes.TIER_0
          );
        (0, a.openModalLazy)(
          async () => {
            let { default: e } = await n.el("669146").then(n.bind(n, "669146"));
            return n => {
              var a, l;
              return (0, s.jsx)(e, {
                code: t,
                channelContext: E,
                customGiftMessage: f,
                emojiName:
                  null == _
                    ? void 0
                    : null === (a = _.emoji) || void 0 === a
                      ? void 0
                      : a.name,
                soundId:
                  null == _
                    ? void 0
                    : null === (l = _.sound) || void 0 === l
                      ? void 0
                      : l.id,
                onComplete: (e, t) => {
                  (I = e),
                    t &&
                      ((T = t),
                      e.isSubscription &&
                        null == i.default.getPremiumSubscription(!1) &&
                        (0, u.setCanPlayWowMoment)(!0));
                },
                ...n,
              });
            };
          },
          {
            onCloseCallback: () => {
              var e;
              T &&
                null != I &&
                !N &&
                I.isSubscription &&
                (null == I
                  ? void 0
                  : null === (e = I.subscriptionPlan) || void 0 === e
                    ? void 0
                    : e.premiumSubscriptionType) === d.PremiumTypes.TIER_2 &&
                r.ComponentDispatch.dispatch(
                  c.ComponentActions.PREMIUM_SUBSCRIPTION_CREATED
                );
            },
          }
        );
      }
    },
    695827: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("79112"),
        l = n("216422"),
        i = n("489622"),
        r = n("909469"),
        o = n("959905"),
        u = n("485138"),
        d = n("49111"),
        c = n("994428"),
        E = n("782340"),
        f = n("231537"),
        _ = e => {
          let { notice: t, noticeType: n, dismissCurrentNotice: _ } = e,
            T = (null == t ? void 0 : t.metadata.premiumSubscription) != null,
            I = (0, o.useLocalizedPromoQuery)();
          if (
            ((0, u.useTrackLocalizedPricingPromoImpression)(
              d.AnalyticsSections.NOTIFICATION_BAR,
              null == I ? void 0 : I.countryCode
            ),
            null == I)
          )
            return null;
          let m = I.countryCode,
            N = I.currency,
            p = I.paymentSourceTypes.length > 0;
          return (0, s.jsxs)(i.default, {
            color: T ? i.NoticeColors.BRAND : i.NoticeColors.PREMIUM_TIER_2,
            children: [
              (0, s.jsx)(i.NoticeCloseButton, {
                onClick: () => _(c.ContentDismissActionType.UNKNOWN),
                noticeType: n,
              }),
              !T && (0, s.jsx)(l.default, { className: f.premiumIcon }),
              (0, r.getLocalizedPricingNotice)(m, N, p, T),
              (0, s.jsx)(i.PrimaryCTANoticeButton, {
                onClick: () => {
                  _(c.ContentDismissActionType.UNKNOWN),
                    a.default.open(d.UserSettingsSections.PREMIUM);
                },
                noticeType: n,
                children: E.default.Messages.LEARN_MORE,
              }),
            ],
          });
        };
    },
    62587: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NitroTooltipLabel: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("216422"),
        i = n("244738");
      function r(e) {
        let { tooltipText: t, textColor: n } = e;
        return (0, s.jsxs)("span", {
          className: i.tooltipTextContainer,
          children: [
            (0, s.jsx)(l.default, { className: i.nitroWheel }),
            (0, s.jsx)(a.Text, {
              className: i.tooltipText,
              variant: "text-sm/medium",
              color: null != n ? n : "text-normal",
              children: t,
            }),
          ],
        });
      }
    },
    170898: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("298386"),
        o = n("77078"),
        u = n("812204"),
        d = n("685665"),
        c = n("649844"),
        E = n("697218"),
        f = n("216422"),
        _ = n("994402"),
        T = n("719923"),
        I = n("167877"),
        m = n("646718"),
        N = n("782340"),
        p = n("452207");
      function S(e) {
        let { attachmentProps: t, channelType: n, children: l } = e,
          [S, C] = a.useState(!1),
          A = a.useRef(null),
          h = E.default.getCurrentUser(),
          g = (0, T.isPremiumExactly)(h, m.PremiumTypes.TIER_2),
          M = I.NitroBrandedAttachmentExperiment.useExperiment(
            { location: "PremiumAttachmentWrapper" },
            { autoTrackExposure: !1 }
          ).enabled,
          { analyticsLocations: O } = (0, d.default)(
            u.default.CHANNEL_TEXT_AREA,
            u.default.MESSAGE_ATTACHMENT
          ),
          R = t
            .map(e => e.attachment.size)
            .sort()
            .pop(),
          L = r.ChannelTypesSets.GUILD.has(n) ? 104857600 : 26214400;
        if (
          (a.useEffect(
            () => () => {
              null != A.current && clearTimeout(A.current);
            },
            []
          ),
          null == R || R < L)
        )
          return (0, s.jsx)(s.Fragment, { children: l });
        let v =
            t.filter(e =>
              (0, _.isMediaAttachment)(
                (0, _.getAttachmentKind)(e.attachment, e.inlineMedia)
              )
            ).length > 0,
          P = e => {
            I.NitroBrandedAttachmentExperiment.trackExposure({
              location: "PremiumAttachmentWrapper_handleMouseOver",
            }),
              M &&
                (null != A.current && clearTimeout(A.current),
                C(!0),
                e &&
                  (A.current = setTimeout(() => {
                    C(!1);
                  }, 3e3)));
          },
          D = () => {
            M &&
              (null != A.current && clearTimeout(A.current),
              (A.current = setTimeout(() => {
                C(!1);
              }, 300)));
          };
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)("div", {
              className: i(p.nitroBorder, { [p.nitroBorderHover]: S }),
              onFocus: () => P(!0),
              onMouseEnter: () => P(!0),
              onBlur: D,
              onMouseLeave: D,
              children: v
                ? l
                : (0, s.jsx)("div", { className: p.negativeTop, children: l }),
            }),
            (0, s.jsx)("div", {
              className: p.extraNitroPill,
              onBlur: D,
              onMouseLeave: D,
              children: (0, s.jsx)(o.Tooltip, {
                text: g
                  ? N.default.Messages.PREMIUM_ATTACHMENT_HOVER_SUBSCRIBER
                  : N.default.Messages.PREMIUM_ATTACHMENT_HOVER_NON_SUBSCRIBER,
                position: "right",
                children: e =>
                  (0, s.jsxs)(o.Clickable, {
                    ...e,
                    className: i(p.nitroPill, {
                      [p.nitroPillHover]: S,
                      [p.nitroPillPointerCursor]: !g,
                    }),
                    onFocus: () => P(!1),
                    onMouseOver: () => P(!1),
                    onClick: () => {
                      !g &&
                        (0, c.default)({
                          subscriptionTier: m.PremiumSubscriptionSKUs.TIER_2,
                          analyticsLocations: O,
                        });
                    },
                    children: [
                      (0, s.jsx)(f.default, { className: p.nitroWheel }),
                      (0, s.jsx)(o.Text, {
                        className: p.nitroText,
                        variant: "text-xxs/semibold",
                        children: N.default.Messages.POWERED_BY_NITRO,
                      }),
                    ],
                  }),
              }),
            }),
          ],
        });
      }
    },
    929479: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("70102"),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("812204"),
        o = n("649844"),
        u = n("697218"),
        d = n("340412"),
        c = n("719923"),
        E = n("456015"),
        f = n("982457"),
        _ = n("157829");
      class T extends i.default {
        _initialize() {
          __OVERLAY__
            ? l.default.subscribe(
                "PREMIUM_PAYMENT_MODAL_OPEN",
                this._handlePremiumPaymentModalOpen
              )
            : (l.default.subscribe(
                "PREMIUM_PAYMENT_MODAL_CLOSE",
                this._handlePremiumPaymentModalClose
              ),
              l.default.subscribe(
                "MESSAGE_LENGTH_UPSELL",
                this.handleMessageLengthUpsell
              ),
              l.default.subscribe(
                "POST_CONNECTION_OPEN",
                this._maybeFetchPremiumOffer
              ));
        }
        _terminate() {
          __OVERLAY__
            ? l.default.unsubscribe(
                "PREMIUM_PAYMENT_MODAL_OPEN",
                this._handlePremiumPaymentModalOpen
              )
            : (l.default.unsubscribe(
                "PREMIUM_PAYMENT_MODAL_CLOSE",
                this._handlePremiumPaymentModalClose
              ),
              l.default.unsubscribe(
                "MESSAGE_LENGTH_UPSELL",
                this.handleMessageLengthUpsell
              ),
              l.default.unsubscribe(
                "POST_CONNECTION_OPEN",
                this._maybeFetchPremiumOffer
              ));
        }
        handleMessageLengthUpsell(e) {
          let { channel: t, content: l } = e;
          (0, a.openModalLazy)(async () => {
            let { default: e } = await n.el("571034").then(n.bind(n, "571034"));
            return n => (0, s.jsx)(e, { channel: t, content: l, ...n });
          });
        }
        openPremiumPaymentModalInApp(e) {
          if (__OVERLAY__)
            throw Error(
              "Should not use this function from the overlay, use ModalAPI.openModal instead"
            );
          return new Promise((t, n) => {
            (0, o.default)({
              ...e,
              onClose: e => {
                e ? t() : n();
              },
            });
          });
        }
        openPremiumPaymentModalInOverlay(e) {
          if (__OVERLAY__)
            throw Error(
              "Should not use this function from the overlay, use ModalAPI.openModal instead"
            );
          let {
            initialPlanId: t,
            subscriptionTier: n,
            followupSKUInfo: s,
            analyticsObject: a,
          } = null != e ? e : {};
          return new Promise((e, i) => {
            (this._premiumPaymentModalCloseResolve = e),
              (this._premiumPaymentModalCloseReject = i),
              l.default.dispatch({
                type: "PREMIUM_PAYMENT_MODAL_OPEN",
                initialPlanId: t,
                subscriptionTier: n,
                followupSKUInfo: s,
                analyticsObject: a,
              });
          });
        }
        constructor(...e) {
          super(...e),
            (this._premiumPaymentModalCloseResolve = null),
            (this._premiumPaymentModalCloseReject = null),
            (this._maybeFetchPremiumOffer = () => {
              let e = u.default.getCurrentUser();
              if (
                null != e &&
                e.verified &&
                !(0, c.isPremium)(e) &&
                d.default.shouldFetchOffer()
              ) {
                let e = (0, _.shouldHitUserOfferEndPoints)("PremiumManager");
                e ? (0, E.fetchUserOffer)() : f.default.fetchUserTrialOffer();
              }
            }),
            (this._handlePremiumPaymentModalOpen = e => {
              (0, o.default)({
                ...e,
                analyticsLocations: [r.default.OVERLAY],
                onClose: e => {
                  l.default.dispatch({
                    type: "PREMIUM_PAYMENT_MODAL_CLOSE",
                    didSucceed: e,
                  });
                },
              });
            }),
            (this._handlePremiumPaymentModalClose = e => {
              let { didSucceed: t } = e;
              t && null != this._premiumPaymentModalCloseResolve
                ? this._premiumPaymentModalCloseResolve()
                : null != this._premiumPaymentModalCloseReject &&
                  this._premiumPaymentModalCloseReject(),
                (this._premiumPaymentModalCloseResolve = null),
                (this._premiumPaymentModalCloseReject = null);
            });
        }
      }
      var I = new T();
    },
    425538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("70102");
      var s = n("37983");
      n("884691");
      var a = n("174727"),
        l = n("812204"),
        i = n("685665"),
        r = n("649844"),
        o = n("216422"),
        u = n("489622"),
        d = n("917247"),
        c = n("646718"),
        E = n("49111"),
        f = n("782340"),
        _ = n("231537"),
        T = function (e) {
          var t;
          let { dismissCurrentNotice: n, subscriptionTier: T } = e,
            { analyticsLocations: I } = (0, i.default)(
              (function (e) {
                switch (e) {
                  case c.PremiumSubscriptionSKUs.TIER_0:
                    return l.default.PREMIUM_TIER_0_TRIAL_ENDING_NOTICE;
                  case c.PremiumSubscriptionSKUs.TIER_2:
                    return l.default.PREMIUM_TIER_2_TRIAL_ENDING_NOTICE;
                  default:
                    throw Error("Unsupported subscription tier: ".concat(e));
                }
              })(T)
            ),
            m = (0, d.usePremiumTrialOffer)(),
            N = (0, a.default)(
              null != m && null != m.expires_at ? Date.parse(m.expires_at) : 0
            );
          return null == m ||
            (null === (t = m.subscription_trial) || void 0 === t
              ? void 0
              : t.sku_id) !== T ||
            null == m.expires_at ||
            Object.values(N).every(e => 0 === e)
            ? null
            : (0, s.jsxs)(u.default, {
                color: (function (e) {
                  switch (e) {
                    case c.PremiumSubscriptionSKUs.TIER_0:
                      return u.NoticeColors.PREMIUM_TIER_0;
                    case c.PremiumSubscriptionSKUs.TIER_2:
                      return u.NoticeColors.PREMIUM_TIER_2;
                    default:
                      throw Error("Unsupported subscription tier: ".concat(e));
                  }
                })(T),
                children: [
                  (0, s.jsx)(u.NoticeCloseButton, { onClick: n }),
                  (0, s.jsx)(o.default, { className: _.premiumIcon }),
                  (function (e, t) {
                    switch (e) {
                      case c.PremiumSubscriptionSKUs.TIER_0:
                        return t.days > 0
                          ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_DAYS_VARIANT.format(
                              { days: t.days }
                            )
                          : t.hours > 0
                            ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_HOURS_VARIANT.format(
                                { hours: t.hours }
                              )
                            : f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_MINUTES_VARIANT.format(
                                { minutes: Math.max(t.minutes, 1) }
                              );
                      case c.PremiumSubscriptionSKUs.TIER_2:
                        return t.days > 0
                          ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_DAYS_VARIANT.format(
                              { days: t.days }
                            )
                          : t.hours > 0
                            ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_HOURS_VARIANT.format(
                                { hours: t.hours }
                              )
                            : f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_MINUTES_VARIANT.format(
                                { minutes: Math.max(t.minutes, 1) }
                              );
                      default:
                        throw Error(
                          "Unsupported subscription tier: ".concat(e)
                        );
                    }
                  })(T, N),
                  (0, s.jsx)(u.NoticeButton, {
                    onClick: () => {
                      (0, r.default)({
                        trialId: m.trial_id,
                        subscriptionTier: T,
                        analyticsLocations: I,
                        analyticsObject: {
                          page: E.AnalyticsPages.IN_APP,
                          section: E.AnalyticsSections.NOTIFICATION_BAR,
                          object: E.AnalyticsObjects.BUTTON_CTA,
                        },
                      });
                    },
                    children: (function (e) {
                      switch (e) {
                        case c.PremiumSubscriptionSKUs.TIER_0:
                          return f.default.Messages
                            .NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_CTA_VARIANT;
                        case c.PremiumSubscriptionSKUs.TIER_2:
                          return f.default.Messages
                            .NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_CTA_VARIANT;
                        default:
                          throw Error(
                            "Unsupported subscription tier: ".concat(e)
                          );
                      }
                    })(T),
                  }),
                ],
              });
        };
    },
    157829: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldHitUserOfferEndPoints: function () {
            return i;
          },
        });
      var s = n("781084"),
        a = n("191007"),
        l = n("786161");
      let i = e => {
        let { enabled: t } = s.default.getCurrentConfig(
            { location: e },
            { autoTrackExposure: !1 }
          ),
          { enabled: n } = a.default.getCurrentConfig(
            { location: e },
            { autoTrackExposure: !1 }
          ),
          { enabled: i } = l.default.getCurrentConfig(
            { location: e },
            { autoTrackExposure: !1 }
          );
        return t || i || n;
      };
    },
    116616: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("305961");
      function i(e) {
        let { onCloseCallback: t, analyticsLocations: i, ...r } = e;
        (0, a.openModalLazy)(
          async () => {
            let { default: e } = await n.el("341334").then(n.bind(n, "341334"));
            return t =>
              (0, s.jsx)(e, {
                ...t,
                ...r,
                analyticsLocations: i,
                guildCount: l.default.getGuildCount(),
                "aria-labelledby": "nitro-guild-cap-upsell",
              });
          },
          { onCloseCallback: t }
        );
      }
    },
    846564: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getApplicationSubscriptionSystemMessageASTContent: function () {
            return a;
          },
        });
      var s = n("782340");
      function a(e) {
        let { application: t, username: n, usernameOnClick: a, medium: l } = e;
        return null != t
          ? s.default.Messages.SYSTEM_MESSAGE_APPLICATION_SUBSCRIPTION_PURCHASE_MOBILE.astFormat(
              {
                username: n,
                applicationName: t.name,
                usernameOnClick: a,
                medium: l,
              }
            )
          : s.default.Messages.SYSTEM_MESSAGE_APPLICATION_SUBSCRIPTION_PURCHASE_FROM_DELETED_APPLICATION_MOBILE.astFormat(
              { username: n, usernameOnClick: a, medium: l }
            );
      }
    },
    569382: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("232259"),
        i = n("8161"),
        r = n("304198"),
        o = n("998603"),
        u = n("724654");
      function d(e) {
        let { message: t, channel: n, compact: d } = e,
          c = (0, a.default)(t),
          E = t.application,
          f = (0, l.useUsernameHook)({
            user: t.author,
            channelId: n.id,
            guildId: n.guild_id,
            messageId: t.id,
          });
        return (0, s.jsx)(r.default, {
          iconNode: (0, s.jsx)(i.default, { className: u.ticketIcon }),
          timestamp: t.timestamp,
          compact: d,
          children: (0, o.getApplicationSubscriptionSystemMessageContent)({
            application: E,
            username: c.nick,
            usernameHook: f(c),
          }),
        });
      }
    },
    998603: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getApplicationSubscriptionSystemMessageContent: function () {
            return l;
          },
        });
      var s = n("49111"),
        a = n("782340");
      function l(e) {
        let { application: t, username: n, usernameHook: l = s.NOOP } = e;
        return null != t
          ? a.default.Messages.SYSTEM_MESSAGE_APPLICATION_SUBSCRIPTION_PURCHASE.format(
              { username: n, applicationName: t.name, usernameHook: l }
            )
          : a.default.Messages.SYSTEM_MESSAGE_APPLICATION_SUBSCRIPTION_PURCHASE_FROM_DELETED_APPLICATION.format(
              { username: n, usernameHook: l }
            );
      }
    },
    950576: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getPrivateChannelIntegrationAddedSystemMessageContent: function () {
            return i;
          },
          getPrivateChannelIntegrationRemovedSystemMessageContent: function () {
            return r;
          },
          getPrivateChannelIntegrationAddedSystemMessageASTContent:
            function () {
              return o;
            },
          getPrivateChannelIntegrationRemovedSystemMessageASTContent:
            function () {
              return u;
            },
        });
      var s = n("701909"),
        a = n("49111"),
        l = n("782340");
      function i(e) {
        let {
          application: t,
          username: n,
          usernameHook: i = a.NOOP,
          applicationNameHook: r = a.NOOP,
        } = e;
        return null != t
          ? l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_ADDED.format({
              username: n,
              otherUsername: t.name,
              usernameHook: i,
              otherUsernameHook: r,
              helpCenterLink: s.default.getArticleURL(
                a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
              ),
            })
          : l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_ADDED_DELETED_APPLICATION.format(
              {
                username: n,
                usernameHook: i,
                helpCenterLink: s.default.getArticleURL(
                  a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                ),
              }
            );
      }
      function r(e) {
        let {
          application: t,
          username: n,
          usernameHook: i = a.NOOP,
          applicationNameHook: r = a.NOOP,
        } = e;
        return null != t
          ? l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_REMOVED.format({
              username: n,
              otherUsername: t.name,
              usernameHook: i,
              otherUsernameHook: r,
              helpCenterLink: s.default.getArticleURL(
                a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
              ),
            })
          : l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_REMOVED_DELETED_APPLICATION.format(
              {
                username: n,
                usernameHook: i,
                helpCenterLink: s.default.getArticleURL(
                  a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                ),
              }
            );
      }
      function o(e) {
        let {
          application: t,
          username: n,
          usernameOnClick: i,
          applicationNameOnClick: r,
          medium: o,
        } = e;
        return null != t
          ? l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_ADDED_MOBILE.astFormat(
              {
                username: n,
                otherUsername: t.name,
                usernameOnClick: i,
                otherUsernameOnClick: r,
                medium: o,
                helpCenterLink: {
                  url: s.default.getArticleURL(
                    a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                  ),
                },
              }
            )
          : l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_ADDED_DELETED_APPLICATION_MOBILE.astFormat(
              {
                username: n,
                usernameOnClick: i,
                medium: o,
                helpCenterLink: {
                  url: s.default.getArticleURL(
                    a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                  ),
                },
              }
            );
      }
      function u(e) {
        let {
          application: t,
          username: n,
          usernameOnClick: i,
          applicationNameOnClick: r,
          medium: o,
        } = e;
        return null != t
          ? l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_REMOVED_MOBILE.astFormat(
              {
                username: n,
                otherUsername: t.name,
                usernameOnClick: i,
                otherUsernameOnClick: r,
                medium: o,
                helpCenterLink: {
                  url: s.default.getArticleURL(
                    a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                  ),
                },
              }
            )
          : l.default.Messages.PRIVATE_CHANNEL_INTEGRATION_REMOVED_DELETED_APPLICATION_MOBILE.astFormat(
              {
                username: n,
                usernameOnClick: i,
                medium: o,
                helpCenterLink: {
                  url: s.default.getArticleURL(
                    a.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                  ),
                },
              }
            );
      }
    },
    86456: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PrivateChannelIntegrationAddedSystemMessage: function () {
            return p;
          },
          PrivateChannelIntegrationRemovedSystemMessage: function () {
            return S;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("77078"),
        i = n("272030"),
        r = n("574073"),
        o = n("232259"),
        u = n("506885"),
        d = n("981601"),
        c = n("697218"),
        E = n("304198"),
        f = n("315102"),
        _ = n("441823"),
        T = n("140596"),
        I = n("950576"),
        m = n("49111");
      function N(e, t) {
        return a.useCallback(
          a => (r, o) => {
            var E;
            let I = f.default.getApplicationIconURL({
                id: a.id,
                icon: a.icon,
                bot: a.bot,
                botIconFirst: !0,
              }),
              m = c.default.getUser(
                null === (E = a.bot) || void 0 === E ? void 0 : E.id
              ),
              N = T.default.getIntegration(e.id, a.id),
              p =
                e.isPrivate() && null != N
                  ? t => {
                      (0, i.openContextMenuLazy)(t, async () => {
                        let { default: t } = await n
                          .el("348866")
                          .then(n.bind(n, "348866"));
                        return n =>
                          (0, s.jsx)(t, { ...n, channel: e, integration: N });
                      });
                    }
                  : null != m
                    ? t => (0, _.openUserContextMenu)(t, m, e)
                    : void 0,
              { bot: S } = a;
            return null == S
              ? r
              : (0, s.jsx)(
                  l.Popout,
                  {
                    position: "right",
                    preload: () =>
                      (0, u.default)(S.id, I, {
                        guildId: e.guild_id,
                        channelId: e.id,
                      }),
                    renderPopout: n =>
                      (0, s.jsx)(d.default, {
                        ...n,
                        userId: S.id,
                        guildId: e.guild_id,
                        channelId: e.id,
                        messageId: t.id,
                      }),
                    children: e =>
                      (0, s.jsx)(l.Anchor, {
                        ...e,
                        onContextMenu: p,
                        children: r,
                      }),
                  },
                  o
                );
          },
          [e, t.id]
        );
      }
      function p(e) {
        let { message: t, channel: a, compact: l } = e,
          i = (0, r.default)(t),
          u = t.application,
          d = (0, o.useUsernameHook)({
            user: t.author,
            channelId: a.id,
            guildId: a.guild_id,
            messageId: t.id,
          }),
          c = N(a, t);
        return (0, s.jsx)(E.default, {
          icon: n("127067"),
          timestamp: t.timestamp,
          compact: l,
          children: (0,
          I.getPrivateChannelIntegrationAddedSystemMessageContent)({
            application: u,
            username: i.nick,
            usernameHook: d(i),
            applicationNameHook: null != u ? c(u) : m.NOOP,
          }),
        });
      }
      function S(e) {
        let { message: t, channel: a, compact: l } = e,
          i = (0, r.default)(t),
          u = t.application,
          d = (0, o.useUsernameHook)({
            user: t.author,
            channelId: a.id,
            guildId: a.guild_id,
            messageId: t.id,
          }),
          c = N(a, t);
        return (0, s.jsx)(E.default, {
          icon: n("226315"),
          timestamp: t.timestamp,
          compact: l,
          children: (0,
          I.getPrivateChannelIntegrationRemovedSystemMessageContent)({
            application: u,
            username: i.nick,
            usernameHook: d(i),
            applicationNameHook: null != u ? c(u) : m.NOOP,
          }),
        });
      }
    },
    840895: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-09_proxy_block_notice",
        label: "Proxy Block Experiment",
        defaultConfig: { eligibleForNotice: !1 },
        treatments: [
          {
            id: 1,
            label: "Show nag bar when proxy blocks an API request",
            config: { eligibleForNotice: !0 },
          },
        ],
      });
      var l = a;
    },
    143573: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("446674"),
        a = n("913144");
      let l = !1;
      class i extends s.default.Store {
        get blockedByProxy() {
          return l;
        }
      }
      i.displayName = "ProxyBlockStore";
      var r = new i(a.default, {
        PROXY_BLOCKED_REQUEST: function (e) {
          l = !0;
        },
      });
    },
    407972: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("145131"),
        i = n("730541"),
        r = n("782340"),
        o = n("664316"),
        u = () =>
          (0, s.jsxs)(l.default, {
            align: l.default.Align.CENTER,
            justify: l.default.Justify.CENTER,
            direction: l.default.Direction.VERTICAL,
            className: o.popout,
            children: [
              (0, s.jsx)("img", {
                alt: "",
                src: (0, i.getPublicSystemMessageAvatar)(),
                className: o.avatar,
              }),
              (0, s.jsxs)(l.default, {
                align: l.default.Align.CENTER,
                justify: l.default.Justify.CENTER,
                className: o.nameWrapper,
                children: [
                  (0, s.jsx)(a.Tooltip, {
                    text: r.default.Messages.STAFF_BADGE_TOOLTIP,
                    children: e =>
                      (0, s.jsx)("div", { ...e, className: o.staffBadge }),
                  }),
                  (0, s.jsx)(a.Heading, {
                    className: o.header,
                    variant: "heading-md/semibold",
                    children: r.default.Messages.ANNOUNCEMENT_GUILD_POPOUT_NAME,
                  }),
                ],
              }),
              (0, s.jsx)(a.Text, {
                className: o.description,
                color: "header-secondary",
                variant: "text-sm/normal",
                children: r.default.Messages.ANNOUNCEMENT_GUILD_DESCRIPTION,
              }),
              (0, s.jsx)(a.Text, {
                className: o.description,
                color: "header-secondary",
                variant: "text-sm/normal",
                children: r.default.Messages.ANNOUNCEMENT_GUILD_HERE_TO_HELP,
              }),
            ],
          });
    },
    586269: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          QUARANTINE_APPEAL_LINK: function () {
            return s;
          },
        });
      let s = "https://dis.gd/appeal";
    },
    555226: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GameTileSizes: function () {
            return a;
          },
          default: function () {
            return E;
          },
        });
      var s,
        a,
        l = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        o = n("819855"),
        u = n("227231"),
        d = n("49111"),
        c = n("194829");
      ((s = a || (a = {}))[(s.SMALL = 24)] = "SMALL"),
        (s[(s.MEDIUM = 32)] = "MEDIUM");
      var E = function (e) {
        let {
          className: t,
          gameTileSize: n = 24,
          quest: s,
          theme: a = d.ThemeTypes.DARK,
        } = e;
        return (0, l.jsxs)("div", {
          className: r(c.partnerBranding, t),
          children: [
            (0, l.jsx)("img", {
              className: c.partnerBrandingGameTile,
              alt: "",
              src: (0, u.getGameTileAssetUrl)(s.id),
              style: {
                borderRadius: (function (e) {
                  switch (e) {
                    case 24:
                      return 3;
                    case 32:
                      return 4;
                  }
                })(n),
                width: n,
                height: n,
              },
            }),
            (0, l.jsx)("img", {
              className: c.partnerBrandingLogotype,
              alt: s.config.messages.gameTitle,
              src: (0, u.getGameLogotypeAssetUrl)(
                s.id,
                (0, o.isThemeDark)(a) ? d.ThemeTypes.DARK : d.ThemeTypes.LIGHT
              ),
            }),
          ],
        });
      };
    },
    315130: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("669491"),
        u = n("77078"),
        d = n("20606"),
        c = n("915639"),
        E = n("266926"),
        f = n("240481"),
        _ = n("773336"),
        T = n("227231"),
        I = n("782340"),
        m = n("220350"),
        N = function (e) {
          var t;
          let {
              className: n,
              color: l = o.default.colors.WHITE,
              quest: N,
              isInventory: p,
            } = e,
            S =
              (null === (t = N.userStatus) || void 0 === t
                ? void 0
                : t.completedAt) != null,
            C = (0, r.useStateFromStores)([c.default], () => c.default.locale),
            A = a.useMemo(() => (0, T.calculatePercentComplete)(N), [N]),
            h = 100 * A,
            g = (0, _.isWeb)() && !S,
            M = () =>
              (0, s.jsxs)("div", {
                className: m.desktopTooltip,
                style: { marginTop: p ? 8 : 0 },
                children: [
                  (0, s.jsx)(E.default, {
                    className: m.infoIcon,
                    height: p ? 16 : 12,
                    width: p ? 16 : 12,
                    color: p ? d.default.TEXT_MUTED : d.default.WHITE,
                  }),
                  (0, s.jsx)(u.Text, {
                    className: m.desktopTooltipText,
                    color: p ? "text-muted" : "always-white",
                    variant: p ? "text-xs/normal" : "text-xxs/normal",
                    children: I.default.Messages.QUESTS_PROGRESS_WEB_TIP,
                  }),
                ],
              });
          return g && !p
            ? (0, s.jsx)(M, {})
            : (0, s.jsxs)("div", {
                className: i(m.wrapper, n),
                style: { color: l.css },
                children: [
                  (0, s.jsxs)("div", {
                    className: m.percentCompleteWrapper,
                    children: [
                      (0, s.jsx)(u.Text, {
                        variant: "text-xs/semibold",
                        className: m.percentCompleteLabel,
                        color: "none",
                        children: (0, f.formatPercent)(C, A, {
                          roundingMode: "floor",
                        }),
                      }),
                      (0, s.jsx)("div", {
                        className: m.percentCompleteLabelOffset,
                        style: { width: "".concat(100 - h, "%") },
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: m.progressBar,
                    role: "progressbar",
                    "aria-valuenow": h,
                    children: (0, s.jsx)("div", {
                      className: m.progressBarFill,
                      style: { width: "".concat(h, "%") },
                    }),
                  }),
                  g && (0, s.jsx)(M, {}),
                ],
              });
        };
    },
    762985: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("782340"),
        o = n("513367"),
        u = function (e) {
          let {
            className: t,
            color: n = "header-primary",
            textOpacity: a = 0.9,
            bgOpacity: u = 0.2,
          } = e;
          return (0, s.jsxs)(i.Text, {
            variant: "text-xxs/medium",
            color: n,
            className: l(o.promotedTag, t),
            children: [
              (0, s.jsx)("span", {
                className: o.promotedTagBackground,
                style: { opacity: u },
              }),
              (0, s.jsx)("span", {
                style: { opacity: a },
                children: r.default.Messages.QUESTS_PROMOTED,
              }),
            ],
          });
        };
    },
    301259: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useQuestCardSize: function () {
            return c;
          },
          QuestsCard: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("731898"),
        i = n("534801"),
        r = n("775725"),
        o = n("749332"),
        u = n("419292"),
        d = n("896451");
      function c() {
        let { ref: e, width: t } = (0, l.default)(),
          n = a.useMemo(
            () => (null == t || t > 460 ? "lg" : t > 280 ? "sm" : "xs"),
            [t]
          );
        return { containerRef: e, size: n };
      }
      let E = e => {
        let { quest: t, location: n } = e,
          [l, E] = a.useState(!1),
          f = a.useCallback(() => E(!0), []),
          _ = a.useCallback(() => E(!1), []),
          { containerRef: T, size: I } = c();
        return (0, s.jsx)(i.QuestContentImpressionTracker, {
          questId: t.id,
          questContent: n,
          children: e =>
            (0, s.jsx)(s.Fragment, {
              children: (0, s.jsxs)("div", {
                ref: t => {
                  (e.current = t), (T.current = t);
                },
                className: d.questsCard,
                onFocus: f,
                onMouseEnter: f,
                onBlur: _,
                onMouseLeave: _,
                children: [
                  (0, s.jsx)(o.default, {
                    isFocused: l,
                    quest: t,
                    location: n,
                    size: I,
                  }),
                  (0, s.jsx)(r.default, { quest: t, location: n, size: I }),
                  (0, s.jsx)(u.default, { quest: t, location: n }),
                ],
              }),
            }),
        });
      };
    },
    775725: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("446674"),
        r = n("77078"),
        o = n("206230"),
        u = n("393414"),
        d = n("181114"),
        c = n("815496"),
        E = n("448881"),
        f = n("879364"),
        _ = n("2973"),
        T = n("588025"),
        I = n("227231"),
        m = n("315130"),
        N = n("49111"),
        p = n("782340"),
        S = n("199890");
      let C = (e, t, n) =>
          n
            ? p.default.Messages.QUESTS_SEE_CODE
            : e || t
              ? p.default.Messages.QUESTS_CLAIM_REWARD
              : p.default.Messages.QUESTS_ACCEPT,
        A = (e, t) =>
          e
            ? p.default.Messages.QUESTS_COMPLETE_TOOLTIP
            : t
              ? p.default.Messages.QUESTS_IN_PROGRESS_TOOLTIP
              : p.default.Messages.QUESTS_ACCEPT_TOOLTIP,
        h = (e, t) => {
          var a, l, i;
          return (null === (a = e.userStatus) || void 0 === a
            ? void 0
            : a.enrolledAt) != null ||
            (null === (l = e.userStatus) || void 0 === l
              ? void 0
              : l.completedAt) != null ||
            (null === (i = e.userStatus) || void 0 === i
              ? void 0
              : i.claimedAt) != null
            ? () => {
                var a;
                (0, c.trackQuestContentClicked)(
                  e.id,
                  t,
                  (null === (a = e.userStatus) || void 0 === a
                    ? void 0
                    : a.claimedAt) != null
                    ? c.QuestContentCTA.SHOW_REWARD
                    : c.QuestContentCTA.CLAIM_REWARD
                ),
                  (0, r.openModalLazy)(async () => {
                    let { default: a } = await n
                      .el("36170")
                      .then(n.bind(n, "36170"));
                    return n => (0, s.jsx)(a, { ...n, quest: e, location: t });
                  });
              }
            : () => {
                (0, E.enrollInQuest)(e.id, {
                  questContent: t,
                  questContentCTA: c.QuestContentCTA.ACCEPT_QUEST,
                });
              };
        },
        g = (e, t, n) => {
          let s = e === T.QuestContent.QUEST_INVENTORY_CARD;
          return s && !n && "lg" === t
            ? "text-lg/medium"
            : "lg" === t
              ? "text-md/medium"
              : "sm" === t
                ? "text-sm/medium"
                : "text-xs/medium";
        };
      function M(e) {
        let {
          location: t,
          isQuestAccepted: n,
          containerSize: a,
          onClick: l,
          children: i,
        } = e;
        return t !== T.QuestContent.QUESTS_EMBED || n
          ? null
          : "xs" === a
            ? (0, s.jsx)(r.Clickable, {
                className: S.learnMoreLink,
                tag: "span",
                onClick: l,
                children: (0, s.jsx)(r.Text, {
                  variant: "text-sm/medium",
                  color: "text-link",
                  children: i,
                }),
              })
            : (0, s.jsx)(r.Button, {
                wrapperClassName: S.ctaButtonWrapper,
                color: r.ButtonColors.PRIMARY,
                onClick: l,
                children: i,
              });
      }
      var O = e => {
        var t, n, a, c;
        let { quest: E, location: O, size: R } = e,
          L =
            (null === (t = E.userStatus) || void 0 === t
              ? void 0
              : t.completedAt) != null,
          v =
            (null === (n = E.userStatus) || void 0 === n
              ? void 0
              : n.enrolledAt) != null,
          P =
            (null === (a = E.userStatus) || void 0 === a
              ? void 0
              : a.claimedAt) != null,
          D = v && !P && O !== T.QuestContent.QUESTS_EMBED,
          x = (0, i.useStateFromStores)(
            [o.default],
            () => o.default.useReducedMotion
          ),
          y = v ? r.ButtonColors.BRAND_NEW : r.ButtonColors.GREEN,
          U = C(L, v, P),
          j = A(L, v),
          b = h(E, O),
          G = v && !L,
          B = (0, f.useQuestFormattedDate)(
            null === (c = E.userStatus) || void 0 === c
              ? void 0
              : c.completedAt,
            { year: "numeric", month: "long", day: "numeric" }
          ),
          k = (0, i.useStateFromStores)([_.default], () =>
            _.default.isEnrolling(E.id)
          ),
          F = O === T.QuestContent.QUESTS_EMBED,
          w = O === T.QuestContent.QUEST_INVENTORY_CARD;
        return (0, s.jsxs)("div", {
          className: l(S.outerContainer, {
            [S.outerContainerSm]: "sm" === R,
            [S.outerContainerXs]: "xs" === R,
          }),
          children: [
            (0, s.jsx)("img", {
              src: (0, I.getRewardAssetUrl)(E.id),
              alt: "",
              className: l(S.questReward, S.gridImg, {
                [S.questRewardGiftInventory]: w && "lg" === R,
                [S.questRewardEmbed]: F && "lg" === R,
                [S.questRewardEmbedSm]: "sm" === R,
                [S.questRewardEmbedXs]: "xs" === R,
              }),
            }),
            (0, s.jsxs)("div", {
              className: l(S.gridText, S.taskDetails),
              children: [
                (0, s.jsx)(r.Text, {
                  variant: g(O, R, v),
                  className: S.taskInstructions,
                  children: p.default.Messages.QUESTS_STREAM_TASK.format({
                    minutes: E.config.streamDurationRequirementMinutes,
                    gameTitle: E.config.messages.gameTitle,
                  }),
                }),
                (0, s.jsx)(r.Text, {
                  variant: "lg" === R ? "text-sm/medium" : "text-xs/medium",
                  color: "text-muted",
                  children: L
                    ? p.default.Messages.QUEST_REWARD_COMPLETED.format({
                        reward: E.config.messages.rewardNameWithArticle,
                        date: B,
                      })
                    : p.default.Messages.QUEST_REWARD.format({
                        reward: E.config.messages.rewardNameWithArticle,
                      }),
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: l(S.ctaButtonContainer, S.gridCtaButtons),
              children: [
                (0, s.jsx)(M, {
                  location: O,
                  isQuestAccepted: v,
                  containerSize: R,
                  onClick: () => {
                    (0, u.transitionTo)(N.Routes.SETTINGS("inventory"));
                  },
                  children: p.default.Messages.QUESTS_LEARN_MORE_V2,
                }),
                (0, s.jsx)(r.Tooltip, {
                  text: j,
                  tooltipContentClassName: S.ctaTooltipCopy,
                  shouldShow: !P,
                  children: e =>
                    L && !x
                      ? (0, s.jsx)(d.default, {
                          ...e,
                          wrapperClassName: S.ctaButtonWrapper,
                          color: y,
                          disabled: G,
                          submitting: k,
                          onClick: b,
                          children: U,
                        })
                      : (0, s.jsx)(r.Button, {
                          ...e,
                          wrapperClassName: S.ctaButtonWrapper,
                          color: y,
                          disabled: G,
                          submitting: k,
                          onClick: b,
                          children: U,
                        }),
                }),
              ],
            }),
            D &&
              (0, s.jsx)(m.default, {
                className: S.gridProgressBar,
                color: L
                  ? r.tokens.colors.TEXT_POSITIVE
                  : r.tokens.colors.BG_BRAND,
                quest: E,
                isInventory: w,
              }),
          ],
        });
      };
    },
    749332: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("862337"),
        u = n("77078"),
        d = n("206230"),
        c = n("161778"),
        E = n("433487"),
        f = n("58608"),
        _ = n("306160"),
        T = n("815496"),
        I = n("879364"),
        m = n("588025"),
        N = n("227231"),
        p = n("555226"),
        S = n("762985"),
        C = n("275986"),
        A = n("782340"),
        h = n("444092");
      let g = e => {
        let { quest: t, location: n } = e,
          [l, i] = a.useState(!1),
          r = a.useRef(new o.Timeout());
        a.useEffect(() => {
          let e = r.current;
          return function () {
            e.stop();
          };
        }, []);
        let d = () => {
          (0, T.trackQuestContentClicked)(
            t.id,
            n,
            T.QuestContentCTA.COPY_QUEST_URL
          ),
            (0, _.copy)((0, N.getQuestUrl)(t.id)),
            i(!0),
            r.current.start(1e3, () => i(!1));
        };
        return (0, s.jsx)(u.Tooltip, {
          forceOpen: l,
          shouldShow: l,
          color: u.Tooltip.Colors.GREEN,
          text: A.default.Messages.COPY_SUCCESS_1,
          children: () =>
            (0, s.jsx)(u.Button, {
              color: u.Button.Colors.PRIMARY,
              size: u.Button.Sizes.SMALL,
              onClick: () => d(),
              children: A.default.Messages.QUESTS_SHARE_QUEST,
            }),
        });
      };
      var M = e => {
        var t;
        let { isFocused: n, quest: l, location: o, size: _ } = e,
          T = (0, r.useStateFromStores)(
            [c.default],
            () => c.default.getState().theme
          ),
          M = (0, r.useStateFromStores)(
            [d.default],
            () => d.default.useReducedMotion
          ),
          O = a.useMemo(() => l.config.videoAssets.includes(o), [l, o]),
          R = a.useRef(null),
          L = (0, I.useIsQuestExpired)(l),
          v =
            (null === (t = l.userStatus) || void 0 === t
              ? void 0
              : t.completedAt) != null,
          P = (0, I.useQuestFormattedDate)(l.config.expiresAt, {
            year: "numeric",
            month: "long",
            day: "numeric",
          }),
          D = (0, I.useQuestFormattedDate)(l.config.rewardCodeExpiresAt, {
            year: "numeric",
            month: "long",
            day: "numeric",
          });
        return (
          a.useEffect(() => {
            null != R.current &&
              (n
                ? R.current.play()
                : (R.current.pause(), (R.current.currentTime = 0)));
          }, [n]),
          (0, s.jsxs)("div", {
            className: i(h.outerContainer, {
              [h.outerContainerGiftInventory]:
                o === m.QuestContent.QUEST_INVENTORY_CARD,
              [h.outerContainerEmbed]: o === m.QuestContent.QUESTS_EMBED,
            }),
            children: [
              (0, s.jsx)(f.default, {
                autoPlay: !1,
                loop: !1,
                muted: !0,
                playsInline: !0,
                className: h.questSplash,
                controls: !1,
                poster: (0, N.getHeroStaticAssetUrl)(l.id),
                ref: R,
                children:
                  !M &&
                  O &&
                  (0, s.jsx)("source", {
                    src: (0, N.getHeroAnimatedAssetUrl)(l.id),
                    type: "video/webm",
                  }),
              }),
              (0, s.jsxs)("div", {
                className: h.header,
                children: [
                  (0, s.jsxs)("div", {
                    className: h.headerContent,
                    children: [
                      (0, s.jsxs)("div", {
                        children: [
                          (0, s.jsxs)("div", {
                            className: h.iconLogotypeContainer,
                            children: [
                              (0, s.jsx)(p.default, {
                                className: h.partnerBranding,
                                gameTileSize: p.GameTileSizes.MEDIUM,
                                quest: l,
                                theme: T,
                              }),
                              (0, s.jsx)(S.default, { color: "always-white" }),
                            ],
                          }),
                          (0, s.jsxs)("div", {
                            className: h.questInfo,
                            children: [
                              (0, s.jsx)(u.Heading, {
                                variant:
                                  "lg" === _
                                    ? "heading-xxl/bold"
                                    : "sm" === _
                                      ? "heading-xl/bold"
                                      : "heading-lg/bold",
                                children: A.default.Messages.QUEST.format({
                                  questName: l.config.messages.questName,
                                }),
                              }),
                              (0, s.jsx)(u.Text, {
                                variant: "text-xs/normal",
                                children: v
                                  ? A.default.Messages.QUESTS_CLAIM_BY.format({
                                      expirationDate: D,
                                    })
                                  : A.default.Messages.QUESTS_AVAILABLE_UNTIL.format(
                                      { expirationDate: P }
                                    ),
                              }),
                            ],
                          }),
                        ],
                      }),
                      !L &&
                        o === m.QuestContent.QUEST_INVENTORY_CARD &&
                        (0, s.jsx)(g, { quest: l, location: o }),
                    ],
                  }),
                  (0, s.jsx)(C.QuestsEntryContextMenuPopout, {
                    questContent: o,
                    quest: l,
                    shouldShowDisclosure: !0,
                    hideLearnMore: o === m.QuestContent.QUEST_INVENTORY_CARD,
                    showShareLink: o === m.QuestContent.QUESTS_EMBED,
                    children: e =>
                      (0, s.jsx)(u.Clickable, {
                        ...e,
                        className: h.submenuWrapper,
                        "aria-label": A.default.Messages.ACTIONS,
                        children: (0, s.jsx)(E.default, {
                          className: h.submenuIcon,
                        }),
                      }),
                  }),
                ],
              }),
            ],
          })
        );
      };
    },
    419292: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("448881"),
        i = n("473603"),
        r = e => {
          let { quest: t } = e;
          return t.preview
            ? (0, s.jsxs)("div", {
                className: i.questControls,
                children: [
                  (0, s.jsx)(a.Text, {
                    variant: "text-sm/medium",
                    className: i.questControlsTitle,
                    children: "Preview Controls:",
                  }),
                  (0, s.jsx)(a.Button, {
                    color: a.Button.Colors.PRIMARY,
                    onClick: () => {
                      (0, l.resetQuestDismissibilityStatus)(t.id);
                    },
                    children: "Reset Dismissibility",
                  }),
                  (0, s.jsx)(a.Button, {
                    color: a.Button.Colors.PRIMARY,
                    onClick: () => {
                      (0, l.resetQuestPreviewStatus)(t.id);
                    },
                    children: "Reset Enrollment",
                  }),
                  (0, s.jsx)(a.Button, {
                    color: a.Button.Colors.PRIMARY,
                    onClick: () => {
                      (0, l.completeQuestPreview)(t.id);
                    },
                    children: "Complete Quest",
                  }),
                ],
              })
            : null;
        };
    },
    987099: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          InvalidQuestsEmbed: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("79112"),
        o = n("301259"),
        u = n("49111"),
        d = n("782340"),
        c = n("567782"),
        E = n("238554");
      function f() {
        return (0, s.jsx)(i.TooltipContainer, {
          text: d.default.Messages.GIFT_INVENTORY,
          className: c.buttonContainer,
          tooltipContentClassName: c.giftInventoryButtonTooltipCopy,
          children: (0, s.jsx)(i.Button, {
            className: c.button,
            color: i.ButtonColors.BRAND_NEW,
            onClick: () => {
              r.default.open(u.UserSettingsSections.INVENTORY);
            },
            children: d.default.Messages.GIFT_INVENTORY,
          }),
        });
      }
      function _() {
        let { containerRef: e, size: t } = (0, o.useQuestCardSize)();
        return (0, s.jsxs)("div", {
          ref: t => (e.current = t),
          className: l(c.container, {
            [c.wide]: "lg" === t,
            [c.tall]: "lg" !== t,
          }),
          children: [
            (0, s.jsxs)("div", {
              className: c.contentContainer,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "lg" === t ? "heading-xl/bold" : "heading-lg/bold",
                  color: "header-primary",
                  children: d.default.Messages.QUESTS_EMBED_INVALID_HEADING,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "lg" === t ? "text-sm/medium" : "text-xs/medium",
                  color: "text-normal",
                  className: c.mobileWebCopy,
                  children: d.default.Messages.QUESTS_EMBED_INVALID_BODY,
                }),
                (0, s.jsx)(f, {}),
              ],
            }),
            (0, s.jsx)("div", {
              className: c.imgContainer,
              children: (0, s.jsx)("img", {
                src: E,
                alt: "",
                className: c.missingQuestImage,
              }),
            }),
          ],
        });
      }
    },
    993735: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("879364"),
        i = n("588025"),
        r = n("301259"),
        o = n("987099"),
        u = n("571777");
      function d(e) {
        let { questId: t } = e,
          { quests: n, isFetchingCurrentQuests: d } = (0, l.useQuests)([t], {
            fetch: !0,
          });
        if (d) return (0, s.jsx)(a.Spinner, { className: u.spinner });
        if (0 === n.length) return (0, s.jsx)(o.InvalidQuestsEmbed, {});
        let [c] = n;
        return (0, s.jsx)(
          r.QuestsCard,
          { quest: c, location: i.QuestContent.QUESTS_EMBED },
          c.id
        );
      }
    },
    275986: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          QuestsEntryContextMenuPopout: function () {
            return A;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("821455"),
        i = n("923748"),
        r = n("551042"),
        o = n("77078"),
        u = n("272030"),
        d = n("79112"),
        c = n("545158"),
        E = n("124824"),
        f = n("306160"),
        _ = n("128259"),
        T = n("815496"),
        I = n("448881"),
        m = n("227231"),
        N = n("49111"),
        p = n("843455"),
        S = n("782340");
      function C(e) {
        var t;
        let a = (0, m.isDismissible)(e.questContent);
        return (0, s.jsxs)(o.Menu, {
          variant: "fixed",
          onSelect: () => {
            null != e.onSelect ? e.onSelect() : (0, u.closeContextMenu)();
          },
          navId: "quests-entry",
          "aria-label": S.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
          onClose:
            null !== (t = null == e ? void 0 : e.onClose) && void 0 !== t
              ? t
              : p.NOOP,
          children: [
            (0, s.jsxs)(
              o.MenuGroup,
              {
                children: [
                  (0, s.jsx)(o.MenuItem, {
                    id: "get-game",
                    label: S.default.Messages.QUESTS_GET_THIS_GAME,
                    action: () => {
                      (0, _.handleClick)({
                        href: e.quest.config.getGameLink,
                        onConfirm: () => {
                          (0, T.trackQuestContentClicked)(
                            e.quest.id,
                            e.questContent,
                            T.QuestContentCTA.CONTEXT_MENU_OPEN_GAME_LINK
                          ),
                            (0, c.default)(e.quest.config.getGameLink);
                        },
                      });
                    },
                    icon: i.LinkExternalMediumIcon,
                  }),
                  !0 === e.showShareLink &&
                    (0, s.jsx)(o.MenuItem, {
                      id: "share-link",
                      label: S.default.Messages.QUESTS_SHARE_LINK,
                      action: () => {
                        (0, T.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          T.QuestContentCTA.CONTEXT_MENU_COPY_LINK
                        ),
                          (0, f.copy)((0, m.getQuestUrl)(e.quest.id));
                      },
                      icon: l.CopyIcon,
                    }),
                ],
              },
              "major-actions"
            ),
            (0, s.jsxs)(
              o.MenuGroup,
              {
                children: [
                  !e.hideLearnMore &&
                    (0, s.jsx)(o.MenuItem, {
                      id: "learn-more",
                      label: S.default.Messages.QUESTS_LEARN_MORE_V2,
                      action: () => {
                        (0, T.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          T.QuestContentCTA.CONTEXT_MENU_LEARN_MORE
                        ),
                          d.default.open(N.UserSettingsSections.INVENTORY);
                      },
                    }),
                  e.shouldShowDisclosure &&
                    (0, s.jsx)(o.MenuItem, {
                      id: "display-disclosure",
                      label: S.default.Messages.QUESTS_DISCLOSURE_LABEL,
                      action: () => {
                        (0, T.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          T.QuestContentCTA.CONTEXT_MENU_OPEN_DISCLOSURE
                        ),
                          (0, r.openModalLazy)(async () => {
                            let { default: t } = await n
                              .el("970143")
                              .then(n.bind(n, "970143"));
                            return n =>
                              (0, s.jsx)(t, {
                                ...n,
                                questContent: e.questContent,
                                questConfig: e.quest.config,
                              });
                          });
                      },
                    }),
                  a &&
                    (0, s.jsx)(o.MenuItem, {
                      id: "hide-entrypoint",
                      label: S.default.Messages.QUESTS_HIDE_THIS,
                      action: () => {
                        (0, T.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          T.QuestContentCTA.CONTEXT_MENU_HIDE_CONTENT
                        ),
                          (0, m.isDismissible)(e.questContent) &&
                            (0, I.dismissQuestContent)(
                              e.quest.id,
                              e.questContent
                            );
                      },
                      subtext: S.default.Messages.QUESTS_FIND_QUEST,
                    }),
                ],
              },
              "minor-actions"
            ),
          ],
        });
      }
      function A(e) {
        let {
            children: t,
            onOpen: n,
            onClose: l,
            preventIdle: i,
            quest: r,
            questContent: u,
            ...d
          } = e,
          c = a.useCallback(() => {
            (0, T.trackQuestContentClicked)(
              r.id,
              u,
              T.QuestContentCTA.OPEN_CONTEXT_MENU
            ),
              null != n && n();
          }, [n, r, u]);
        return (0, s.jsx)(o.Popout, {
          onRequestOpen: c,
          onRequestClose: l,
          renderPopout: e => {
            let { closePopout: t } = e;
            return i
              ? (0, s.jsx)(E.default, {
                  children: (0, s.jsx)(C, {
                    ...d,
                    quest: r,
                    questContent: u,
                    onClose: t,
                  }),
                })
              : (0, s.jsx)(C, { ...d, quest: r, questContent: u, onClose: t });
          },
          animation: o.Popout.Animation.NONE,
          children: e => t(e),
        });
      }
    },
    170213: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SafetyHubView: function () {
            return u;
          },
          SafetyHubLinks: function () {
            return I;
          },
          SafetyHubPolicyNoticeKeys: function () {
            return m;
          },
          SafetySystemNotificationCtaType: function () {
            return d;
          },
          SafetySystemNotificationEmbedKeys: function () {
            return N;
          },
          SafetyHubAnalyticsActions: function () {
            return c;
          },
          SafetyHubAnalyticsActionSource: function () {
            return E;
          },
          AppealIngestionSignal: function () {
            return f;
          },
          AppealIngestionSignalOrder: function () {
            return p;
          },
          DEFAULT_MEDIA_MAX_WIDTH: function () {
            return S;
          },
          DEFAULT_MEDIA_MAX_HEIGHT: function () {
            return C;
          },
          AppealIngestionSlideTypes: function () {
            return _;
          },
          SlidesOrderDsaEligible: function () {
            return A;
          },
          SlidesOrderNonDsaEligible: function () {
            return h;
          },
        });
      var s,
        a,
        l,
        i,
        r,
        o,
        u,
        d,
        c,
        E,
        f,
        _,
        T = n("49111");
      ((s = u || (u = {})).SETTINGS = "SETTINGS"),
        (s.ACCOUNT_STANDING = "ACCOUNT_STANDING");
      class I {}
      (I.TOS_LINK = "https://discord.com/terms"),
        (I.COMMUNITY_GUIDELINES = "https://discord.com/guidelines"),
        (I.APPEALS_LINK =
          "https://support.discord.com/hc/requests/new?ticket_form_id=360000029731"),
        (I.WARNING_SYSTEM_HELPCENTER_LINK =
          "https://support.discord.com/hc/articles/18210965981847"),
        (I.AGE_VERIFICATION_LINK =
          "https://support.discord.com/hc/requests/new?ticket_form_id=360000029731"),
        (I.SPAM_LINK =
          "https://support.discord.com/hc/requests/new?ticket_form_id=360000029731&tf_360055270593=__dc.ticket_form-tnsv1_appeals_other_questions__");
      class m {}
      (m.CLASSIFICATION_ID = "classification_id"),
        (m.INCIDENT_TIMESTAMP = "incident_time"),
        ((a = d || (d = {})).POLICY_VIOLATION_DETAIL =
          "policy_violation_detail"),
        (a.LEARN_MORE_LINK = "learn_more_link");
      class N {}
      (N.ICON_TYPE = "icon_type"),
        (N.HEADER = "header"),
        (N.BODY = "body"),
        (N.CTAS = "ctas"),
        (N.TIMESTAMP = "timestamp"),
        (N.THEME = "theme"),
        (N.CLIENT_VERSION_MESSAGE = "client_version_message"),
        (N.LEARN_MORE_LINK = "learn_more_link"),
        (N.CLASSIFICATION_ID = "classification_id"),
        ((l = c || (c = {}))[(l.ViewViolationDetail = 0)] =
          "ViewViolationDetail"),
        (l[(l.ViewViolationsDropdown = 1)] = "ViewViolationsDropdown"),
        (l[(l.ClickLetUsKnow = 2)] = "ClickLetUsKnow"),
        (l[(l.ClickAgeVerificationLink = 3)] = "ClickAgeVerificationLink"),
        (l[(l.ClickSpamWebformLink = 4)] = "ClickSpamWebformLink"),
        (l[(l.ClickLearnMoreLink = 5)] = "ClickLearnMoreLink"),
        (l[(l.ClickCommunityGuidelinesLink = 6)] =
          "ClickCommunityGuidelinesLink"),
        (l[(l.ClickWarningSystemHelpcenterLink = 7)] =
          "ClickWarningSystemHelpcenterLink"),
        ((i = E || (E = {}))[(i.SystemDM = 0)] = "SystemDM"),
        (i[(i.StandingTab = 1)] = "StandingTab"),
        (i[(i.AppealIngestion = 2)] = "AppealIngestion"),
        Object.freeze({
          SPEED_BUMP: T.AnalyticsSections.APPEAL_INGESTION_SPEED_BUMP,
          COLLECT_SIGNAL: T.AnalyticsSections.APPEAL_INGESTION_COLLECT_SIGNAL,
          CONFIRM_SUBMISSION:
            T.AnalyticsSections.APPEAL_INGESTION_CONFIRM_SUBMISSION,
          REQUEST_SENT: T.AnalyticsSections.APPEAL_INGESTION_REQUEST_SENT,
          THANKS: T.AnalyticsSections.APPEAL_INGESTION_THANKS,
          SPAM: T.AnalyticsSections.APPEAL_INGESTION_SPAM,
        }),
        ((r = f || (f = {}))[(r.DIDNT_VIOLATE_POLICY = 0)] =
          "DIDNT_VIOLATE_POLICY"),
        (r[(r.TOO_STRICT_UNFAIR = 1)] = "TOO_STRICT_UNFAIR"),
        (r[(r.DONT_AGREE_PENALTY = 2)] = "DONT_AGREE_PENALTY"),
        (r[(r.SOMETHING_ELSE = 3)] = "SOMETHING_ELSE");
      let p = [0, 1, 2, 3],
        S = 372,
        C = 279;
      ((o = _ || (_ = {})).SPEED_BUMP = "speed-bump"),
        (o.COLLECT_SIGNAL = "collect-signal"),
        (o.CONFIRM_SUBMISSION = "confirm-submission"),
        (o.REQUEST_SENT = "request-sent"),
        (o.THANKS = "thanks");
      let A = {
          "speed-bump": { next: "collect-signal", prev: null },
          "collect-signal": { next: "confirm-submission", prev: "speed-bump" },
          "confirm-submission": {
            next: "request-sent",
            prev: "collect-signal",
          },
          "request-sent": { next: null, prev: null },
        },
        h = {
          "collect-signal": { next: "thanks", prev: null },
          thanks: { next: null, prev: null },
        };
    },
    908539: function (e, t, n) {
      "use strict";
      var s, a, l, i, r, o, u, d, c, E, f;
      n.r(t),
        n.d(t, {
          ContentIdType: function () {
            return s;
          },
          AppealStatusType: function () {
            return a;
          },
          ActionType: function () {
            return i;
          },
          AccountStandingState: function () {
            return r;
          },
          ClassificationRequestState: function () {
            return o;
          },
        }),
        ((s || (s = {})).MESSAGE = "message"),
        ((u = a || (a = {}))[(u.REVIEW_PENDING = 1)] = "REVIEW_PENDING"),
        (u[(u.CLASSIFICATION_UPHELD = 2)] = "CLASSIFICATION_UPHELD"),
        (u[(u.CLASSIFICATION_INVALIDATED = 3)] = "CLASSIFICATION_INVALIDATED"),
        ((d = l || (l = {}))[(d.UNSPECIFIED = 0)] = "UNSPECIFIED"),
        (d[(d.UNKNOWN = 1)] = "UNKNOWN"),
        (d[(d.UNSOLICITED_PORNOGRAPHY = 100)] = "UNSOLICITED_PORNOGRAPHY"),
        (d[(d.NONCONSENSUAL_PORNOGRAPHY = 200)] = "NONCONSENSUAL_PORNOGRAPHY"),
        (d[(d.GLORIFYING_VIOLENCE = 210)] = "GLORIFYING_VIOLENCE"),
        (d[(d.HATE_SPEECH = 220)] = "HATE_SPEECH"),
        (d[(d.CRACKED_ACCOUNTS = 230)] = "CRACKED_ACCOUNTS"),
        (d[(d.ILLICIT_GOODS = 240)] = "ILLICIT_GOODS"),
        (d[(d.SOCIAL_ENGINEERING = 250)] = "SOCIAL_ENGINEERING"),
        (d[(d.TEST_CLASSIFICATION = 9e3)] = "TEST_CLASSIFICATION"),
        (d[(d.TEST_CLASSIFICATION_LOW = 9001)] = "TEST_CLASSIFICATION_LOW"),
        (d[(d.TEST_CLASSIFICATION_SEVERE = 9002)] =
          "TEST_CLASSIFICATION_SEVERE"),
        ((c = i || (i = {}))[(c.BAN = 0)] = "BAN"),
        (c[(c.TEMP_BAN = 1)] = "TEMP_BAN"),
        (c[(c.GLOBAL_QUARANTINE = 2)] = "GLOBAL_QUARANTINE"),
        (c[(c.REQUIRE_VERIFICATION = 3)] = "REQUIRE_VERIFICATION"),
        (c[(c.USER_WARNING = 4)] = "USER_WARNING"),
        (c[(c.USER_SPAMMER = 5)] = "USER_SPAMMER"),
        (c[(c.CHANNEL_SPAM = 6)] = "CHANNEL_SPAM"),
        (c[(c.MESSAGE_SPAM = 7)] = "MESSAGE_SPAM"),
        (c[(c.DISABLE_SUSPICIOUS_ACTIVITY = 8)] =
          "DISABLE_SUSPICIOUS_ACTIVITY"),
        (c[(c.LIMITED_ACCESS = 9)] = "LIMITED_ACCESS"),
        (c[(c.CHANNEL_SCHEDULE_DELETE = 10)] = "CHANNEL_SCHEDULE_DELETE"),
        (c[(c.MESSAGE_CONTENT_REMOVAL = 11)] = "MESSAGE_CONTENT_REMOVAL"),
        (c[(c.GUILD_DISABLE_INVITE = 12)] = "GUILD_DISABLE_INVITE"),
        (c[(c.USER_CONTENT_REMOVAL = 13)] = "USER_CONTENT_REMOVAL"),
        (c[(c.USER_USERNAME_MANGLE = 14)] = "USER_USERNAME_MANGLE"),
        (c[(c.GUILD_LIMITED_ACCESS = 15)] = "GUILD_LIMITED_ACCESS"),
        (c[(c.USER_MESSAGE_REMOVAL = 16)] = "USER_MESSAGE_REMOVAL"),
        (c[(c.GUILD_DELETE = 20)] = "GUILD_DELETE"),
        ((E = r || (r = {}))[(E.ALL_GOOD = 100)] = "ALL_GOOD"),
        (E[(E.LIMITED = 200)] = "LIMITED"),
        (E[(E.VERY_LIMITED = 300)] = "VERY_LIMITED"),
        (E[(E.AT_RISK = 400)] = "AT_RISK"),
        (E[(E.SUSPENDED = 500)] = "SUSPENDED"),
        ((f = o || (o = {}))[(f.PENDING = 0)] = "PENDING"),
        (f[(f.SUCCESS = 1)] = "SUCCESS"),
        (f[(f.FAILED = 2)] = "FAILED");
    },
    736393: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getClassificationRelativeIncidentTime: function () {
            return c;
          },
          getAttachmentFilename: function () {
            return E;
          },
          parseMessageEmbedForProps: function () {
            return f;
          },
          isFlaggedContentEmpty: function () {
            return _;
          },
          getAppealSignalDisplayText: function () {
            return T;
          },
          capitalizeText: function () {
            return I;
          },
          isGuildClassification: function () {
            return m;
          },
          getRequestReviewErrorFromCode: function () {
            return N;
          },
        }),
        n("808653");
      var s = n("866227"),
        a = n.n(s),
        l = n("651693"),
        i = n("908539"),
        r = n("170213"),
        o = n("49111"),
        u = n("894488"),
        d = n("782340");
      function c(e) {
        return a().to(a(e));
      }
      function E(e) {
        var t, n;
        return (0, l.isImageFile)(e.filename) || (0, l.isVideoFile)(e.filename)
          ? ""
              .concat(u.SPOILER_ATTACHMENT_PREFIX)
              .concat(null !== (t = e.filename) && void 0 !== t ? t : ".png")
          : null !== (n = e.filename) && void 0 !== n
            ? n
            : "";
      }
      function f(e) {
        var t, n, s, a;
        if (null == e.fields) return;
        let l = e.fields.reduce((e, t) => ((e[t.rawName] = t.rawValue), e), {});
        return {
          header:
            null !== (t = l[r.SafetySystemNotificationEmbedKeys.HEADER]) &&
            void 0 !== t
              ? t
              : "",
          icon: l[r.SafetySystemNotificationEmbedKeys.ICON_TYPE],
          body:
            null !== (n = l[r.SafetySystemNotificationEmbedKeys.BODY]) &&
            void 0 !== n
              ? n
              : "",
          ctas: (null !== (s = l[r.SafetySystemNotificationEmbedKeys.CTAS]) &&
          void 0 !== s
            ? s
            : ""
          )
            .split(",")
            .filter(e => "" !== e),
          timestamp: parseFloat(
            null !== (a = l[r.SafetySystemNotificationEmbedKeys.TIMESTAMP]) &&
              void 0 !== a
              ? a
              : 0
          ),
          theme: l[r.SafetySystemNotificationEmbedKeys.THEME],
          learn_more_link:
            l[r.SafetySystemNotificationEmbedKeys.LEARN_MORE_LINK],
          classification_id:
            l[r.SafetySystemNotificationEmbedKeys.CLASSIFICATION_ID],
        };
      }
      function _(e) {
        if (e.type === i.ContentIdType.MESSAGE)
          return "" === e.content && 0 === e.attachments.length;
        return !0;
      }
      let T = e => {
          let t = {
            [r.AppealIngestionSignal.DIDNT_VIOLATE_POLICY]:
              d.default.Messages
                .APPEAL_INGESTION_MODAL_COLLECT_SIGNAL_DIDNT_VIOLATE_POLICY,
            [r.AppealIngestionSignal.TOO_STRICT_UNFAIR]:
              d.default.Messages
                .APPEAL_INGESTION_MODAL_COLLECT_SIGNAL_TOO_STRICT_UNFAIR,
            [r.AppealIngestionSignal.DONT_AGREE_PENALTY]:
              d.default.Messages
                .APPEAL_INGESTION_MODAL_COLLECT_SIGNAL_DONT_AGREE_PENALTY,
            [r.AppealIngestionSignal.SOMETHING_ELSE]:
              d.default.Messages
                .APPEAL_INGESTION_MODAL_COLLECT_SIGNAL_SOMETHING_ELSE,
          };
          return t[e];
        },
        I = e =>
          null == e || 0 === e.length
            ? ""
            : 1 === e.length
              ? e.toUpperCase()
              : "".concat(e.charAt(0).toUpperCase()).concat(e.slice(1));
      function m(e) {
        return null != e && null != e.guild_metadata;
      }
      let N = e => {
        if (e === o.AbortCodes.DSA_APPEAL_REQUEST_DEFLECTION)
          return d.default.Messages
            .APPEAL_INGESTION_MODAL_CONFIRM_SUBMISSION_DEFLECTION_ERROR;
        return d.default.Messages
          .APPEAL_INGESTION_MODAL_CONFIRM_SUBMISSION_ERROR;
      };
    },
    705423: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SafetyPolicyNotice: function () {
            return f;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("866227"),
        l = n.n(a),
        i = n("669491"),
        r = n("779807"),
        o = n("77078"),
        u = n("170213"),
        d = n("782340"),
        c = n("743582");
      let E = e => l().diff(l.unix(e), "days");
      function f(e) {
        var t, a, l, f, _;
        if (null == e.message.embeds || null == e.message.embeds[0].fields)
          return null;
        let T = e.message.embeds[0],
          I =
            null !==
              (l =
                null === (t = T.fields) || void 0 === t
                  ? void 0
                  : t.find(
                      e =>
                        e.rawName ===
                        u.SafetyHubPolicyNoticeKeys.CLASSIFICATION_ID
                    )) && void 0 !== l
              ? l
              : void 0,
          m =
            null !== (f = null == I ? void 0 : I.rawValue) && void 0 !== f
              ? f
              : void 0,
          N =
            null !==
              (_ =
                null === (a = T.fields) || void 0 === a
                  ? void 0
                  : a.find(
                      e =>
                        e.rawName ===
                        u.SafetyHubPolicyNoticeKeys.INCIDENT_TIMESTAMP
                    )) && void 0 !== _
              ? _
              : void 0,
          p = null == N || null == N.rawValue ? void 0 : parseFloat(N.rawValue);
        return null == m || null == p
          ? null
          : (0, s.jsxs)(o.Clickable, {
              onClick: () => {
                (0, o.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("825138")
                    .then(n.bind(n, "825138"));
                  return t =>
                    (0, s.jsx)(e, {
                      classificationId: m,
                      source: u.SafetyHubAnalyticsActionSource.SystemDM,
                      transitionState: t.transitionState,
                      onClose: t.onClose,
                    });
                });
              },
              className: c.safetyPolicyNoticeContainer,
              children: [
                (0, s.jsxs)("div", {
                  className: c.noticeContent,
                  children: [
                    (0, s.jsxs)("div", {
                      className: c.headerRow,
                      children: [
                        (0, s.jsx)(r.WarningIcon, {
                          className: c.warningIcon,
                          color: i.default.colors.STATUS_DANGER,
                        }),
                        (0, s.jsx)(o.Text, {
                          variant: "text-md/semibold",
                          children:
                            d.default.Messages.SAFETY_POLICY_NOTICE_HEADER,
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", {
                      className: c.incidentTiming,
                      children: (0, s.jsx)(o.Text, {
                        variant: "text-xs/medium",
                        children:
                          d.default.Messages.SAFETY_POLICY_NOTICE_DAYS_AGO.format(
                            { daysAgo: E(p) }
                          ),
                      }),
                    }),
                    (0, s.jsx)("div", {
                      className: c.noticeBody,
                      children: (0, s.jsx)(o.Text, {
                        variant: "text-md/normal",
                        color: "text-muted",
                        children: d.default.Messages.SAFETY_POLICY_NOTICE_BODY,
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)("div", {
                  className: c.footerContainer,
                  children: (0, s.jsx)(o.Button, {
                    look: o.Button.Looks.BLANK,
                    className: c.detailsButton,
                    color: o.Button.Colors.WHITE,
                    children: d.default.Messages.SAFETY_POLICY_NOTICE_BUTTON,
                  }),
                }),
              ],
            });
      }
    },
    315021: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SafetySystemNotification: function () {
            return S;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("866227"),
        l = n.n(a),
        i = n("669491"),
        r = n("779807"),
        o = n("77078"),
        u = n("733160"),
        d = n("736393"),
        c = n("170213"),
        E = n("782340"),
        f = n("749230");
      let _ = e => l().diff(l.unix(e), "days");
      function T(e) {
        let { classificationId: t } = e;
        return (0, s.jsx)(o.Anchor, {
          onClick: () => {
            (0, o.openModalLazy)(async () => {
              let { default: e } = await n
                .el("825138")
                .then(n.bind(n, "825138"));
              return n =>
                (0, s.jsx)(e, {
                  classificationId: t,
                  source: c.SafetyHubAnalyticsActionSource.SystemDM,
                  transitionState: n.transitionState,
                  onClose: n.onClose,
                });
            });
          },
          className: f.detailsButton,
          children:
            E.default.Messages.SAFETY_SYSTEM_NOTIFICATION_SEE_DETAILS_BUTTON,
        });
      }
      function I(e) {
        let { learnMoreLink: t } = e;
        return (0, s.jsx)(o.Anchor, {
          className: f.detailsButton,
          href: t,
          children:
            E.default.Messages.SAFETY_SYSTEM_NOTIFICATION_LEARN_MORE_BUTTON,
        });
      }
      function m(e) {
        let { ctaType: t, classificationId: n, learnMoreLink: a } = e;
        switch (t) {
          case c.SafetySystemNotificationCtaType.POLICY_VIOLATION_DETAIL:
            if (null == n) return null;
            return (0, s.jsx)(T, { classificationId: n });
          case c.SafetySystemNotificationCtaType.LEARN_MORE_LINK:
            if (null == a) return null;
            return (0, s.jsx)(I, { learnMoreLink: a });
          default:
            return null;
        }
      }
      function N(e) {
        let { iconType: t } = e,
          n = {
            default: (0, s.jsx)(u.default, {
              color: i.default.colors.TEXT_LINK.css,
            }),
            danger: (0, s.jsx)(r.WarningIcon, {
              color: i.default.colors.STATUS_DANGER,
            }),
          };
        return null != t && t in n
          ? (0, s.jsx)("div", { className: f.icon, children: n[t] })
          : null;
      }
      function p(e) {
        let { children: t, theme: n } = e,
          a = {
            default: f.defaultFooterContainer,
            danger: f.dangerFooterContainer,
          };
        return (0, s.jsx)("div", {
          className: a[null != n ? n : "default"],
          children: t,
        });
      }
      function S(e) {
        var t, n;
        if (null == e.embed || null == e.embed.fields) return null;
        let a = (0, d.parseMessageEmbedForProps)(e.embed);
        return null == a
          ? null
          : (0, s.jsxs)(o.Clickable, {
              className: f.safetyPolicyNoticeContainer,
              children: [
                (0, s.jsxs)("div", {
                  className: f.noticeContent,
                  children: [
                    (0, s.jsxs)("div", {
                      className: f.headerRow,
                      children: [
                        (0, s.jsx)(N, { iconType: a.icon }),
                        (0, s.jsx)(o.Text, {
                          variant: "text-md/semibold",
                          children: a.header,
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", {
                      className: f.incidentTiming,
                      children: (0, s.jsx)(o.Text, {
                        variant: "text-xs/medium",
                        children:
                          E.default.Messages.SAFETY_POLICY_NOTICE_DAYS_AGO.format(
                            {
                              daysAgo: _(
                                null !== (n = a.timestamp) && void 0 !== n
                                  ? n
                                  : 0
                              ),
                            }
                          ),
                      }),
                    }),
                    (0, s.jsx)("div", {
                      className: f.noticeBody,
                      children: (0, s.jsx)(o.Text, {
                        variant: "text-md/normal",
                        color: "text-muted",
                        children: a.body,
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)(p, {
                  theme: a.theme,
                  children:
                    null === (t = a.ctas) || void 0 === t
                      ? void 0
                      : t.map(e =>
                          (0, s.jsx)(
                            m,
                            {
                              ctaType: e,
                              classificationId: a.classification_id,
                              learnMoreLink: a.learn_more_link,
                            },
                            e
                          )
                        ),
                }),
              ],
            });
      }
    },
    93015: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SafetyUserSentimentExperiment: function () {
            return a;
          },
        });
      var s = n("862205");
      let a = (0, s.createExperiment)({
        kind: "user",
        id: "2023-05_safety_user_sentiment",
        label: "Safety User Sentiment Feedback Eligible",
        defaultConfig: { isEligible: !1 },
        treatments: [{ id: 1, label: "Eligible", config: { isEligible: !0 } }],
      });
    },
    703537: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForNotice: function () {
            return u;
          },
          markNoticeDismissed: function () {
            return c;
          },
        });
      var s = n("866227"),
        a = n.n(s),
        l = n("801340"),
        i = n("872173"),
        r = n("374363"),
        o = n("93015");
      let u = e => {
          var t;
          if (!d(e)) return !1;
          let n =
              null === (t = r.default.settings.userContent) || void 0 === t
                ? void 0
                : t.safetyUserSentimentNoticeDismissedAt,
            s = null != n ? l.Timestamp.toDate(n) : void 0,
            i = null != s ? a().diff(s, "days") : null,
            u = null != n;
          if (u && !(null != i && i > 30)) return !1;
          let { isEligible: c } =
            o.SafetyUserSentimentExperiment.getCurrentConfig(
              { location: "657a81_1" },
              { autoTrackExposure: !0 }
            );
          return c;
        },
        d = e => null != e && Date.now() - e.createdAt.getTime() > 2592e6,
        c = () => {
          let e = l.Timestamp.now();
          i.PreloadedUserSettingsActionCreators.updateAsync(
            "userContent",
            t => {
              t.safetyUserSentimentNoticeDismissedAt = e;
            },
            i.UserSettingsDelay.INFREQUENT_USER_ACTION
          );
        };
    },
    153327: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showSafetyToast: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("324045");
      function i(e) {
        let { text: t, id: n } = e;
        (0, a.showToast)(
          (0, a.createToast)(t, a.ToastType.CUSTOM, {
            component: (0, s.jsx)(l.SafetyToast, { text: t }, n),
          })
        );
      }
    },
    324045: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SafetyToast: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("877585"),
        r = n("77078"),
        o = n("653829"),
        u = n("882746");
      function d(e) {
        let { text: t } = e;
        return (0, s.jsxs)("div", {
          className: l(u.toast, o.toast),
          children: [
            (0, s.jsx)(i.ShieldIcon, { color: r.tokens.colors.TEXT_BRAND }),
            (0, s.jsx)(r.Text, {
              className: u.content,
              color: "header-primary",
              variant: "text-md/normal",
              children: t,
            }),
          ],
        });
      }
    },
    866253: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("996866");
      function i(e) {
        let { activity: t, user: n, source: i, ...r } = e,
          {
            label: o,
            tooltip: u,
            loading: d,
            disabled: c,
            onClick: E,
          } = (0, l.useSpotifyJoinAction)(t, n, i);
        return (0, s.jsx)(a.Tooltip, {
          text: u,
          children: e => {
            let { onMouseEnter: t, onMouseLeave: n } = e;
            return (0, s.jsx)(a.Button, {
              ...r,
              color: c ? a.Button.Colors.PRIMARY : a.Button.Colors.GREEN,
              onClick: E,
              onMouseEnter: t,
              onMouseLeave: n,
              disabled: !d && c,
              submitting: d,
              children: o,
            });
          },
        });
      }
    },
    130563: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("446674"),
        a = n("42203"),
        l = n("18494");
      function i() {
        return (0, s.useStateFromStores)([l.default, a.default], () => {
          let e = l.default.getVoiceChannelId();
          if (null != e) {
            let t = a.default.getChannel(e);
            if (null == t ? void 0 : t.isGuildStageVoice()) return t;
          }
          return null;
        });
      }
    },
    55282: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("42203"),
        o = n("18494"),
        u = n("328275"),
        d = n("489622"),
        c = n("244480"),
        E = n("130563"),
        f = n("151642"),
        _ = n("782340"),
        T = n("275544");
      function I(e) {
        let t = o.default.getVoiceChannelId();
        if (null == t) return;
        let n = r.default.getChannel(t);
        null != n && (0, c.audienceAckRequestToSpeak)(n, e);
      }
      function m() {
        var e;
        let t = (0, E.default)(),
          n =
            null !==
              (e = (0, f.useStageBlockedUsersCount)(
                null == t ? void 0 : t.id
              )) && void 0 !== e
              ? e
              : 0;
        return null == t
          ? null
          : (0, s.jsxs)(d.default, {
              className: T.container,
              color: d.NoticeColors.DEFAULT,
              children: [
                (0, s.jsx)("div", {
                  children: _.default.Messages.STAGE_SPEAK_INVITE_HEADER,
                }),
                n > 0
                  ? (0, s.jsxs)("div", {
                      className: T.blocked,
                      children: [
                        (0, s.jsx)(u.default, {
                          width: 12,
                          height: 12,
                          className: T.blockedIcon,
                        }),
                        (0, s.jsx)("div", {
                          className: T.blockedText,
                          children:
                            _.default.Messages.STAGE_SPEAK_INVITE_HEADER_BLOCKED_USERS.format(
                              { number: n }
                            ),
                        }),
                      ],
                    })
                  : null,
                (0, s.jsx)(i.Button, {
                  className: l(T.button, T.acceptButton),
                  size: i.Button.Sizes.MIN,
                  color: i.Button.Colors.WHITE,
                  onClick: () => I(!1),
                  children: (0, s.jsx)(i.Text, {
                    className: T.acceptText,
                    variant: "text-xs/normal",
                    color: "none",
                    children: _.default.Messages.STAGE_SPEAK_INVITE_ACCEPT,
                  }),
                }),
                (0, s.jsx)(i.Button, {
                  className: l(T.button, T.declineButton),
                  look: i.Button.Looks.OUTLINED,
                  size: i.Button.Sizes.MIN,
                  color: i.Button.Colors.WHITE,
                  onClick: () => I(!0),
                  children: (0, s.jsx)(i.Text, {
                    className: T.declineText,
                    variant: "text-xs/normal",
                    color: "none",
                    children: _.default.Messages.STAGE_SPEAK_INVITE_DECLINE,
                  }),
                }),
              ],
            });
      }
    },
    943508: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("769846"),
        i = n("77078"),
        r = n("812204"),
        o = n("716241"),
        u = n("685665"),
        d = n("933629"),
        c = n("437472"),
        E = n("159885"),
        f = n("256860"),
        _ = n("161585"),
        T = n("41170"),
        I = n("139185"),
        m = n("49111"),
        N = n("646718"),
        p = n("170503");
      let S = (0, E.cssValueToNumber)(
          l.default.STICKERS_CONSTANTS_STICKER_DIMENSION
        ),
        C = e => {
          null != e &&
            o.default.trackWithMetadata(
              m.AnalyticEvents.EXPRESSION_TOOLTIP_VIEWED,
              {
                type: N.PremiumUpsellTypes.STICKER_IN_MESSAGE_HOVER,
                expression_id: e.id,
                expression_name: e.name,
                is_animated: (0, _.isAnimatedSticker)(e.format_type),
                is_custom: (0, _.isCustomSticker)(e.type),
              }
            );
        };
      var A = e => {
        let { renderableSticker: t, channel: n, isInteracting: l } = e,
          [o, E] = a.useState(!0),
          [_, m] = a.useState(String(Date.now())),
          [N] = (0, f.useStickerForRenderableSticker)(t, l),
          { analyticsLocations: A } = (0, u.default)(r.default.STICKER_MESSAGE),
          h = (0, s.jsxs)("span", {
            className: p.stickerName,
            children: [
              (0, s.jsx)(c.default, { className: p.stickerIcon }),
              (null != N ? N : t).name,
            ],
          });
        return (0, s.jsx)(u.AnalyticsLocationProvider, {
          value: A,
          children: (0, s.jsx)(i.Popout, {
            align: "center",
            animation: i.Popout.Animation.TRANSLATE,
            positionKey: _,
            onRequestClose: () => {
              E(!0);
            },
            renderPopout: e =>
              (0, s.jsx)(I.default, {
                ...e,
                renderableSticker: t,
                channel: n,
                refreshPositionKey: () => m(String(Date.now())),
              }),
            children: e => {
              let { onClick: n } = e;
              return (0, s.jsx)(i.Tooltip, {
                ...d.EXPRESSION_TOOLTIP_PROPS,
                shouldShow: o,
                text: (0, d.renderClickableTooltipNode)(h),
                "aria-label": !1,
                onTooltipShow: () => {
                  C(N);
                },
                children: e =>
                  (0, s.jsx)(i.Clickable, {
                    ...e,
                    className: p.clickableSticker,
                    onClick: e => {
                      E(!o), n(e);
                    },
                    tag: "span",
                    children: (0, s.jsx)(T.default, {
                      isInteracting: l,
                      size: S,
                      sticker: null != N ? N : t,
                    }),
                  }),
              });
            },
          }),
        });
      };
    },
    139185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return V;
          },
        }),
        n("808653"),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("851387"),
        d = n("716241"),
        c = n("101263"),
        E = n("243375"),
        f = n("459698"),
        _ = n("933629"),
        T = n("626301"),
        I = n("716849"),
        m = n("552917"),
        N = n("635956"),
        p = n("305961"),
        S = n("697218"),
        C = n("145131"),
        A = n("98292"),
        h = n("256170"),
        g = n("599110"),
        M = n("719923"),
        O = n("256860"),
        R = n("364685"),
        L = n("24373"),
        v = n("41170"),
        P = n("730723"),
        D = n("49111"),
        x = n("646718"),
        y = n("782340"),
        U = n("144897"),
        j = n("325417");
      let b = (e, t) =>
          t
            ? y.default.Messages.STICKER_POPOUT_PACK_INFO_PREMIUM.format({
                stickerPackName: e.name,
              })
            : y.default.Messages.STICKER_POPOUT_PACK_INFO_UNAVAILABLE.format({
                stickerPackName: e.name,
              }),
        G = e => {
          let { sticker: t, stickerPack: n } = e;
          return a.useMemo(
            () =>
              null == n
                ? []
                : n.stickers
                    .slice(0, 4)
                    .reduce(
                      (e, n) =>
                        3 !== e.length && n.id !== t.id ? e.concat(n) : e,
                      []
                    ),
            [t, n]
          );
        };
      function B(e) {
        g.default.track(D.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
          location_page:
            null != e.guild_id
              ? D.AnalyticsPages.GUILD_CHANNEL
              : D.AnalyticsPages.DM_CHANNEL,
          location_section: D.AnalyticsSections.STICKER_POPOUT,
        }),
          (0, T.navigateToPremiumMarketingPage)();
      }
      function k(e) {
        let { sticker: t, description: n } = e;
        return (0, s.jsxs)(C.default, {
          children: [
            (0, s.jsx)(v.default, { sticker: t, size: 48, isInteracting: !0 }),
            (0, s.jsxs)(C.default, {
              direction: C.default.Direction.VERTICAL,
              justify: C.default.Justify.CENTER,
              className: j.truncatingText,
              children: [
                (0, s.jsx)(o.Text, {
                  className: j.emojiName,
                  variant: "text-md/semibold",
                  children: (0, s.jsx)(A.default, { children: t.name }),
                }),
                null != n &&
                  (0, s.jsx)(o.Text, {
                    variant: "text-sm/normal",
                    children: n,
                  }),
              ],
            }),
          ],
        });
      }
      let F = e => {
          let {
              closePopout: t,
              sticker: n,
              channel: l,
              refreshPositionKey: i,
            } = e,
            [u, c, E] = (0, r.useStateFromStoresArray)(
              [R.default],
              () => [
                R.default.getStickerPack(n.pack_id),
                !R.default.hasLoadedStickerPacks,
                R.default.isPremiumPack(n.pack_id),
              ],
              [n]
            ),
            f = G({ sticker: n, stickerPack: u });
          (0, O.useFetchStickerPack)(n.pack_id);
          let T = (0, O.useFilteredStickerPackCategories)(l);
          return ((0, I.useMaybeFetchPremiumLikelihood)(m.default),
          a.useEffect(() => {
            i();
          }, [c]),
          a.useEffect(() => {
            g.default.track(D.AnalyticEvents.OPEN_POPOUT, {
              type: D.AnalyticsSections.STICKER_POPOUT,
              guild_id: l.getGuildId(),
              sticker_pack_id: n.pack_id,
              ...(0, d.collectChannelAnalyticsMetadata)(l),
            });
          }, [n.pack_id]),
          c || null == u)
            ? (0, s.jsx)(_.PopoutLoadingAnimation, {
                className: U.popoutLoader,
              })
            : (0, s.jsxs)(_.MessagePopoutContent, {
                className: U.popoutContent,
                children: [
                  (0, s.jsx)(o.Heading, {
                    variant: "heading-md/semibold",
                    children: n.name,
                  }),
                  (0, s.jsx)(o.Text, {
                    variant: "text-sm/normal",
                    children: b(u, E),
                  }),
                  (0, s.jsx)("ul", {
                    className: U.stickersList,
                    children: f.map(e =>
                      (0, s.jsx)(
                        v.default,
                        { isInteracting: !0, size: 80, sticker: e },
                        e.id
                      )
                    ),
                  }),
                  E &&
                    (0, s.jsx)("div", {
                      className: U.packActions,
                      children: (0, s.jsx)(
                        o.Button,
                        {
                          color: o.Button.Colors.PRIMARY,
                          size: o.Button.Sizes.SMALL,
                          onClick: () => {
                            E &&
                              (0, P.navigateToOwnedStickerPack)({
                                stickerPack: u,
                                stickerPickerCategories: T,
                              }),
                              t();
                          },
                          children:
                            y.default.Messages.STICKER_VIEW_MORE_STICKERS,
                        },
                        "view-sticker-pack"
                      ),
                    }),
                ],
              });
        },
        w = e => {
          let t,
            {
              sticker: n,
              channel: l,
              closePopout: T,
              refreshPositionKey: I,
            } = e,
            [m, A] = a.useState(null),
            [O, R] = a.useState(!1),
            L = S.default.getCurrentUser(),
            P = M.default.canUseCustomStickersEverywhere(L),
            b = (0, r.useStateFromStores)([p.default], () =>
              p.default.getGuild(n.guild_id)
            ),
            G = null != b,
            [F, w] = a.useState(!1),
            [H, V] = a.useState(null),
            Y = a.useMemo(
              () => ({
                page:
                  null != l.guild_id
                    ? D.AnalyticsPages.GUILD_CHANNEL
                    : D.AnalyticsPages.DM_CHANNEL,
                section: D.AnalyticsSections.STICKER_POPOUT,
              }),
              [l.guild_id]
            ),
            { current: K } = a.useRef({
              guild_id: l.getGuildId(),
              ...(0, d.collectChannelAnalyticsMetadata)(l),
            });
          a.useEffect(() => {
            let e = async () => {
              let e = null == b || b.hasFeature(D.GuildFeatures.DISCOVERABLE);
              if (e) {
                let e = await (0, E.default)(n.id);
                A(e);
              }
              R(!0);
            };
            e();
          }, [n.id, G]);
          let W = n.guild_id === l.getGuildId(),
            z = null != m,
            Q = !1,
            Z = "Custom Sticker Popout";
          P
            ? (t = G
                ? W
                  ? y.default.Messages
                      .STICKER_POPOUT_PREMIUM_CURRENT_GUILD_DESCRIPTION
                  : y.default.Messages
                      .STICKER_POPOUT_PREMIUM_JOINED_GUILD_DESCRIPTION
                : z
                  ? y.default.Messages
                      .STICKER_POPOUT_PREMIUM_UNJOINED_DISCOVERABLE_GUILD_DESCRIPTION
                  : y.default.Messages
                      .STICKER_POPOUT_PREMIUM_UNJOINED_PRIVATE_GUILD_DESCRIPTION)
            : G
              ? (W
                  ? (t =
                      y.default.Messages
                        .STICKER_POPOUT_CURRENT_GUILD_DESCRIPTION)
                  : (t =
                      y.default.Messages
                        .STICKER_POPOUT_JOINED_GUILD_DESCRIPTION),
                (Q = !0),
                (Z = "Custom Sticker Popout (Upsell)"))
              : z
                ? ((t =
                    y.default.Messages
                      .STICKER_POPOUT_UNJOINED_DISCOVERABLE_GUILD_DESCRIPTION),
                  (Q = !0),
                  (Z = "Custom Sticker Popout (Upsell)"))
                : ((t =
                    y.default.Messages.STICKER_POPOUT_UNJOINED_PRIVATE_GUILD_DESCRIPTION.format(
                      {
                        openPremiumSettings: () => {
                          B(l), T();
                        },
                      }
                    )),
                  (Z = "Custom Sticker Popout (Soft Upsell)"));
          let J = !Q && !G && z && P;
          return (a.useEffect(() => {
            I();
          }, [O, m]),
          a.useEffect(() => {
            g.default.track(D.AnalyticEvents.OPEN_POPOUT, { type: Z, ...K });
          }, []),
          O)
            ? (0, s.jsxs)(_.MessagePopoutContent, {
                className: j.popoutContent,
                children: [
                  (() => {
                    let e = async () => {
                      if (null == m || G) return;
                      T();
                      let e = m.id;
                      try {
                        await u.default.joinGuild(e),
                          u.default.transitionToGuildSync(e);
                      } catch {}
                    };
                    return (0, s.jsxs)("div", {
                      className: j.emojiSection,
                      children: [
                        (0, s.jsx)(k, { description: t, sticker: n }),
                        Q &&
                          (0, s.jsx)(N.default, {
                            className: j.ctaButton,
                            subscriptionTier: x.PremiumSubscriptionSKUs.TIER_2,
                            size: o.Button.Sizes.SMALL,
                            fullWidth: !0,
                            buttonText:
                              y.default.Messages.EMOJI_POPOUT_PREMIUM_CTA,
                            onSubscribeModalClose: t => (t ? e() : T()),
                            postSuccessGuild: G || null == m ? void 0 : m,
                            premiumModalAnalyticsLocation: Y,
                          }),
                        J &&
                          (0, s.jsx)(o.Button, {
                            size: o.Button.Sizes.SMALL,
                            className: j.ctaButton,
                            fullWidth: !0,
                            onClick: e,
                            children:
                              y.default.Messages
                                .GUILD_PROFILE_JOIN_SERVER_BUTTON,
                          }),
                      ],
                    });
                  })(),
                  (null != b || null != m) &&
                    (() => {
                      var e;
                      if (!z && !G) return;
                      let t = (
                          null !== (e = null == m ? void 0 : m.stickers) &&
                          void 0 !== e
                            ? e
                            : []
                        )
                          .slice(0, 13)
                          .filter(e => e.id !== n.id)
                          .slice(0, 12),
                        a =
                          null != m
                            ? c.default.createFromDiscoverableGuild(m)
                            : c.default.createFromGuildRecord(b);
                      return (0, s.jsxs)("div", {
                        className: j.guildSection,
                        children: [
                          (0, s.jsx)(o.FormTitle, {
                            className: j.guildTitle,
                            children: G
                              ? y.default.Messages
                                  .STICKER_POPOUT_JOINED_GUILD_EMOJI_DESCRIPTION
                              : y.default.Messages
                                  .STICKER_POPOUT_UNJOINED_GUILD_EMOJI_DESCRIPTION,
                          }),
                          (0, s.jsx)(f.GuildDetails, {
                            expressionSourceGuild: a,
                            hasJoinedExpressionSourceGuild: G,
                            isDisplayingJoinGuildButtonInPopout: J,
                          }),
                          !G &&
                            (0, s.jsxs)(s.Fragment, {
                              children: [
                                (0, s.jsx)(o.Clickable, {
                                  onClick: () => {
                                    I(), w(!F);
                                  },
                                  className: j.showMoreEmojis,
                                  children: (0, s.jsxs)(C.default, {
                                    children: [
                                      (0, s.jsx)(o.Text, {
                                        className: j.showMoreEmojisLabel,
                                        variant: "text-xs/normal",
                                        color: "none",
                                        children:
                                          y.default.Messages
                                            .STICKER_POPOUT_SHOW_MORE_STICKERS,
                                      }),
                                      (0, s.jsx)(h.default, {
                                        className: i(j.showMoreEmojisArrow, {
                                          [j.showMoreEmojisArrowCollapsed]: !F,
                                        }),
                                      }),
                                    ],
                                  }),
                                }),
                                F &&
                                  (0, s.jsx)(C.default, {
                                    wrap: C.default.Wrap.WRAP,
                                    align: C.default.Align.START,
                                    justify: C.default.Justify.START,
                                    className: j.otherEmojisContainer,
                                    children: t.map(e =>
                                      (0, s.jsx)(
                                        o.Tooltip,
                                        {
                                          text: e.name,
                                          ..._.EXPRESSION_TOOLTIP_PROPS,
                                          children: t => {
                                            let {
                                              onMouseEnter: n,
                                              onMouseLeave: a,
                                              ...l
                                            } = t;
                                            return (0, s.jsx)(
                                              "div",
                                              {
                                                className: i(j.otherEmoji, {
                                                  [U.nonInteractingSticker]:
                                                    null != H && H !== e.id,
                                                }),
                                                onMouseEnter: () => {
                                                  null == n || n(), V(e.id);
                                                },
                                                onMouseLeave: () => {
                                                  null == a || a(), V(null);
                                                },
                                                ...l,
                                                children: (0, s.jsx)(
                                                  v.default,
                                                  {
                                                    size: 32,
                                                    enlargeOnInteraction: !0,
                                                    enlargeWithName: !1,
                                                    enlargeScaleFactor: 2,
                                                    isInteracting: H === e.id,
                                                    sticker: e,
                                                  }
                                                ),
                                              },
                                              e.id
                                            );
                                          },
                                        },
                                        e.id
                                      )
                                    ),
                                  }),
                              ],
                            }),
                        ],
                      });
                    })(),
                ],
              })
            : (0, s.jsx)(_.PopoutLoadingAnimation, {
                className: U.popoutLoader,
              });
        };
      function H(e) {
        let { channel: t, closePopout: n, sticker: a } = e;
        return (0, s.jsx)(_.MessagePopoutContent, {
          className: U.popoutContent,
          children: (0, s.jsx)(k, {
            sticker: a,
            description:
              y.default.Messages.STICKER_POPOUT_UNJOINED_PRIVATE_GUILD_DESCRIPTION.format(
                {
                  openPremiumSettings: () => {
                    n(), B(t);
                  },
                }
              ),
          }),
        });
      }
      var V = e => {
        let {
            renderableSticker: t,
            channel: n,
            closePopout: a,
            refreshPositionKey: l,
          } = e,
          [i, r] = (0, O.useStickerForRenderableSticker)(t, !0);
        if (null != i && (0, L.isStandardSticker)(i))
          return (0, s.jsx)(F, {
            sticker: i,
            closePopout: a,
            channel: n,
            refreshPositionKey: l,
          });
        if (null != i && (0, L.isGuildSticker)(i))
          return (0, s.jsx)(w, {
            sticker: i,
            channel: n,
            closePopout: a,
            refreshPositionKey: l,
          });
        if (!r) return (0, s.jsx)(_.PopoutLoadingAnimation, {});
        else if (r && null == i)
          return (0, s.jsx)(H, { channel: n, closePopout: a, sticker: t });
        return a(), null;
      };
    },
    730723: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          navigateToOwnedStickerPack: function () {
            return r;
          },
        });
      var s = n("986632"),
        a = n("659500"),
        l = n("49111"),
        i = n("13030");
      function r(e) {
        let { stickerPack: t, stickerPickerCategories: n } = e;
        a.ComponentDispatch.dispatchToLastSubscribed(
          l.ComponentActions.OPEN_EXPRESSION_PICKER,
          { activeView: i.ExpressionPickerViewType.STICKER }
        );
        let r = n.findIndex(e => e.id === t.id);
        -1 !== r && s.StickerPickerStore.setActiveCategoryIndex(r);
      }
    },
    415829: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("446674"),
        r = n("77078"),
        o = n("272030"),
        u = n("913491"),
        d = n("42203"),
        c = n("299039"),
        E = n("69890"),
        f = n("610730"),
        _ = n("487269"),
        T = n("292657"),
        I = n("967241"),
        m = n("49111"),
        N = n("782340"),
        p = n("752581");
      function S(e) {
        let { message: t, compact: n } = e,
          a = (0, i.useStateFromStores)([d.default], () =>
            d.default.getChannel(c.default.castMessageIdAsChannelId(t.id))
          );
        return null == a
          ? null
          : (0, s.jsx)(C, {
              channel: a,
              compact: n,
              isSystemMessage: (0, u.default)(t),
            });
      }
      function C(e) {
        let { channel: t, compact: a, isSystemMessage: u } = e,
          d = (0, i.useStateFromStores)([f.default], () =>
            f.default.getCount(t.id)
          ),
          c = (function (e) {
            var t;
            let n = (0, i.useStateFromStores)([f.default], () =>
                f.default.getMostRecentMessage(e.id)
              ),
              a = (0, i.useStateFromStores)([f.default], () =>
                f.default.getCount(e.id)
              ),
              l = (0, _.useLastMessageTimestamp)(e);
            return (
              null === (t = e.threadMetadata) || void 0 === t
                ? void 0
                : t.archived
            )
              ? N.default.Messages.NO_RECENT_THREAD_MESSAGES
              : null == a || 0 === a
                ? N.default.Messages.NO_THREAD_MESSAGES
                : null == n
                  ? (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsx)("span", {
                          children:
                            N.default.Messages.NO_RECENT_THREAD_MESSAGES,
                        }),
                        (0, s.jsx)("span", {
                          className: p.timestamp,
                          children: (0, _.getTimestampString)(l),
                        }),
                      ],
                    })
                  : (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsx)(T.default, { message: n, channel: e }),
                        (0, s.jsx)("span", {
                          className: p.timestamp,
                          children: (0, _.getTimestampString)(l),
                        }),
                      ],
                    });
          })(t),
          S = null != d && d > 0;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)("div", {
              className: l(p.spine, {
                [p.cozy]: !a,
                [p.systemMessageSpine]: u,
              }),
            }),
            (0, s.jsx)(r.Clickable, {
              onClick: function (e) {
                e.stopPropagation(),
                  (0, I.openThreadSidebarForViewing)(t, e.shiftKey);
              },
              onKeyDown: function (e) {
                e.stopPropagation();
                let n = !e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey,
                  s = e.shiftKey && !(e.altKey || e.ctrlKey || e.metaKey);
                (e.which === m.KeyboardKeys.SPACE ||
                  e.which === m.KeyboardKeys.ENTER) &&
                  (e.preventDefault(),
                  (n || s) && (0, I.openThreadSidebarForViewing)(t, s));
              },
              onContextMenu: function (e) {
                (0, o.openContextMenuLazy)(e, async () => {
                  let { default: e } = await n
                    .el("994827")
                    .then(n.bind(n, "994827"));
                  return n => (0, s.jsx)(e, { channel: t, ...n });
                });
              },
              "aria-roledescription":
                N.default.Messages.THREAD_MESSAGE_ROLE_DESCRIPTION,
              className: l(p.container, { [p.systemMessageContainer]: u }),
              children: (0, s.jsxs)(r.BlockInteractions, {
                children: [
                  (0, s.jsxs)("div", {
                    className: p.topLine,
                    children: [
                      (0, s.jsx)(r.HiddenVisually, {
                        children: N.default.Messages.THREAD,
                      }),
                      (0, s.jsx)("span", {
                        className: p.name,
                        children: t.name,
                      }),
                      (0, s.jsx)("span", {
                        className: p.cta,
                        "aria-hidden": !S,
                        children: (0, E.formatMessageCountLabel)(d, t.id),
                      }),
                    ],
                  }),
                  (0, s.jsx)("span", {
                    "aria-hidden": !0,
                    className: l(p.bottomLine),
                    children: c,
                  }),
                ],
              }),
            }),
          ],
        });
      }
    },
    292657: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("750560"),
        r = n("95045"),
        o = n("14526"),
        u = n("27618"),
        d = n("93427"),
        c = n("719347"),
        E = n("356296");
      function f(e) {
        let { message: t, channel: n } = e,
          f = (0, l.useStateFromStores)([u.default], () =>
            u.default.isBlocked(t.author.id)
          ),
          _ = a.useMemo(
            () => ({ [n.guild_id]: [t.author.id] }),
            [n.guild_id, t.author.id]
          );
        (0, i.useSubscribeGuildMembers)(_);
        let T = a.useMemo(
          () =>
            null != t.content && "" !== t.content
              ? (0, r.default)(t, { formatInline: !0 }).content
              : null,
          [t]
        );
        return (0, s.jsxs)("div", {
          className: E.threadMessageAccessory,
          children: [
            (0, s.jsx)("img", {
              alt: "",
              src: t.author.getAvatarURL(n.guild_id, 16),
              className: E.threadMessageAccessoryAvatar,
            }),
            (0, s.jsx)(o.default, { message: t, channel: n, compact: !0 }),
            (0, s.jsx)("div", {
              className: E.threadMessageAccessoryPreview,
              children: (function (e, t, n) {
                let {
                  contentPlaceholder: a,
                  renderedContent: l,
                  icon: i,
                } = (0, d.renderSingleLineMessage)(
                  e,
                  t,
                  n,
                  E.threadMessageAccessoryContent,
                  {
                    iconClass: E.threadMessageAccessoryContentIcon,
                    iconSize: c.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE,
                  }
                );
                return (0, s.jsxs)(s.Fragment, {
                  children: [
                    null != l
                      ? l
                      : (0, s.jsx)("span", {
                          className: E.threadMessageAccessoryPlaceholder,
                          children: a,
                        }),
                    i,
                  ],
                });
              })(t, T, f),
            }),
          ],
        });
      }
    },
    124824: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("550410");
      function i(e) {
        let { children: t } = e,
          { preventIdle: n, allowIdle: i } = (0, l.usePreventIdle)("popup");
        return (
          a.useEffect(() => (n(), () => i()), [i, n]),
          (0, s.jsx)(s.Fragment, { children: t })
        );
      }
    },
    417256: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          WELCOME_STICKERS: function () {
            return s;
          },
        });
      let s = [
        {
          id: "749054660769218631",
          format_type: 3,
          description: "Wumpus waves hello",
          name: "Wave",
        },
        {
          id: "751606379340365864",
          format_type: 3,
          description: "Nelly peeks around a wall and waves hello",
          name: "Wave",
        },
        {
          id: "754108890559283200",
          format_type: 3,
          description: "Clyde cheerfully waving",
          name: "Wave",
        },
        {
          id: "781291131828699156",
          format_type: 2,
          description: "Choco waves in greeting",
          name: "Wave",
        },
        {
          id: "816087792291282944",
          format_type: 3,
          description: "Doggo spins and greets you",
          name: "Sup",
        },
        {
          id: "819128604311027752",
          format_type: 3,
          description: "Peach raising her arms in distress",
          name: "Scream",
        },
      ];
    },
    825150: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          pickWelcomeSticker: function () {
            return u;
          },
          handleWelcomeCtaClicked: function () {
            return d;
          },
        });
      var s = n("819689"),
        a = n("697218"),
        l = n("599110"),
        i = n("299039"),
        r = n("417256"),
        o = n("49111");
      let u = e => {
          var t;
          let n =
              null === (t = a.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id,
            s = null != n ? i.default.extractTimestamp(n) : 0,
            l = (s + i.default.extractTimestamp(e)) % r.WELCOME_STICKERS.length;
          return r.WELCOME_STICKERS[l];
        },
        d = (e, t, n) => {
          var i;
          s.default.sendGreetMessage(
            e.id,
            n,
            s.default.getSendMessageOptionsForReply({
              channel: e,
              message: t,
              shouldMention: !0,
              showMentionToggle: !0,
            })
          ),
            l.default.track(o.AnalyticEvents.WELCOME_CTA_CLICKED, {
              is_reply: !0,
              sticker_id: n,
              target_user: t.author.id,
              sender:
                null === (i = a.default.getCurrentUser()) || void 0 === i
                  ? void 0
                  : i.id,
            });
        };
    },
    936436: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          WelcomeCTAContainer: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("850391"),
        o = n("41170"),
        u = n("300322"),
        d = n("26989"),
        c = n("305961"),
        E = n("957255"),
        f = n("697218"),
        _ = n("718422"),
        T = n("825150"),
        I = n("49111"),
        m = n("782340"),
        N = n("396687");
      let p = e => {
          let { channel: t, message: n } = e,
            [l, u] = a.useState(!1),
            d = (0, T.pickWelcomeSticker)(n.id),
            c = a.useCallback(() => {
              (0, _.applyChatRestrictions)({
                type: r.ChatInputTypes.FORM,
                content: "",
                channel: t,
              }).then(e => {
                let { valid: s } = e;
                s && (0, T.handleWelcomeCtaClicked)(t, n, d.id);
              });
            }, [t, n, d]);
          return (0, s.jsx)("div", {
            className: N.welcomeCTA,
            children: (0, s.jsxs)(i.Button, {
              className: N.welcomeCTAButtonOuter,
              innerClassName: N.welcomeCTAButton,
              color: i.ButtonColors.PRIMARY,
              onMouseEnter: () => u(!0),
              onMouseLeave: () => u(!1),
              onClick: c,
              children: [
                (0, s.jsx)(o.default, {
                  className: N.welcomeCTASticker,
                  isInteracting: l,
                  sticker: d,
                  size: 28,
                }),
                m.default.Messages.WELCOME_CTA_LABEL,
              ],
            }),
          });
        },
        S = e => {
          let { message: t, channel: n } = e,
            a = n.getGuildId(),
            i = (0, l.useStateFromStores)(
              [f.default, E.default, c.default, d.default],
              () => {
                var e;
                let s = f.default.getCurrentUser(),
                  l = (0, u.computeIsReadOnlyThread)(n),
                  i = E.default.can(I.Permissions.SEND_MESSAGES, n),
                  r =
                    null != a &&
                    null != s &&
                    (null === (e = d.default.getMember(a, s.id)) || void 0 === e
                      ? void 0
                      : e.isPending),
                  o = t.author.bot,
                  _ = c.default.getGuild(a),
                  T =
                    null != _ &&
                    (_.systemChannelFlags &
                      I.SystemChannelFlags
                        .SUPPRESS_JOIN_NOTIFICATION_REPLIES) ==
                      0;
                return i && !l && !r && !o && T;
              }
            );
          return null != a && i
            ? (0, s.jsx)(p, { message: t, channel: n })
            : null;
        };
    },
    671071: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SPOTIFY_APPLICATION_ID: function () {
            return i;
          },
          SpotifyApplication: function () {
            return o;
          },
          default: function () {
            return s;
          },
        });
      var s,
        a = n("376556"),
        l = n("653047");
      let i = "spotify",
        r = a.default.get(i);
      s = class extends l.default {
        getIconURL(e) {
          return r.icon.lightPNG;
        }
        constructor() {
          super({}), (this.id = i), (this.name = r.name);
        }
      };
      let o = new s();
    },
    250404: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("446674"),
        a = n("913144"),
        l = n("42203"),
        i = n("86878"),
        r = n("377253");
      let o = null;
      class u extends s.default.Store {
        initialize() {
          this.waitFor(l.default, i.default, r.default);
        }
        getApps() {
          return o;
        }
      }
      u.displayName = "AuthorizedAppsStore";
      var d = new u(a.default, {
        USER_AUTHORIZED_APPS_UPDATE: function (e) {
          o = e.apps;
        },
      });
    },
    320268: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("917351"),
        a = n.n(s),
        l = n("446674"),
        i = n("95410"),
        r = n("913144"),
        o = n("316718"),
        u = n("465527"),
        d = n("651057"),
        c = n("299285"),
        E = n("161454"),
        f = n("697218"),
        _ = n("437712"),
        T = n("552712"),
        I = n("49111");
      let m = "DetectedOffPlatformPremiumPerksStore",
        N = {},
        p = {},
        S = [];
      function C() {
        let e = !1;
        for (let { skuId: t, applicationId: n } of a.values(p)) {
          if (S.includes(t)) continue;
          let s = c.default.getApplication(n);
          if (null == s) {
            !c.default.isFetchingApplication(n) &&
              !c.default.didFetchingApplicationFail(n) &&
              d.default.fetchApplication(n);
            continue;
          }
          let a = T.default.get(t);
          if (null == a) {
            !T.default.isFetching(t) &&
              !T.default.didFetchingSkuFail(t) &&
              u.fetchSKU(s.id, t);
            continue;
          }
          _.default.applicationIdsFetching.has(s.id) ||
          _.default.isEntitledToSku(
            f.default.getCurrentUser(),
            t,
            s.id,
            s.id
          ) ||
          !a.available
            ? null != N[t] && (delete N[t], (e = !0))
            : ((N[t] = { skuId: t, applicationId: n }), (e = !0));
        }
        return e;
      }
      class A extends l.default.Store {
        initialize() {
          var e;
          this.waitFor(E.default, T.default, _.default),
            (S = null !== (e = i.Storage.get(m)) && void 0 !== e ? e : S);
        }
        getDetectedOffPlatformPremiumPerks() {
          return a.values(N);
        }
      }
      A.displayName = "DetectedOffPlatformPremiumPerksStore";
      var h = new A(r.default, {
        LOGOUT: function () {
          (N = {}), (p = {});
        },
        SKU_FETCH_SUCCESS: C,
        ENTITLEMENT_FETCH_APPLICATION_SUCCESS: C,
        ENTITLEMENT_CREATE: C,
        APPLICATION_FETCH_SUCCESS: C,
        DETECTED_OFF_PLATFORM_PREMIUM_PERKS_DISMISS: function (e) {
          let { skuId: t } = e;
          if ((delete N[t], S.includes(t))) return !1;
          S.push(t), i.Storage.set(m, S);
        },
        RUNNING_GAMES_CHANGE: function () {
          let e = !1;
          for (let { id: t, distributor: n } of E.default.getRunningGames())
            if (null != t && n !== I.Distributors.DISCORD)
              for (let {
                skuId: n,
                applicationId: s,
              } of I.OFF_PLATFORM_PREMIUM_PERKS) {
                if (!(s !== t || S.includes(n)))
                  null == p[n] &&
                    (!_.default.applicationIdsFetched.has(s) &&
                      !_.default.applicationIdsFetching.has(s) &&
                      null == _.default.getForSku(n) &&
                      o.fetchUserEntitlementsForApplication(s),
                    (p[n] = { skuId: n, applicationId: s }),
                    (e = !0));
              }
          return e && C(), e;
        },
      });
    },
    925758: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("917351"),
        a = n.n(s),
        l = n("446674"),
        i = n("913144"),
        r = n("271938"),
        o = n("27618"),
        u = n("101125"),
        d = n("49111");
      let c = {},
        E = {};
      function f(e, t) {
        var n;
        let s = null !== (n = c[e]) && void 0 !== n ? n : {};
        return s[t];
      }
      function _(e, t) {
        let n = f(e, t);
        if (null == n) return;
        let s = c[e];
        delete s[t], a.isEmpty(s) && delete c[e];
        let l = E[n];
        null != l && (l.delete(e), 0 === l.size && delete E[n]);
      }
      function T(e, t, n, s) {
        let a = n.find(e => null != e.party && e.party.id),
          l = null != a && null != a.party ? a.party.id : null,
          i = f(t, e);
        if (null == l || s === d.StatusTypes.OFFLINE)
          return null != i && (_(t, e), void 0);
        if (null != i) {
          if (i === l) return !1;
          _(t, e);
        }
        !(function (e, t, n) {
          var s;
          let a = c[e];
          if (
            (null == a && (a = c[e] = {}), (a[t] = n), o.default.isBlocked(e))
          )
            return;
          let l = null !== (s = E[n]) && void 0 !== s ? s : new Set();
          (E[n] = l), l.add(e);
        })(t, e, l);
      }
      function I(e) {
        let { guild: t } = e,
          n = !1;
        for (let { user: e, status: s, activities: a } of t.presences)
          !1 !== T(t.id, e.id, a, s) && (n = !0);
        return n;
      }
      function m(e, t) {
        let n = !1;
        return (
          t.forEach(t => {
            null != t && T(e, t.user.id, t.activities, t.status) && (n = !0);
          }),
          n
        );
      }
      function N() {
        let e = r.default.getId(),
          t = u.default.getActivities();
        return T(d.ME, e, t);
      }
      class p extends l.default.Store {
        initialize() {
          this.syncWith([u.default], N), this.waitFor(u.default, o.default);
        }
        getParty(e) {
          return null != e && null != E[e] ? E[e] : null;
        }
        getUserParties() {
          return c;
        }
        getParties() {
          return E;
        }
      }
      p.displayName = "GamePartyStore";
      var S = new p(i.default, {
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t, presences: n } = e,
            s = !1;
          for (let { user: e, status: t, activities: a } of n)
            null != e && !1 !== T(d.ME, e.id, a, t) && (s = !0);
          for (let e of t) !1 !== I({ guild: e }) && (s = !0);
          return s;
        },
        OVERLAY_INITIALIZE: function (e) {
          let { parties: t, userParties: n } = e;
          (E = {}),
            (c = { ...n }),
            Object.keys(t).forEach(e => (E[e] = new Set(t[e])));
        },
        GUILD_CREATE: I,
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e,
            n = !1;
          for (let { user: e, activities: s } of t)
            null != e && !1 !== T(d.ME, e.id, s) && (n = !0);
          return n;
        },
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t
            .map(e => {
              let { guildId: t, user: n, status: s, activities: a } = e;
              return T(null != t ? t : d.ME, n.id, a, s);
            })
            .some(e => e);
        },
        THREAD_MEMBER_LIST_UPDATE: function (e) {
          let { guildId: t, members: n } = e;
          return m(
            t,
            n.map(e => e.presence)
          );
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          let { guildId: t, addedMembers: n } = e;
          return (
            null != n &&
            m(
              t,
              n.map(e => e.presence)
            )
          );
        },
        RELATIONSHIP_ADD: function (e) {
          let { relationship: t } = e;
          if (!o.default.isBlocked(t.id)) return !1;
          let n = c[t.id];
          if (null == n) return !1;
          for (let e of a.values(n)) {
            let n = E[e];
            null != n && n.delete(t.id);
          }
        },
        RELATIONSHIP_REMOVE: function (e) {
          let { relationship: t } = e,
            n = c[t.id];
          if (null == n) return !1;
          for (let e of a.values(n)) {
            let n = E[e];
            null != n && n.add(t.id);
          }
        },
      });
    },
    669280: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("446674"),
        a = n("913144"),
        l = n("718517"),
        i = n("299039"),
        r = n("271938"),
        o = n("27618");
      let u = 180 * l.default.Millis.DAY,
        d = !1;
      class c extends s.default.Store {
        initialize() {
          this.waitFor(o.default, r.default);
        }
        isEligible() {
          return d;
        }
      }
      c.displayName = "PremiumPromoStore";
      var E = new c(a.default, {
        CONNECTION_OPEN: function () {
          let e = d;
          return (
            e !==
            (d =
              o.default.getFriendIDs().length >= 10 &&
              i.default.extractTimestamp(r.default.getId()) < Date.now() - u)
          );
        },
      });
    },
    168851: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("446674"),
        a = n("95410"),
        l = n("913144"),
        i = n("167359");
      let r = "MaintenanceStore",
        o = null,
        u = null,
        d = null;
      class c extends s.default.Store {
        initialize() {
          d = a.Storage.get(r);
        }
        getIncident() {
          return o;
        }
        getScheduledMaintenance() {
          return null != u && u.id !== d ? u : null;
        }
      }
      c.displayName = "MaintenanceStore";
      var E = new c(l.default, {
        CONNECTION_OPEN: function () {
          (o = null), i.default.checkScheduledMaintenances();
        },
        STATUS_PAGE_INCIDENT: function (e) {
          o = e.incident;
        },
        STATUS_PAGE_SCHEDULED_MAINTENANCE: function (e) {
          u = e.maintenance;
        },
        STATUS_PAGE_SCHEDULED_MAINTENANCE_ACK: function () {
          if (null == u) return !1;
          (d = u.id), a.Storage.set(r, d);
        },
      });
    },
    381684: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SURVEY_REFETCH_INTERVAL: function () {
            return S;
          },
          default: function () {
            return O;
          },
        }),
        n("222007"),
        n("866227");
      var s,
        a,
        l = n("316693"),
        i = n("446674");
      n("95410");
      var r = n("913144"),
        o = n("518888"),
        u = n("99317"),
        d = n("525065"),
        c = n("305961"),
        E = n("957255"),
        f = n("162771"),
        _ = n("697218"),
        T = n("49111");
      let I = {
          hiddenSurveys: {},
          surveyOverride: null,
          lastFetched: null,
          lastSeen: null,
        },
        m = I,
        N = {},
        p = null,
        S = 864e5;
      ((a = s || (s = {})).IS_OWNER = "is_owner"),
        (a.IS_ADMIN = "is_admin"),
        (a.IS_COMMUNITY = "is_community"),
        (a.GUILD_SIZE = "guild_size"),
        (a.IS_HUB = "is_hub"),
        (a.IS_VIEWING = "is_viewing"),
        (a.GUILD_PERMISSIONS = "guild_permissions"),
        (a.GUILD_SIZE_ALL = "guild_size_all");
      let C = new Set(Object.values(s));
      function A(e) {
        return (
          (function (e) {
            return "1213250669327286303" === e.key ||
              "1213251044474232852" === e.key
              ? (0, u.daysSinceYouBarFirstSeen)() >= 7
              : ("1213254060338319402" !== e.key &&
                  "1213254481224015954" !== e.key) ||
                  (0, u.daysSinceYouBarFirstSeen)() >= 14;
          })(e) &&
          (function (e) {
            let {
              guild_requirements: t = [],
              guild_size: n = [null, null],
              guild_permissions: s = [],
            } = e;
            if (0 === t.length) return !0;
            for (let e of t) if (!C.has(e)) return !1;
            let a = t.includes("guild_size_all"),
              i = !0,
              r = Object.values(c.default.getGuilds());
            for (let o of r) {
              if (a || t.includes("guild_size")) {
                let e = d.default.getMemberCount(o.id);
                if (
                  null == e ||
                  (null != n[0] && e < n[0]) ||
                  (null != n[1] && e > n[1])
                ) {
                  i = !1;
                  continue;
                }
              }
              if (
                (t.includes("is_community") &&
                  !o.hasFeature(T.GuildFeatures.COMMUNITY)) ||
                (t.includes("is_hub") && !o.hasFeature(T.GuildFeatures.HUB))
              )
                continue;
              if (t.includes("guild_permissions")) {
                if (0 === s.length) continue;
                let e = !1;
                for (let t of s)
                  try {
                    let n = l.deserialize(t);
                    if (E.default.can(n, o)) {
                      e = !0;
                      break;
                    }
                  } catch (e) {}
                if (!e) continue;
              }
              let r = _.default.getCurrentUser(),
                u = (null == r ? void 0 : r.id) === o.ownerId,
                c = E.default.can(T.Permissions.ADMINISTRATOR, o);
              if (
                (t.includes("is_owner") && !u) ||
                (t.includes("is_admin") && !c)
              )
                continue;
              null == (N = null != N ? N : {})[e.key] && (N[e.key] = e);
              let I = f.default.getGuildId(),
                m = null != I && I === o.id;
              if ((!t.includes("is_viewing") || m) && !a) return !0;
            }
            return (!!a && !!i) || !1;
          })(e)
        );
      }
      function h(e) {
        let { survey: t } = e;
        if (
          ((m.lastFetched = Date.now()),
          null == m.hiddenSurveys && (m.hiddenSurveys = {}),
          null != t && null == m.hiddenSurveys[t.key])
        ) {
          if (!A(t)) return;
          p = t;
        }
      }
      function g() {
        if (null != p && (A(p) || ((p = null), 0))) return !1;
        !(function () {
          N = null != N ? N : {};
          let e = Object.values(N)[0];
          if (null != e && A(e)) {
            h({ type: "SURVEY_FETCHED", survey: e });
            return;
          }
          if (null == p) return;
          p = null;
        })();
      }
      class M extends i.default.PersistedStore {
        initialize(e) {
          (m = null != e ? e : I), this.syncWith([f.default], g);
        }
        getState() {
          return m;
        }
        getCurrentSurvey() {
          return p;
        }
        getSurveyOverride() {
          return m.surveyOverride;
        }
        getLastSeenTimestamp() {
          return m.lastSeen;
        }
      }
      (M.displayName = "SurveyStore"),
        (M.persistKey = "SurveyStore"),
        (M.migrations = [
          e => {
            let t = { ...e };
            return (
              delete t.validSurveys,
              delete t.currentSurvey,
              delete t.iosIsPushNotificationClicked,
              delete t.iosIsInviteShown,
              delete t.iosFirstRunDate,
              t
            );
          },
          e => {
            var t;
            return {
              ...e,
              lastSeen: null !== (t = e.lastSeen) && void 0 !== t ? t : null,
            };
          },
          e => {
            var t;
            return {
              ...e,
              hiddenSurveys:
                null !== (t = e.hiddenSurveys) && void 0 !== t ? t : {},
            };
          },
        ]);
      var O = new M(r.default, {
        CONNECTION_OPEN: function () {
          var e;
          if (
            !(
              null != m.lastFetched &&
              Date.now() -
                (null !== (e = m.lastFetched) && void 0 !== e ? e : 0) <
                S
            ) ||
            null != m.surveyOverride
          )
            (0, o.surveyFetch)(m.surveyOverride, !0);
        },
        SURVEY_FETCHED: h,
        SURVEY_HIDE: function (e) {
          let { key: t } = e;
          (m.hiddenSurveys[t] = !0),
            (p = null),
            (N = null != N ? N : {}),
            delete N[t];
        },
        SURVEY_OVERRIDE: function (e) {
          let { id: t } = e;
          (m.surveyOverride = t),
            null != t && delete m.hiddenSurveys[t],
            (0, o.surveyFetch)(m.surveyOverride, !0);
        },
        PUSH_NOTIFICATION_CLICK: function () {},
        DISPLAYED_INVITE_SHOW: function () {},
        LOGOUT: function () {
          m.hiddenSurveys = {};
        },
        SURVEY_SEEN: function () {
          m.lastSeen = Date.now();
        },
      });
    },
    330387: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("446674"),
        a = n("913144");
      let l = null;
      class i extends s.default.Store {
        hasAction() {
          return null != l;
        }
        getAction() {
          return l;
        }
      }
      function r(e) {
        l = e.requiredAction;
      }
      i.displayName = "UserRequiredActionStore";
      var o = new i(a.default, {
        CONNECTION_OPEN: r,
        USER_REQUIRED_ACTION_UPDATE: r,
      });
    },
    290877: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("446674"),
        a = n("913144");
      let l = { matureAgree: !1, muted: !0 };
      class i extends s.default.Store {
        get didMatureAgree() {
          return l.matureAgree;
        }
        get isDirectoryMuted() {
          return l.muted;
        }
      }
      i.displayName = "ApplicationStoreSettingsStore";
      var r = new i(a.default, {
        APPLICATION_STORE_MATURE_AGREE: function () {
          l.matureAgree = !0;
        },
        APPLICATION_STORE_DIRECTORY_MUTE: function () {
          l.muted = !0;
        },
        APPLICATION_STORE_DIRECTORY_UNMUTE: function () {
          l.muted = !1;
        },
      });
    },
    189459: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("446674"),
        a = n("913144"),
        l = n("492249");
      let i = null,
        r = [
          l.DispatchErrorCodes.REDISTRIBUTABLE_INSTALL_FAILED,
          l.DispatchErrorCodes.POST_INSTALL_FAILED,
          l.DispatchErrorCodes.POST_INSTALL_CANCELLED,
        ],
        o = [
          l.DispatchErrorCodes.APPLICATION_NOT_FOUND,
          l.DispatchErrorCodes.APPLICATION_LOAD_FAILED,
          l.DispatchErrorCodes.INTERRUPTED,
          l.DispatchErrorCodes.DESERIALIZATION_FAILED,
        ];
      class u extends s.default.Store {
        getLastError() {
          return i;
        }
      }
      u.displayName = "DispatchApplicationErrorStore";
      var d = new u(a.default, {
        DISPATCH_APPLICATION_LAUNCH_SETUP_START: function () {
          null != i && null != i.code && r.includes(i.code) && (i = null);
        },
        DISPATCH_APPLICATION_ERROR: function (e) {
          let { error: t } = e;
          i = null != t.code && o.includes(t.code) ? null : t;
        },
      });
    },
    600133: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          typeToDismissibleContent: function () {
            return eP;
          },
          default: function () {
            return eK;
          },
        }),
        n("222007");
      var s = n("866227"),
        a = n.n(s),
        l = n("446674"),
        i = n("741397"),
        r = n("151426"),
        o = n("95410"),
        u = n("913144"),
        d = n("49671"),
        c = n("376556"),
        E = n("299285"),
        f = n("7331"),
        _ = n("889293"),
        T = n("10641"),
        I = n("180273"),
        m = n("579565"),
        N = n("789563"),
        p = n("161454"),
        S = n("619443"),
        C = n("374014"),
        A = n("875037"),
        h = n("398654"),
        g = n("54346"),
        M = n("681937"),
        O = n("619259"),
        R = n("179803"),
        L = n("38654"),
        v = n("267567"),
        P = n("42060"),
        D = n("167209"),
        x = n("104032"),
        y = n("983424"),
        U = n("897107"),
        j = n("44678"),
        b = n("807345"),
        G = n("840895"),
        B = n("143573"),
        k = n("2973"),
        F = n("703537"),
        w = n("662285"),
        H = n("808422"),
        V = n("374363"),
        Y = n("373469"),
        K = n("271938"),
        W = n("250404"),
        z = n("533222"),
        Q = n("42203"),
        Z = n("47319"),
        J = n("320268"),
        q = n("26989"),
        X = n("305961"),
        $ = n("42887"),
        ee = n("385649"),
        et = n("957255"),
        en = n("669280"),
        es = n("945956"),
        ea = n("18494"),
        el = n("162771"),
        ei = n("168851"),
        er = n("102985"),
        eo = n("381684"),
        eu = n("330387"),
        ed = n("697218"),
        ec = n("800762"),
        eE = n("160299"),
        ef = n("357957"),
        e_ = n("521012"),
        eT = n("340412"),
        eI = n("437712"),
        em = n("167726"),
        eN = n("773336"),
        ep = n("719923"),
        eS = n("189459"),
        eC = n("316661"),
        eA = n("352326"),
        eh = n("49111"),
        eg = n("492397"),
        eM = n("411511"),
        eO = n("646718"),
        eR = n("166604"),
        eL = n("843455"),
        ev = n("353927");
      let eP = {
          [eh.NoticeTypes.LOCALIZED_PRICING]:
            r.DismissibleContent.NAGBAR_NOTICE_LOCALIZED_PRICING,
          [eh.NoticeTypes.DOWNLOAD_NAG]:
            r.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD,
          [eh.NoticeTypes.CONNECT_SPOTIFY]:
            r.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY,
          [eh.NoticeTypes.CONNECT_PLAYSTATION]:
            r.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION,
          [eh.NoticeTypes.MFA_SMS_BACKUP]:
            r.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP,
          [eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING]:
            r.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING,
          [eh.NoticeTypes.PREMIUM_REACTIVATE]:
            r.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE,
          [eh.NoticeTypes.DROPS_GO_LIVE_BANNER]:
            r.DismissibleContent.QUEST_2_GO_LIVE_BANNER,
          [eh.NoticeTypes.DROPS_ENDED_INCOMPLETE]:
            r.DismissibleContent.QUEST_2_ENDED_INCOMPLETE,
          [eh.NoticeTypes.BOUNCED_EMAIL_DETECTED]:
            r.DismissibleContent.NAGBAR_BOUNCED_EMAIL_NOTICE,
          [eh.NoticeTypes.ACTIVATE_SERVER_SUBSCRIPTION]:
            r.DismissibleContent.NAGBAR_ACTIVATE_SERVER_SUBSCRIPTION,
          [eh.NoticeTypes.PREMIUM_TIER_0_TRIAL_ENDING]:
            r.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_0_TRIAL_ENDING,
          [eh.NoticeTypes.GUILD_ONBOARDING_UPSELL_NAGBAR]:
            r.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR,
          [eh.NoticeTypes.POMELO_ELIGIBLE]:
            r.DismissibleContent.NAGBAR_NOTICE_POMELO,
          [eh.NoticeTypes.UU_MIGRATION]:
            r.DismissibleContent.UU_MIGRATION_NOTICE,
        },
        eD = {
          [eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL]:
            "hideDetectedOffPlatformPremiumPerkUpsell",
          [eh.NoticeTypes.PREMIUM_UNCANCEL]: "hideUncancelReminder",
          [eh.NoticeTypes.PREMIUM_MISSING_PAYMENT]:
            "hideMissingPaymentReminder",
          [eh.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT]:
            "hidePastDueMissingPaymentReminder",
          [eh.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT]:
            "hidePastDueInvalidPaymentReminder",
          [eh.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT]:
            "hidePastDueOneTimePaymentReminder",
          [eh.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION]:
            "hideAutoModerationMentionRaidDetectionNotice",
          [eh.NoticeTypes.GUILD_RAID_NOTIFICATION]:
            "hideGuildRaidDetectionNotice",
          [eh.NoticeTypes.SERVER_USAGE_SURVEY]: "hideServerUsageSurvey",
          [eh.NoticeTypes.WIN32_DEPRECATED_MESSAGE]:
            "hideWin32DeprecationMessageNotice",
          [eh.NoticeTypes.WIN7_8_DEPRECATED_MESSAGE]:
            "hideWin78DeprecationMessageNotice",
          [eh.NoticeTypes.MACOS_17_18_DEPRECATED_MESSAGE]:
            "hideMacOS17_18DeprecationMessageNotice",
          [eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING]:
            "hidePremiumTier2TrialOfferEndingNotice",
        },
        ex = new Set([
          eh.NoticeTypes.NO_INPUT_DETECTED,
          eh.NoticeTypes.STREAMER_MODE,
          eh.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
          eh.NoticeTypes.SPOTIFY_AUTO_PAUSED,
          eh.NoticeTypes.DISPATCH_ERROR,
          eh.NoticeTypes.DISPATCH_ERROR,
          eh.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS,
          eh.NoticeTypes.BLOCKED_BY_PROXY,
        ]),
        ey = {},
        eU = Object.freeze({
          id: null,
          message: null,
          buttonText: null,
          callback: void 0,
          metadata: null,
        }),
        ej = null;
      function eb(e) {
        return eD[e] + "-untilAtLeast";
      }
      function eG(e, t, n) {
        var s, a, l;
        if (null == e) return;
        let i = eD[e];
        if (
          (null != i && !t && o.Storage.set(i, !0),
          ex.has(e) && (ey[e] = !0),
          null != n && null != i)
        ) {
          (s = e),
            (a = n),
            o.Storage.set(eb(s), a.format("YYYY-MM-DDTHH:mm:ss.SSSZ"));
        } else {
          (l = e), o.Storage.remove(eb(l));
        }
      }
      function eB(e) {
        if (null == e) return !1;
        let t = (function (e) {
          let { enabled: t } =
            y.PremiumTier2TrialOfferNoticeExperiment.getCurrentConfig(
              { location: "NoticeStore_isNoticeDismissed" },
              {
                autoTrackExposure: !0,
                disable: e !== eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING,
              }
            );
          return t ? null : eP[e];
        })(e);
        if (null != t) return (0, T.isDismissibleContentDismissed)(t);
        let n = eD[e];
        if (null != n) {
          let t = (function (e) {
            let t = o.Storage.get(eb(e));
            return null != t ? a(t) : null;
          })(e);
          if (null != t) return null == t ? void 0 : t.isAfter(a());
        }
        let s = ey[e];
        return (
          !!s || (null != n && "" !== n ? o.Storage.get(n) : !!ex.has(e) && s)
        );
      }
      let ek = [
          eh.NoticeTypes.QUARANTINED,
          eh.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE,
          eh.NoticeTypes.VIEWING_ROLES,
          eh.NoticeTypes.INVITED_TO_SPEAK,
          eh.NoticeTypes.LURKING_GUILD,
          eh.NoticeTypes.VOICE_DISABLED,
          eh.NoticeTypes.NO_INPUT_DETECTED,
          eh.NoticeTypes.HARDWARE_MUTE,
          eh.NoticeTypes.H264_DISABLED,
          eh.NoticeTypes.DISPATCH_ERROR,
          eh.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS,
          eh.NoticeTypes.SPOTIFY_AUTO_PAUSED,
          eh.NoticeTypes.DROPS_PROGRESS_INTERRUPTION,
          eh.NoticeTypes.WIN32_DEPRECATED_MESSAGE,
          eh.NoticeTypes.WIN7_8_DEPRECATED_MESSAGE,
          eh.NoticeTypes.MACOS_17_18_DEPRECATED_MESSAGE,
          eh.NoticeTypes.BLOCKED_BY_PROXY,
          eh.NoticeTypes.VOICE_CONNECTED_LAST_SESSION,
          eh.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION,
          eh.NoticeTypes.GUILD_RAID_NOTIFICATION,
          eh.NoticeTypes.QUESTS_PROGRESS_INTERRUPTION,
          eh.NoticeTypes.UNCLAIMED_ACCOUNT,
          eh.NoticeTypes.POMELO_ELIGIBLE,
          eh.NoticeTypes.PENDING_MEMBER,
          eh.NoticeTypes.OUTBOUND_PROMOTION,
          eh.NoticeTypes.CORRUPT_INSTALLATION,
          eh.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
          eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK,
          eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL,
          eh.NoticeTypes.STREAMER_MODE,
          eh.NoticeTypes.SCHEDULED_MAINTENANCE,
          eh.NoticeTypes.BOUNCED_EMAIL_DETECTED,
          eh.NoticeTypes.UNVERIFIED_ACCOUNT,
          eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING,
          eh.NoticeTypes.PREMIUM_TIER_0_TRIAL_ENDING,
          eh.NoticeTypes.PREMIUM_UNCANCEL,
          eh.NoticeTypes.PREMIUM_MISSING_PAYMENT,
          eh.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
          eh.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
          eh.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT,
          eh.NoticeTypes.PREMIUM_REACTIVATE,
          eh.NoticeTypes.ACTIVATE_SERVER_SUBSCRIPTION,
          eh.NoticeTypes.MFA_SMS_BACKUP,
          eh.NoticeTypes.APPLICATION_TEST_MODE,
          eh.NoticeTypes.LOCALIZED_PRICING,
          eh.NoticeTypes.DOWNLOAD_NAG,
          eh.NoticeTypes.CONNECT_SPOTIFY,
          eh.NoticeTypes.CONNECT_PLAYSTATION,
          eh.NoticeTypes.SURVEY,
          eh.NoticeTypes.SERVER_USAGE_SURVEY,
          eh.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
          eh.NoticeTypes.DROPS_GO_LIVE_BANNER,
          eh.NoticeTypes.DROPS_ENDED_INCOMPLETE,
          eh.NoticeTypes.GUILD_ONBOARDING_UPSELL_NAGBAR,
          eh.NoticeTypes.UU_MIGRATION,
        ],
        eF = [
          eh.NoticeTypes.QUARANTINED,
          eh.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE,
          eh.NoticeTypes.VIEWING_ROLES,
          eh.NoticeTypes.INVITED_TO_SPEAK,
          eh.NoticeTypes.LURKING_GUILD,
          eh.NoticeTypes.VOICE_DISABLED,
          eh.NoticeTypes.NO_INPUT_DETECTED,
          eh.NoticeTypes.HARDWARE_MUTE,
          eh.NoticeTypes.H264_DISABLED,
          eh.NoticeTypes.DISPATCH_ERROR,
          eh.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS,
          eh.NoticeTypes.SPOTIFY_AUTO_PAUSED,
          eh.NoticeTypes.BLOCKED_BY_PROXY,
          eh.NoticeTypes.VOICE_CONNECTED_LAST_SESSION,
          eh.NoticeTypes.PENDING_MEMBER,
          eh.NoticeTypes.STREAMER_MODE,
          eh.NoticeTypes.SCHEDULED_MAINTENANCE,
        ],
        ew = {
          [eh.NoticeTypes.GUILD_RAID_NOTIFICATION]: {
            predicate: () =>
              (0, h.shouldShowRaidNotificationNagbar)().show &&
              !eB(eh.NoticeTypes.GUILD_RAID_NOTIFICATION),
            metadata: () => {
              let e = { dismissUntil: a().add(3, "hours").toDate() };
              return e;
            },
          },
          [eh.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE]: {
            predicate: e => {
              let { currentUser: t, selectedGuildId: n } = e;
              if (null == n) return !1;
              let s = q.default.getMember(n, t.id);
              return (
                null != s &&
                !s.isPending &&
                (0, M.hasAutomodQuarantinedProfile)(s)
              );
            },
          },
          [eh.NoticeTypes.QUARANTINED]: {
            predicate: e => {
              let { currentUser: t } = e;
              return t.hasFlag(eh.UserFlags.QUARANTINED);
            },
          },
          [eh.NoticeTypes.VIEWING_ROLES]: {
            predicate: e => {
              let { selectedGuildId: t } = e;
              return L.default.isViewingRoles(t);
            },
          },
          [eh.NoticeTypes.INVITED_TO_SPEAK]: {
            predicate: e => {
              let { voiceState: t } = e;
              return (
                (0, H.getAudienceRequestToSpeakState)(t) ===
                H.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK
              );
            },
          },
          [eh.NoticeTypes.LURKING_GUILD]: {
            predicate: e => {
              let { selectedGuildId: t } = e;
              return null != t && v.default.isLurking(t);
            },
          },
          [eh.NoticeTypes.VOICE_DISABLED]: {
            predicate: () =>
              null != es.default.getRemoteDisconnectVoiceChannelId(),
          },
          [eh.NoticeTypes.VOICE_CONNECTED_LAST_SESSION]: {
            predicate: () => null != es.default.getLastSessionVoiceChannelId(),
          },
          [eh.NoticeTypes.NO_INPUT_DETECTED]: {
            predicate: e => {
              let { voiceChannelId: t, voiceState: n } = e,
                s = Q.default.getChannel(t),
                a =
                  (null == s ? void 0 : s.isGuildStageVoice()) &&
                  (null == n ? void 0 : n.suppress);
              return !1 === $.default.getInputDetected() && !a;
            },
          },
          [eh.NoticeTypes.H264_DISABLED]: {
            predicate: e => {
              let { voiceChannelId: t } = e,
                n = Q.default.getChannel(t);
              return (
                !$.default.getOpenH264() &&
                null != t &&
                ec.default.hasVideo(t) &&
                null != n &&
                n.isGuildStageVoice()
              );
            },
          },
          [eh.NoticeTypes.HARDWARE_MUTE]: {
            predicate: () =>
              es.default.isConnected() && $.default.isHardwareMute(),
            metadata: () => {
              let e = $.default.getInputDeviceId(),
                t = z.default.getVendor(e),
                n = z.default.getModel(e);
              if (null != t && null != n) return { vendor: t, model: n };
            },
          },
          [eh.NoticeTypes.DISPATCH_ERROR]: {
            predicate: () => null != eS.default.getLastError(),
            metadata: () => ({ error: eS.default.getLastError() }),
          },
          [eh.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS]: {
            predicate: () => null != eC.default.getLastProgress(),
            metadata: () => eC.default.getLastProgress(),
          },
          [eh.NoticeTypes.SPOTIFY_AUTO_PAUSED]: {
            predicate: () => w.default.wasAutoPaused(),
          },
          [eh.NoticeTypes.BLOCKED_BY_PROXY]: {
            predicate: () =>
              !eB(eh.NoticeTypes.BLOCKED_BY_PROXY) &&
              B.default.blockedByProxy &&
              G.default.getCurrentConfig({ location: "notice_store" })
                .eligibleForNotice,
          },
          [eh.NoticeTypes.UNCLAIMED_ACCOUNT]: {
            predicate: e => {
              let { currentUser: t } = e;
              return null != t && !t.isClaimed();
            },
          },
          [eh.NoticeTypes.PENDING_MEMBER]: {
            predicate: e => {
              var t, n, s;
              let { selectedGuildId: a, currentUser: l } = e;
              return (
                null !==
                  (s =
                    null != a &&
                    null != l &&
                    !(null === (t = X.default.getGuild(a)) || void 0 === t
                      ? void 0
                      : t.hasFeature(eh.GuildFeatures.GUILD_ONBOARDING)) &&
                    (null === (n = q.default.getMember(a, l.id)) || void 0 === n
                      ? void 0
                      : n.isPending)) &&
                void 0 !== s &&
                s
              );
            },
          },
          [eh.NoticeTypes.OUTBOUND_PROMOTION]: {
            predicate: () => (0, j.shouldShowOutboundPromotionNotice)(),
          },
          [eh.NoticeTypes.CORRUPT_INSTALLATION]: {
            predicate: () =>
              eN.isPlatformEmbedded &&
              (!i.default.supported() || eA.default.isCorruptInstallation()),
          },
          [eh.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER]: {
            predicate: e => {
              let { voiceChannelId: t } = e;
              return (
                null != t &&
                ec.default.hasVideo(t) &&
                !$.default.supports(ev.Features.VIDEO) &&
                !eB(eh.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER)
              );
            },
          },
          [eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK]: {
            predicate: e => {
              let { currentUser: t } = e;
              return (
                ep.default.canRedeemPremiumPerks(t) &&
                J.default.getDetectedOffPlatformPremiumPerks().length > 0
              );
            },
            metadata: () => {
              let e = J.default.getDetectedOffPlatformPremiumPerks();
              return e[0];
            },
          },
          [eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL]: {
            predicate: () =>
              !eB(eh.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL) &&
              J.default.getDetectedOffPlatformPremiumPerks().length > 0,
            metadata: () => {
              let e = J.default.getDetectedOffPlatformPremiumPerks();
              return e[0];
            },
          },
          [eh.NoticeTypes.STREAMER_MODE]: {
            predicate: () => er.default.enabled,
          },
          [eh.NoticeTypes.DOWNLOAD_NAG]: {
            predicate: () =>
              !eN.isPlatformEmbedded && !eB(eh.NoticeTypes.DOWNLOAD_NAG),
          },
          [eh.NoticeTypes.SCHEDULED_MAINTENANCE]: {
            predicate: () => null != ei.default.getScheduledMaintenance(),
            metadata: () => {
              let e = ei.default.getScheduledMaintenance();
              if (null != e)
                return {
                  id: e.id,
                  start: new Date(e.scheduled_for),
                  end: new Date(e.scheduled_until),
                };
            },
          },
          [eh.NoticeTypes.SURVEY]: {
            predicate: () => null != eo.default.getCurrentSurvey(),
            metadata: () => eo.default.getCurrentSurvey(),
          },
          [eh.NoticeTypes.SERVER_USAGE_SURVEY]: {
            predicate: e => {
              let { selectedGuildId: t } = e;
              return (
                null != t &&
                A.default.getCurrentConfig({ location: "notice_store" })
                  .showSurvey &&
                !eB(eh.NoticeTypes.SERVER_USAGE_SURVEY)
              );
            },
            metadata: e => {
              let { selectedGuildId: t, currentUser: n } = e;
              return { selectedGuildId: t, currentUser: n };
            },
          },
          [eh.NoticeTypes.UNVERIFIED_ACCOUNT]: {
            predicate: e => {
              let { currentUser: t } = e;
              return (null == t ? void 0 : t.email) != null && !t.verified;
            },
          },
          [eh.NoticeTypes.BOUNCED_EMAIL_DETECTED]: {
            predicate: e => {
              let { currentUser: t } = e;
              return null == t ? void 0 : t.hasBouncedEmail;
            },
          },
          [eh.NoticeTypes.CONNECT_SPOTIFY]: {
            predicate: () =>
              !w.default.hasConnectedAccount() &&
              p.default.isObservedAppRunning(
                c.default.get(eh.PlatformTypes.SPOTIFY).name
              ) &&
              !eB(eh.NoticeTypes.CONNECT_SPOTIFY),
          },
          [eh.NoticeTypes.WIN32_DEPRECATED_MESSAGE]: {
            predicate: () => {
              let { enabled: e } = U.default.getCurrentConfig({
                location: "window32_deprecation_message",
              });
              return (
                e &&
                (null === d.default || void 0 === d.default
                  ? void 0
                  : d.default.os.arch) === "ia32" &&
                (null === d.default || void 0 === d.default
                  ? void 0
                  : d.default.process.platform) === "win32"
              );
            },
            metadata: () => {
              let e = { dismissUntil: a().add(5, "days").toDate() };
              return e;
            },
          },
          [eh.NoticeTypes.WIN7_8_DEPRECATED_MESSAGE]: {
            predicate: () => {
              if (
                (null === d.default || void 0 === d.default
                  ? void 0
                  : d.default.process.platform) === "win32"
              )
                try {
                  let e = parseInt(
                    null === d.default || void 0 === d.default
                      ? void 0
                      : d.default.os.release.split(".")[0]
                  );
                  return e < 10;
                } catch (e) {}
              return !1;
            },
            metadata: () => {
              let e = { dismissUntil: a().add(5, "days").toDate() };
              return e;
            },
          },
          [eh.NoticeTypes.MACOS_17_18_DEPRECATED_MESSAGE]: {
            predicate: () => {
              if (
                (null === d.default || void 0 === d.default
                  ? void 0
                  : d.default.process.platform) === "darwin"
              )
                try {
                  let e = parseInt(
                    null === d.default || void 0 === d.default
                      ? void 0
                      : d.default.os.release.split(".")[0]
                  );
                  return e < 19;
                } catch (e) {}
              return !1;
            },
            metadata: () => {
              let e = { dismissUntil: a().add(5, "days").toDate() };
              return e;
            },
          },
          [eh.NoticeTypes.CONNECT_PLAYSTATION]: {
            predicate: () =>
              Z.default.isSuggestedAccountType(eh.PlatformTypes.PLAYSTATION) &&
              null ==
                Z.default.getAccount(null, eh.PlatformTypes.PLAYSTATION) &&
              !eB(eh.NoticeTypes.CONNECT_PLAYSTATION),
          },
          [eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING]: {
            predicate: () => {
              let e = eT.default.getAlmostExpiringTrialOffers([
                eO.PremiumSubscriptionSKUs.TIER_2,
              ]);
              return (
                e.length > 0 && !eB(eh.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING)
              );
            },
          },
          [eh.NoticeTypes.PREMIUM_TIER_0_TRIAL_ENDING]: {
            predicate: () => {
              let e = eT.default.getAlmostExpiringTrialOffers([
                eO.PremiumSubscriptionSKUs.TIER_0,
              ]);
              return (
                e.length > 0 && !eB(eh.NoticeTypes.PREMIUM_TIER_0_TRIAL_ENDING)
              );
            },
          },
          [eh.NoticeTypes.PREMIUM_UNCANCEL]: {
            predicate: e => {
              let { premiumSubscription: t, currentUser: n } = e,
                s =
                  null != t
                    ? a(t.currentPeriodEnd).diff(a().startOf("day"), "days")
                    : 0,
                l =
                  (null == t ? void 0 : t.canceledAt) != null &&
                  (null == t ? void 0 : t.status) ===
                    eh.SubscriptionStatusTypes.CANCELED &&
                  1 >= a().diff(a(t.canceledAt), "days"),
                i = null != t && a(t.currentPeriodEnd).isBefore(a()),
                r =
                  null != t &&
                  t.status === eh.SubscriptionStatusTypes.CANCELED &&
                  !i &&
                  s <= 7 &&
                  s >= 0 &&
                  (0, ep.isPremiumExactly)(n, eO.PremiumTypes.TIER_2) &&
                  !l &&
                  !n.hasFreePremium() &&
                  !t.isPurchasedExternally;
              return !eB(eh.NoticeTypes.PREMIUM_UNCANCEL) && r;
            },
            metadata: e => {
              var t;
              let { premiumSubscription: n } = e,
                s =
                  null != n
                    ? a(n.currentPeriodEnd).diff(a().startOf("day"), "days")
                    : 0,
                l =
                  null != n
                    ? null === (t = (0, ep.getPremiumPlanItem)(n)) ||
                      void 0 === t
                      ? void 0
                      : t.planId
                    : null,
                i = null != l ? ep.default.getPremiumType(l) : null;
              return { daysLeft: s, premiumType: i, premiumSubscription: n };
            },
          },
          [eh.NoticeTypes.PREMIUM_MISSING_PAYMENT]: {
            predicate: e => {
              let { premiumSubscription: t, currentUser: n } = e,
                s =
                  null != t
                    ? a(t.currentPeriodEnd).diff(a().startOf("day"), "days")
                    : 0,
                l =
                  null != t
                    ? a(t.currentPeriodEnd).diff(
                        a(t.currentPeriodStart).startOf("day"),
                        "days"
                      )
                    : 0,
                i = null != t && a(t.currentPeriodEnd).isBefore(a()),
                r = eI.default.applicationIdsFetched.has(
                  eO.PREMIUM_SUBSCRIPTION_APPLICATION
                ),
                o = eI.default.getForApplication(
                  eO.PREMIUM_SUBSCRIPTION_APPLICATION
                ),
                u = null != t ? (0, ep.getPremiumPlanItem)(t) : null,
                d = null != u ? ep.default.getSkuIdForPlan(u.planId) : null,
                c =
                  null != o &&
                  null != u &&
                  Array.from(o).filter(e => {
                    let { skuId: t, consumed: n } = e;
                    return !n && t === d;
                  }).length > 0,
                E =
                  null != t &&
                  s <= (l > 14 ? 7 : 2) &&
                  s >= 0 &&
                  t.status !== eh.SubscriptionStatusTypes.PAST_DUE &&
                  !i &&
                  r &&
                  !c &&
                  null === t.paymentSourceId &&
                  !n.hasFreePremium() &&
                  !t.isPurchasedExternally;
              return !eB(eh.NoticeTypes.PREMIUM_MISSING_PAYMENT) && E;
            },
            metadata: e => {
              var t;
              let { premiumSubscription: n } = e,
                s =
                  null != n
                    ? a(n.currentPeriodEnd).diff(a().startOf("day"), "days")
                    : 0,
                l =
                  null != n
                    ? null === (t = (0, ep.getPremiumPlanItem)(n)) ||
                      void 0 === t
                      ? void 0
                      : t.planId
                    : null,
                i = null != l ? ep.default.getPremiumType(l) : null;
              return { daysLeft: s, premiumType: i, premiumSubscription: n };
            },
          },
          [eh.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT]: {
            predicate: e => {
              let { premiumSubscription: t, currentUser: n } = e,
                s =
                  null != t && null != t.paymentSourceId
                    ? ef.default.getPaymentSource(t.paymentSourceId)
                    : null,
                l = null != t && a(t.currentPeriodEnd).isBefore(a()),
                i =
                  null != t &&
                  t.status === eh.SubscriptionStatusTypes.PAST_DUE &&
                  !l &&
                  null != s &&
                  s.invalid &&
                  !n.hasFreePremium() &&
                  !t.isPurchasedExternally;
              return !eB(eh.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT) && i;
            },
            metadata: e => {
              let { premiumSubscription: t } = e;
              return { premiumSubscription: t };
            },
          },
          [eh.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT]: {
            predicate: e => {
              let { premiumSubscription: t, currentUser: n } = e,
                s = null != t && a(t.currentPeriodEnd).isBefore(a()),
                l =
                  null != t &&
                  t.status === eh.SubscriptionStatusTypes.PAST_DUE &&
                  !s &&
                  null === t.paymentSourceId &&
                  !n.hasFreePremium() &&
                  !t.isPurchasedExternally;
              return !eB(eh.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT) && l;
            },
            metadata: e => {
              let { premiumSubscription: t } = e;
              return { premiumSubscription: t };
            },
          },
          [eh.NoticeTypes.MFA_SMS_BACKUP]: {
            predicate: e => {
              let { currentUser: t } = e;
              return (
                null != t &&
                t.mfaEnabled &&
                !t.hasFlag(eh.UserFlags.MFA_SMS) &&
                !t.hasFlag(eh.UserFlags.STAFF) &&
                !t.hasFlag(eh.UserFlags.PARTNER) &&
                !eB(eh.NoticeTypes.MFA_SMS_BACKUP)
              );
            },
          },
          [eh.NoticeTypes.APPLICATION_TEST_MODE]: {
            predicate: () => null != em.default.testModeApplicationId,
            metadata: () => {
              if (null == em.default.testModeApplicationId) return {};
              let e = em.default.testModeApplicationId,
                t = E.default.getApplication(e),
                n = null != t ? t.name : e;
              return { applicationName: n, applicationId: e };
            },
          },
          [eh.NoticeTypes.PREMIUM_REACTIVATE]: {
            predicate: () =>
              !eB(eh.NoticeTypes.PREMIUM_REACTIVATE) &&
              x.default.shouldShowReactivateNotice(),
          },
          [eh.NoticeTypes.LOCALIZED_PRICING]: {
            predicate: e => {
              let { isLocalizedPromoEnabled: t } = e;
              return !eB(eh.NoticeTypes.LOCALIZED_PRICING) && t;
            },
            metadata: e => {
              let { premiumSubscription: t } = e;
              return { premiumSubscription: t };
            },
          },
          [eh.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT]: {
            predicate: e => {
              let { premiumSubscription: t, currentUser: n } = e,
                s = null != t && a(t.currentPeriodEnd).isBefore(a()),
                l =
                  null != t && null != t.paymentSourceId
                    ? ef.default.getPaymentSource(t.paymentSourceId)
                    : null,
                i = null != l && eL.PREPAID_PAYMENT_SOURCES.has(l.type),
                r =
                  null != t &&
                  t.status === eh.SubscriptionStatusTypes.PAST_DUE &&
                  !s &&
                  i &&
                  !n.hasFreePremium() &&
                  !t.isPurchasedExternally;
              return !eB(eh.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT) && r;
            },
            metadata: e => {
              let { premiumSubscription: t } = e;
              if (null == t)
                return { daysPastDue: 0, dismissUntil: a().toDate() };
              {
                let e =
                    t.status === eh.SubscriptionStatusTypes.PAST_DUE
                      ? a().diff(t.currentPeriodStart, "days")
                      : 0,
                  n = (0, ep.getBillingGracePeriodDaysAndExpiresDate)(
                    t
                  ).expiresDate.toDate();
                return { daysPastDue: e, dismissUntil: n };
              }
            },
          },
          [eh.NoticeTypes.DROPS_GO_LIVE_BANNER]: {
            predicate: () =>
              !eB(eh.NoticeTypes.DROPS_GO_LIVE_BANNER) &&
              (0, T.isDismissibleContentDismissed)(
                r.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP
              ) &&
              !(0, T.isDismissibleContentDismissed)(
                r.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP
              ) &&
              (0, m.getShowDropsNoticeBanner)(eM.PartnerGame.FORTNITE),
            metadata: () => ({ partnerGame: eM.PartnerGame.FORTNITE }),
          },
          [eh.NoticeTypes.DROPS_PROGRESS_INTERRUPTION]: {
            predicate: () =>
              I.default.isCurrentQuestInterrupted &&
              null != I.default.currentDropQuestGameTitle,
            metadata: () => ({
              gameTitle: I.default.currentDropQuestGameTitle,
              reloadCallback: () => window.location.reload(!0),
            }),
          },
          [eh.NoticeTypes.POMELO_ELIGIBLE]: {
            predicate: () =>
              (0, D.isEligibleForPomelo)() &&
              !eB(eh.NoticeTypes.POMELO_ELIGIBLE) &&
              !(0, P.getForceMigration)(),
          },
          [eh.NoticeTypes.DROPS_ENDED_INCOMPLETE]: {
            predicate: () =>
              !eB(eh.NoticeTypes.DROPS_ENDED_INCOMPLETE) &&
              (0, T.isDismissibleContentDismissed)(
                r.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP
              ) &&
              !(0, T.isDismissibleContentDismissed)(
                r.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP
              ) &&
              (0, m.getShowDropsEndedIncompleteBanner)(eM.PartnerGame.FORTNITE),
            metadata: () => ({ partnerGame: eM.PartnerGame.FORTNITE }),
          },
          [eh.NoticeTypes.UU_MIGRATION]: {
            predicate: () =>
              (0, D.isEligibleForPomelo)() &&
              !eB(eh.NoticeTypes.UU_MIGRATION) &&
              (0, P.getForceMigration)(),
          },
          [eh.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION]: {
            predicate: e => {
              let { selectedGuildId: t } = e,
                n = null != t ? X.default.getGuild(t) : null;
              return (
                (null != t &&
                  null != O.default.getMentionRaidDetected(t) &&
                  (null == n
                    ? void 0
                    : n.hasFeature(eh.GuildFeatures.COMMUNITY)) &&
                  !eB(eh.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION)) ||
                !1
              );
            },
            metadata: e => {
              let { selectedGuildId: t } = e,
                n = { dismissUntil: a().add(2, "hours").toDate() };
              if (null != t) {
                let e = O.default.getMentionRaidDetected(t);
                null != e && (n.decisionId = e.decisionId);
              }
              return n;
            },
          },
          [eh.NoticeTypes.ACTIVATE_SERVER_SUBSCRIPTION]: {
            predicate: () =>
              !eB(eh.NoticeTypes.ACTIVATE_SERVER_SUBSCRIPTION) &&
              0 !== _.default.getEligibleGuildsForNagActivate().length &&
              (0, f.isCreatorMonetizationNagActivateEnabled)(),
          },
          [eh.NoticeTypes.GUILD_ONBOARDING_UPSELL_NAGBAR]: {
            predicate: e => {
              let { selectedGuildId: t } = e;
              return (
                !eB(eh.NoticeTypes.GUILD_ONBOARDING_UPSELL_NAGBAR) &&
                null != t &&
                (0, R.shouldShowGuildOnboardingUpsell)(
                  t,
                  r.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR
                )
              );
            },
          },
          [eh.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR]: {
            predicate: e => {
              let { currentUser: t } = e;
              return F.isEligibleForNotice(t);
            },
          },
          [eh.NoticeTypes.QUESTS_PROGRESS_INTERRUPTION]: {
            predicate: () => {
              let e = Y.default.getCurrentUserActiveStream();
              if (null == e) return !1;
              let t = (0, C.encodeStreamKey)(e),
                n = k.default.getStreamHeartbeatFailure(t);
              return (
                null != n &&
                Date.now() - n.firstFailedAt >=
                  eR.CONSECUTIVE_HEARTBEAT_PERIOD_MS
              );
            },
            metadata: () => {
              let e = Y.default.getCurrentUserActiveStream();
              return {
                streamKey: null != e ? (0, C.encodeStreamKey)(e) : null,
              };
            },
          },
        };
      function eH() {
        if (!S.default.isConnected()) return !1;
        ej = null;
        let e = ed.default.getCurrentUser();
        if (null == e) return !1;
        let t = e_.default.getPremiumSubscription(),
          n = eE.default.isLocalizedPromoEnabled,
          s = el.default.getGuildId(),
          a = ea.default.getVoiceChannelId(),
          l = null != a ? ec.default.getVoiceStateForChannel(a) : null,
          i = eg.CONFERENCE_MODE_ENABLED ? eF : ek;
        for (let u of i)
          if (
            null != ew[u] &&
            ew[u].predicate({
              selectedGuildId: s,
              voiceChannelId: a,
              voiceState: l,
              currentUser: e,
              premiumSubscription: t,
              isLocalizedPromoEnabled: n,
            })
          ) {
            var r, o;
            let n =
              null === (r = (o = ew[u]).metadata) || void 0 === r
                ? void 0
                : r.call(o, {
                    currentUser: e,
                    premiumSubscription: t,
                    selectedGuildId: s,
                  });
            ej = { ...eU, type: u, metadata: n };
            break;
          }
        null != ej && eB(ej.type) && (ej = null);
      }
      function eV() {
        return (
          !er.default.enabled && delete ey[eh.NoticeTypes.STREAMER_MODE], eH()
        );
      }
      class eY extends l.default.Store {
        initialize() {
          this.syncWith(
            [
              eo.default,
              en.default,
              J.default,
              el.default,
              b.default,
              eT.default,
              W.default,
              Z.default,
              V.default,
              g.default,
              k.default,
              Y.default,
            ],
            eH
          ),
            this.waitFor(
              ed.default,
              ei.default,
              X.default,
              q.default,
              es.default,
              $.default,
              er.default,
              N.default,
              el.default,
              eu.default,
              w.default,
              p.default,
              en.default,
              eS.default,
              eC.default,
              em.default,
              ee.default,
              e_.default,
              eA.default,
              J.default,
              ef.default,
              et.default,
              b.default,
              eI.default,
              eT.default,
              Z.default,
              v.default,
              I.default,
              _.default,
              B.default,
              k.default,
              Y.default
            );
        }
        hasNotice() {
          return null != ej && null != ej.type;
        }
        getNotice() {
          return null == eu.default.getAction() ? ej : null;
        }
        isNoticeDismissed(e) {
          return eB(e);
        }
      }
      eY.displayName = "NoticeStore";
      var eK = new eY(u.default, {
        CURRENT_USER_UPDATE: eH,
        MEDIA_ENGINE_SET_AUDIO_ENABLED: eH,
        CLEAR_REMOTE_DISCONNECT_VOICE_CHANNEL_ID: eH,
        CLEAR_LAST_SESSION_VOICE_CHANNEL_ID: eH,
        STATUS_PAGE_SCHEDULED_MAINTENANCE: eH,
        STATUS_PAGE_SCHEDULED_MAINTENANCE_ACK: eH,
        GUILD_CREATE: eH,
        GUILD_DELETE: eH,
        AUDIO_INPUT_DETECTED: eH,
        AUDIO_SET_DISPLAY_SILENCE_WARNING: eH,
        CERTIFIED_DEVICES_SET: eH,
        AUDIO_SET_INPUT_DEVICE: eH,
        AUDIO_SET_OUTPUT_DEVICE: eH,
        MEDIA_ENGINE_DEVICES: eH,
        RTC_CONNECTION_STATE: eH,
        RPC_APP_AUTHENTICATED: eH,
        RPC_APP_DISCONNECTED: eH,
        USER_CONNECTIONS_UPDATE: eH,
        WINDOW_FOCUS: eH,
        INSTANT_INVITE_CREATE: eH,
        INSTANT_INVITE_REVOKE_SUCCESS: eH,
        SPOTIFY_PLAYER_PAUSE: eH,
        RUNNING_GAMES_CHANGE: eH,
        EXPERIMENTS_FETCH_SUCCESS: eH,
        PREMIUM_PAYMENT_SUBSCRIBE_SUCCESS: eH,
        DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS: eH,
        DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL: eH,
        DEVELOPER_TEST_MODE_RESET: eH,
        BILLING_SUBSCRIPTION_FETCH_SUCCESS: eH,
        DISPATCH_APPLICATION_INSTALL: eH,
        IMPERSONATE_STOP: eH,
        IMPERSONATE_UPDATE: eH,
        GUILD_MEMBER_ADD: function (e) {
          return e.user.id === K.default.getId() && eH();
        },
        GUILD_MEMBER_UPDATE: eH,
        SURVEY_FETCHED: eH,
        ENTITLEMENT_FETCH_APPLICATION_SUCCESS: eH,
        BILLING_PAYMENT_SOURCE_REMOVE_SUCCESS: eH,
        BILLING_SUBSCRIPTION_UPDATE_SUCCESS: eH,
        BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_SUCCESS: eH,
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return (
            t.some(e => {
              let { userId: t } = e;
              return t !== K.default.getId();
            }) && eH()
          );
        },
        STREAMER_MODE_UPDATE: eV,
        RUNNING_STREAMER_TOOLS_CHANGE: eV,
        DISPATCH_APPLICATION_ERROR: function () {
          return delete ey[eh.NoticeTypes.DISPATCH_ERROR], eH();
        },
        DISPATCH_APPLICATION_LAUNCH_SETUP_START: function () {
          return (
            delete ey[eh.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS], eH()
          );
        },
        DISPATCH_APPLICATION_INSTALL_SCRIPTS_PROGRESS_UPDATE: function () {
          return eH();
        },
        DISPATCH_APPLICATION_LAUNCH_SETUP_COMPLETE: function () {
          return eH();
        },
        NOTICE_SHOW: function (e) {
          ej = e.notice;
        },
        NOTICE_DISMISS: function (e) {
          return (
            null != ej &&
            (null == e.id || e.id === ej.id) &&
            (eG(ej.type, e.isTemporary, e.untilAtLeast), eH())
          );
        },
        NOTICE_DISABLE: function (e) {
          let { noticeType: t } = e;
          return eG(t), eH();
        },
        LOGOUT: function () {
          (ey = {}), (ej = null);
        },
        SUBSCRIPTION_PLANS_FETCH_SUCCESS: eH,
        AUTO_MODERATION_MENTION_RAID_DETECTION: eH,
        CREATOR_MONETIZATION_NAG_ACTIVATE_ELIGIBLITY_FETCH_SUCCESS: eH,
        PROXY_BLOCKED_REQUEST: eH,
      });
    },
    763237: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("669491"),
        o = n("77078"),
        u = n("871388"),
        d = n("676223"),
        c = n("429928"),
        E = n("506885"),
        f = n("766274"),
        _ = n("701909"),
        T = n("474293"),
        I = n("158998"),
        m = n("145131"),
        N = n("963422"),
        p = n("533403"),
        S = n("85175"),
        C = n("49111"),
        A = n("450484"),
        h = n("782340"),
        g = n("434641");
      class M extends a.PureComponent {
        render() {
          let { member: e, className: t, guildId: n } = this.props;
          return (0, s.jsx)(o.Popout, {
            renderPopout: this.renderUserPopout,
            position: "left",
            preload: () =>
              (0, E.default)(e.user.id, e.user.getAvatarURL(n, 80), {
                guildId: n,
              }),
            children: a => {
              var l;
              return (0, s.jsx)(o.Tooltip, {
                text: e.unknownUser
                  ? null
                  : null !== (l = e.nick) && void 0 !== l
                    ? l
                    : I.default.getName(e.user),
                children: l =>
                  (0, s.jsx)(o.Clickable, {
                    className: e.unknownUser
                      ? g.partyMember
                      : g.partyMemberKnown,
                    ...l,
                    ...a,
                    children: (0, s.jsx)(o.Avatar, {
                      src: e.user.getAvatarURL(n, 24),
                      size: o.AvatarSizes.SIZE_24,
                      className: i(g.partyAvatar, t),
                      "aria-label": e.user.username,
                    }),
                  }),
              });
            },
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderUserPopout = e => {
              let { renderUserPopout: t, member: n } = this.props;
              return n.unknownUser ? null : t(n.user, e);
            });
        }
      }
      class O extends a.PureComponent {
        isDeadInvite() {
          let {
            isPreview: e,
            message: t,
            activity: n,
            applicationId: s,
          } = this.props;
          return !e && !(null != t && (0, d.default)(n, t, s));
        }
        getPartySize() {
          let { activity: e } = this.props;
          return null == e ||
            null == e.party ||
            null == e.party.size ||
            e.party.size.length < 2
            ? [-1, -1]
            : e.party.size;
        }
        getActionableMode() {
          return [
            C.ActivityActionTypes.LISTEN,
            (0, C.ActivityActionTypes),
          ].includes(this.props.activityActionType) ||
            this.props.isPreview ||
            this.canJoin()
            ? "Actionable"
            : "NotActionable";
        }
        isInParty() {
          let { activity: e, myPartyId: t, isPreview: n } = this.props;
          return !n && null != e && null != e.party && t === e.party.id;
        }
        isPartyFull() {
          let [e, t] = this.getPartySize();
          return e > -1 && e >= t;
        }
        hasPartySize() {
          let [e, t] = this.getPartySize();
          return e > -1 && t > -1;
        }
        isActionType(e) {
          return this.props.activityActionType === e;
        }
        canJoin() {
          let {
            activity: e,
            isPreview: t,
            isGameLaunchable: n,
            isInBrowser: s,
          } = this.props;
          return (
            !!t ||
            (!(
              this.isDeadInvite() ||
              !this.isActionType(C.ActivityActionTypes.JOIN) ||
              !(0, u.default)(e, C.ActivityFlags.JOIN) ||
              !this.hasPartySize() ||
              this.isPartyFull() ||
              s ||
              !n ||
              this.isInParty()
            ) &&
              !0)
          );
        }
        canSendInvite() {
          let { activity: e, isPreview: t } = this.props;
          return (
            !!t ||
            (!(
              this.isDeadInvite() ||
              !this.isActionType(C.ActivityActionTypes.JOIN_REQUEST) ||
              !(0, u.default)(e, C.ActivityFlags.JOIN) ||
              !this.hasPartySize() ||
              this.isPartyFull()
            ) &&
              !0)
          );
        }
        canSync() {
          let {
            activity: e,
            isPreview: t,
            isSyncable: n,
            isInBrowser: s,
          } = this.props;
          return (
            !!t ||
            (!(
              (!this.isActionType(C.ActivityActionTypes.LISTEN) &&
                !this.isActionType(C.ActivityActionTypes.WATCH)) ||
              this.isDeadInvite() ||
              !(0, u.default)(e, C.ActivityFlags.SYNC) ||
              s ||
              !n ||
              this.isInParty()
            ) &&
              !0)
          );
        }
        getHelpdeskArticleURL() {
          let { partyId: e } = this.props;
          return null != e && (0, A.isSpotifyParty)(e)
            ? C.HelpdeskArticles.SPOTIFY_CONNECTION
            : C.HelpdeskArticles.RICH_PRESENCE_INTRODUCTION;
        }
        renderHeaderText() {
          let { activityActionType: e, name: t } = this.props;
          switch (e) {
            case C.ActivityActionTypes.LISTEN:
              return h.default.Messages.INVITE_EMBED_INVITE_TO_LISTEN.format({
                name: t,
              });
            case C.ActivityActionTypes.WATCH:
              return h.default.Messages.INVITE_EMBED_INVITE_TO_WATCH.format({
                name: t,
              });
            case C.ActivityActionTypes.JOIN:
              return h.default.Messages.INVITE_EMBED_INVITE_TO_JOIN_GROUP;
            case C.ActivityActionTypes.JOIN_REQUEST:
            default:
              return h.default.Messages.INVITE_EMBED_ASK_TO_JOIN;
          }
        }
        renderPartyStatus() {
          let {
              activityActionType: e,
              isGameLaunchable: t,
              isSyncable: n,
              isPreview: a,
              isInBrowser: l,
              name: i,
              activity: r,
            } = this.props,
            [u, d] = this.getPartySize();
          if (this.isDeadInvite())
            switch (e) {
              case C.ActivityActionTypes.LISTEN:
                return h.default.Messages.INVITE_EMBED_LISTEN_HAS_ENDED;
              case C.ActivityActionTypes.WATCH:
                return h.default.Messages.INVITE_EMBED_WATCH_HAS_ENDED;
              case C.ActivityActionTypes.JOIN:
              case C.ActivityActionTypes.JOIN_REQUEST:
              default:
                return h.default.Messages.INVITE_EMBED_GAME_HAS_ENDED;
            }
          if (l && !a && e === C.ActivityActionTypes.JOIN)
            return h.default.Messages.INVITE_EMBED_JOIN_VIA_DESKTOP_APP;
          if (
            this.isActionType(C.ActivityActionTypes.LISTEN) ||
            this.isActionType(C.ActivityActionTypes.WATCH)
          )
            return null != r &&
              null != r.details &&
              null != r.state &&
              (0, c.default)(r)
              ? [
                  (0, s.jsx)(
                    "div",
                    {
                      className: g.details,
                      children: (0, s.jsx)(o.Anchor, {
                        className: g.textLink,
                        onClick: this.handleOpenSpotifyTrack,
                        children: r.details,
                      }),
                    },
                    "details"
                  ),
                  (0, s.jsx)(
                    "div",
                    {
                      className: g.state,
                      children:
                        h.default.Messages.USER_ACTIVITY_LISTENING_ARTISTS.format(
                          {
                            artists: r.state,
                            artistsHook: (e, t) =>
                              null != r.state
                                ? (0, s.jsx)(
                                    N.default,
                                    {
                                      artists: r.state,
                                      linkClassName: g.textLink,
                                      canOpen: null != r.sync_id,
                                      onOpenSpotifyArtist:
                                        this.handleOpenSpotifyArtist,
                                    },
                                    t
                                  )
                                : null,
                          }
                        ),
                    },
                    "state"
                  ),
                ]
              : this.isActionType(C.ActivityActionTypes.LISTEN)
                ? h.default.Messages.USER_ACTIVITY_LISTEN_ALONG
                : h.default.Messages.USER_ACTIVITY_WATCH_ALONG;
          return this.isActionType(C.ActivityActionTypes.JOIN_REQUEST)
            ? this.isPartyFull()
              ? h.default.Messages.INVITE_EMBED_FULL_GROUP
              : h.default.Messages.INVITE_EMBED_NUM_OPEN_SLOTS.format({
                  number: d - u,
                })
            : this.isInParty()
              ? h.default.Messages.INVITE_EMBED_IN_GROUP
              : t || n || a
                ? this.isPartyFull()
                  ? h.default.Messages.INVITE_EMBED_FULL_GROUP
                  : this.hasPartySize()
                    ? h.default.Messages.INVITE_EMBED_NUM_OPEN_SLOTS.format({
                        number: d - u,
                      })
                    : h.default.Messages.JOIN
                : h.default.Messages.USER_ACTIVITY_NOT_DETECTED.format({
                    name: i,
                  });
        }
        renderActionButton() {
          let {
              isInBrowser: e,
              isPreview: t,
              isGameLaunchable: n,
              isSender: a,
              partyId: l,
              activity: i,
              message: r,
              renderSpotifyJoinButton: u,
              renderCustomButton: d,
            } = this.props,
            c = { className: g.actionButton, size: o.Button.Sizes.SMALL },
            E = null != d ? d(c) : null;
          return null != E
            ? E
            : !this.isDeadInvite() &&
                this.isActionType(C.ActivityActionTypes.LISTEN) &&
                null != l &&
                null != r &&
                null != i &&
                (0, A.isSpotifyParty)(l)
              ? u({ ...c, activity: i, user: r.author })
              : (0, s.jsx)(o.Button, {
                  ...c,
                  ...(() => {
                    if (!t && e && !this.isDeadInvite())
                      return {
                        children:
                          h.default.Messages.USER_ACTIVITY_ACTION_DOWNLOAD_APP,
                        onClick: this.handleDownloadApp,
                      };
                    if (this.canJoin())
                      return {
                        children: h.default.Messages.JOIN,
                        onClick: this.handleJoin,
                      };
                    if (this.canSync())
                      return {
                        children: h.default.Messages.JOIN,
                        onClick: this.handleSync,
                      };
                    if (this.canSendInvite())
                      return {
                        children:
                          h.default.Messages.INVITE_EMBED_INVITE_TO_JOIN,
                        onClick: this.handleInvite,
                        disabled: a,
                      };
                    return {
                      children: this.isActionType(
                        C.ActivityActionTypes.JOIN_REQUEST
                      )
                        ? h.default.Messages.INVITE_EMBED_INVITE_TO_JOIN
                        : h.default.Messages.JOIN,
                      disabled: !0,
                    };
                  })(),
                  color:
                    (e || n) && !this.isDeadInvite()
                      ? o.Button.Colors.GREEN
                      : o.Button.Colors.PRIMARY,
                  submitting: this.props.isLoading,
                });
        }
        renderMoreUsers(e, t, n) {
          return (0, s.jsx)("div", { className: g.moreUsers, children: e }, n);
        }
        renderParty() {
          let {
              partyId: e,
              partyMembers: t,
              hideParty: n,
              guildId: a,
            } = this.props,
            [l, i] = this.getPartySize(),
            r =
              this.hasPartySize() ||
              this.isActionType(C.ActivityActionTypes.LISTEN) ||
              this.isActionType(C.ActivityActionTypes.WATCH);
          if (null == e || this.isDeadInvite() || !r || n) return null;
          let o = [...t],
            u = Math.min(l, 6);
          for (; o.length < u; )
            o.push({
              user: new f.default({ discriminator: "0005" }),
              unknownUser: !0,
            });
          let d = Math.min(i, 106);
          for (; o.length < d; ) o.push(null);
          return (0, s.jsx)(p.default, {
            guildId: a,
            className: g.partyMembers,
            users: o,
            max: i > 0 ? Math.min(i, 6) : 6,
            renderUser: this.renderUser,
            renderMoreUsers: this.renderMoreUsers,
          });
        }
        render() {
          let {
              className: e,
              coverImage: t,
              name: n,
              activity: a,
            } = this.props,
            l =
              this.isActionType(C.ActivityActionTypes.JOIN) ||
              this.isActionType(C.ActivityActionTypes.JOIN_REQUEST),
            u = this.isDeadInvite(),
            d = null;
          null == t || null == a || l
            ? !l &&
              u &&
              (d = (0, s.jsx)("div", {
                className: g.artworkSpotifySessionEnded,
              }))
            : (d = (0, s.jsx)("img", {
                alt: "",
                src: t,
                className: (0, T.getClass)(
                  g,
                  "artwork",
                  this.getActionableMode()
                ),
              }));
          let E =
              null != a &&
              null != d &&
              null != a.assets &&
              null != a.assets.large_text &&
              "" !== a.assets.large_text &&
              !u &&
              (0, c.default)(a)
                ? a.assets.large_text
                : null,
            f =
              null != E
                ? (0, s.jsx)(o.Tooltip, {
                    text: E,
                    children: e => {
                      let { onMouseEnter: t, onMouseLeave: n } = e;
                      return (0, s.jsx)(o.Anchor, {
                        onClick: this.handleOpenSpotifyAlbum,
                        onMouseEnter: t,
                        onMouseLeave: n,
                        children: d,
                      });
                    },
                  })
                : d;
          return (0, s.jsxs)("div", {
            className: i(g.invite, e),
            children: [
              (0, s.jsx)("div", {
                className: g.coverImageWrapper,
                children: (0, s.jsx)("div", {
                  className: i(
                    (0, T.getClass)(g, "coverImage", this.getActionableMode()),
                    null != d ? g.blurred : null
                  ),
                  style: {
                    backgroundImage:
                      null != t ? "url('".concat(t, "')") : void 0,
                  },
                }),
              }),
              (0, s.jsxs)(m.default, {
                className: g.fullHeight,
                children: [
                  (0, s.jsxs)(m.default, {
                    direction: m.default.Direction.VERTICAL,
                    children: [
                      (0, s.jsx)("div", {
                        className: g.header,
                        children: this.renderHeaderText(),
                      }),
                      (0, s.jsx)(m.default.Child, {
                        className: g.partyStatus,
                        children: this.renderPartyStatus(),
                      }),
                      (0, s.jsxs)(m.default, {
                        align: m.default.Align.END,
                        children: [
                          (0, s.jsxs)(m.default, {
                            align: m.default.Align.CENTER,
                            className: g.actionAndParty,
                            basis: 0,
                            style: { marginRight: 0 },
                            children: [
                              this.renderActionButton(),
                              this.renderParty(),
                            ],
                          }),
                          null == d && l
                            ? (0, s.jsx)("div", {
                                className: g.name,
                                children: n,
                              })
                            : null,
                        ],
                      }),
                    ],
                  }),
                  f,
                ],
              }),
              (0, s.jsx)(o.Anchor, {
                href: _.default.getArticleURL(this.getHelpdeskArticleURL()),
                className: g.helpIcon,
                children: (0, s.jsx)(S.default, {
                  color: r.default.unsafe_rawColors.PRIMARY_300.css,
                  width: 12,
                  height: 12,
                }),
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleJoin = () => {
              let { onJoin: e } = this.props;
              null == e || e();
            }),
            (this.handleInvite = () => {
              let { onInvite: e } = this.props;
              null == e || e();
            }),
            (this.handleSync = () => {
              let { onSync: e } = this.props;
              null == e || e();
            }),
            (this.handleDownloadApp = () => {
              let { onDownloadApp: e } = this.props;
              null == e || e();
            }),
            (this.handleOpenSpotifyTrack = () => {
              let { activity: e, onOpenSpotifyTrack: t } = this.props;
              null != e && (null == t || t(e));
            }),
            (this.handleOpenSpotifyArtist = e => {
              let {
                activity: t,
                onOpenSpotifyArtist: n,
                message: s,
              } = this.props;
              null != t && null != s && (null == n || n(t, s.author.id, e));
            }),
            (this.handleOpenSpotifyAlbum = () => {
              let {
                activity: e,
                onOpenSpotifyAlbum: t,
                message: n,
              } = this.props;
              null != e && null != n && (null == t || t(e, n.author.id));
            }),
            (this.renderUser = (e, t, n) => {
              let { renderUserPopout: a, guildId: l } = this.props;
              return null != e
                ? (0, s.jsx)(
                    M,
                    {
                      member: e,
                      renderUserPopout: a,
                      className: t,
                      guildId: l,
                    },
                    n
                  )
                : (0, s.jsx)("div", { className: i(g.partyMemberEmpty, t) }, n);
            });
        }
      }
      var R = O;
    },
    85871: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("782340"),
        r = n("56401"),
        o = e => {
          let { className: t } = e;
          return (0, s.jsx)("div", {
            className: l(r.tag, t),
            children: (0, s.jsx)("span", {
              className: r.text,
              children: i.default.Messages.APPLICATION_STORE_FIRST_ON_DISCORD,
            }),
          });
        };
    },
    265836: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("862337");
      class i extends a.Component {
        static getDerivedStateFromProps(e) {
          return e.disable ? { hovered: !1 } : null;
        }
        componentDidMount() {
          let { pauseOnHover: e, disable: t } = this.props,
            n = this.state.hovered && e;
          !t && !n && this.startTimer();
        }
        componentWillUnmount() {
          this.stopTimer();
        }
        componentDidUpdate(e, t) {
          var n, s, a, l;
          let { props: i } = this;
          let r =
            ((n = i),
            (s = this.state),
            !n.disable && !(s.hovered && n.pauseOnHover));
          let o =
            ((a = e), (l = t), !a.disable && !(l.hovered && a.pauseOnHover));
          (r && !o) || e.interval !== i.interval
            ? this.startTimer()
            : !r && o && this.stopTimer();
        }
        startTimer() {
          let { interval: e, onInterval: t, disable: n } = this.props;
          !n &&
            this.timer.start(e, () => {
              t();
            });
        }
        stopTimer() {
          this.timer.stop();
        }
        render() {
          let { children: e, className: t, disable: n } = this.props,
            a = n
              ? null
              : {
                  onMouseEnter: this.handlePause,
                  onFocus: this.handlePause,
                  onMouseLeave: this.handleResume,
                  onBlur: this.handleResume,
                };
          return (0, s.jsx)("div", { ...a, className: t, children: e });
        }
        constructor(...e) {
          super(...e),
            (this.timer = new l.Interval()),
            (this.state = { hovered: !1 }),
            (this.handlePause = () => {
              !this.state.hovered && this.setState({ hovered: !0 });
            }),
            (this.handleResume = () => {
              this.setState({ hovered: !1 });
            });
        }
      }
      i.defaultProps = { disable: !1, pauseOnHover: !1 };
      var r = i;
    },
    231561: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("782340"),
        r = n("191659"),
        o = e => {
          let { className: t } = e;
          return (0, s.jsx)("div", {
            className: l(r.tag, t),
            children: (0, s.jsx)("span", {
              className: r.text,
              children:
                i.default.Messages.APPLICATION_STORE_THE_GAME_AWARDS_WINNER,
            }),
          });
        };
    },
    347374: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("458960"),
        o = n("394846"),
        u = n("862337"),
        d = n("266491"),
        c = n("77078"),
        E = n("265836"),
        f = n("368121"),
        _ = n("570511"),
        T = n("58608"),
        I = n("815178");
      class m extends a.Component {
        renderMedia() {
          let { src: e, className: t, title: n } = this.props,
            { imageLoading: a } = this.state;
          return (0, s.jsx)(r.default.img, {
            className: i({ [I.imageLoading]: a }, t),
            src: e,
            alt: n,
            style: this.getImageStyle(),
            onError: this.handleImageError,
            onLoad: this.handleImageLoaded,
          });
        }
        render() {
          let { className: e, title: t, src: n } = this.props,
            { imageLoadError: a, imageLoading: l } = this.state;
          return null == n || a
            ? (0, s.jsx)(r.default.div, {
                className: i(I.titleContainer, e),
                style: this.getImageStyle(),
                children: t,
              })
            : (0, s.jsxs)(r.default.div, {
                className: i(l ? I.loadingContainer : null, e),
                style: this.getImageStyle(),
                children: [
                  l
                    ? (0, s.jsx)(c.Spinner, {
                        className: I.spinner,
                        itemClassName: I.spinnerItem,
                        type: c.Spinner.Type.PULSING_ELLIPSIS,
                        animated: !0,
                      })
                    : null,
                  this.renderMedia(),
                ],
              });
        }
        constructor(...e) {
          super(...e),
            (this._animatedValue = new r.default.Value(1)),
            (this.state = { imageLoadError: !1, imageLoading: !0 }),
            (this.componentWillEnter = e => {
              this._animatedValue.setValue(0),
                r.default
                  .timing(this._animatedValue, { toValue: 1, duration: 400 })
                  .start(e);
            }),
            (this.componentWillLeave = e => {
              r.default
                .timing(this._animatedValue, { toValue: 0, duration: 400 })
                .start(e);
            }),
            (this.getImageStyle = () => ({ opacity: this._animatedValue })),
            (this.handleImageError = () => {
              this.setState({ imageLoadError: !0, imageLoading: !1 });
            }),
            (this.handleImageLoaded = () => {
              this.setState({ imageLoading: !1 });
            });
        }
      }
      class N extends a.Component {
        componentWillUnmount() {
          this.videoTimeout.stop();
        }
        componentDidUpdate(e) {
          let { playing: t } = this.props,
            n = this._video.current;
          if (null != n) {
            if (t && !e.playing) {
              this.videoTimeout.stop(),
                isFinite(n.duration) &&
                  isFinite(n.currentTime) &&
                  (n.currentTime = 0),
                (n.volume = 0.3);
              let e = n.play();
              null != e &&
                e.then(() => {
                  this.videoPlaying = !0;
                });
            } else
              e.playing &&
                !t &&
                this.videoTimeout.start(400, () => {
                  this.videoPlaying && (n.pause(), (this.videoPlaying = !1));
                });
          }
        }
        renderTypeImage() {
          let {
            playing: e,
            slideImages: t,
            image: n,
            title: a,
            splashClassName: l,
          } = this.props;
          return null == t
            ? (0, s.jsx)(
                m,
                { className: i(I.splash, l), src: n, title: a },
                "image"
              )
            : (0, s.jsx)(E.default, {
                onInterval: this.nextItem,
                interval: 2e3,
                className: I.slideshowWrapper,
                disable: !e,
                children: (0, s.jsx)(d.TransitionGroup, {
                  children: this.renderSlideItem(t),
                }),
              });
        }
        render() {
          let {
              video: e,
              className: t,
              placeholder: n,
              renderMediaOverlay: a,
              playing: l,
            } = this.props,
            { videoLoadError: r, videoLoaded: o } = this.state;
          return n
            ? (0, s.jsx)("div", { className: t })
            : (0, s.jsxs)("figure", {
                className: i(I.tileMedia, t),
                children: [
                  null == e || r
                    ? this.renderTypeImage()
                    : this.renderTypeVideo(),
                  null != a && a(l && o),
                ],
              });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              currentIndex: 0,
              videoLoadError: !1,
              videoLoaded: !1,
            }),
            (this._video = a.createRef()),
            (this.videoTimeout = new u.Timeout()),
            (this.videoPlaying = !1),
            (this.handleToggleMute = e => {
              e.stopPropagation(), e.preventDefault();
              let { onToggleMute: t } = this.props;
              null == t || t(e);
            }),
            (this.handleVideoError = () => {
              this.setState({ videoLoadError: !0 });
            }),
            (this.handleVideoLoaded = () => {
              this.setState({ videoLoaded: !0 });
            }),
            (this.renderTypeVideo = () => {
              let { videoLoaded: e } = this.state,
                {
                  video: t,
                  image: n,
                  title: l,
                  playing: r,
                  muted: u,
                  splashClassName: E,
                  splashPlaceholderClassName: N,
                  renderMediaOverlay: p,
                } = this.props,
                S = u ? _.default : f.default;
              return (0, s.jsxs)(a.Fragment, {
                children: [
                  o.isMobile
                    ? null
                    : (0, s.jsx)(T.default, {
                        className: i(I.splash, E),
                        muted: u,
                        loop: !0,
                        preload: "none",
                        ref: this._video,
                        onLoadedMetadata: this.handleVideoLoaded,
                        onError: this.handleVideoError,
                        children: (0, s.jsx)("source", {
                          src: t,
                          type: "video/mp4",
                        }),
                      }),
                  (0, s.jsx)(d.TransitionGroup, {
                    children:
                      r && e
                        ? null
                        : (0, s.jsx)(
                            m,
                            {
                              className: i(I.splashPlaceholder, N),
                              src: n,
                              title: l,
                            },
                            0
                          ),
                  }),
                  (0, s.jsx)(c.Clickable, {
                    className: i(I.muteContainer, {
                      [I.muteContainerPlaying]: r && e,
                      [I.muteContainerMediaOverlay]: null != p,
                    }),
                    onClick: this.handleToggleMute,
                    children:
                      r && e ? (0, s.jsx)(S, { className: I.mute }) : null,
                  }),
                ],
              });
            }),
            (this.nextItem = () => {
              let { slideImages: e } = this.props;
              null != e &&
                this.setState({
                  currentIndex: (this.state.currentIndex + 1) % e.length,
                });
            }),
            (this.renderSlideItem = e => {
              let {
                  image: t,
                  title: n,
                  playing: a,
                  splashClassName: l,
                } = this.props,
                { currentIndex: r } = this.state;
              return a
                ? (0, s.jsx)(
                    m,
                    { className: i(I.splash, l), src: e[r], title: n },
                    r
                  )
                : (0, s.jsx)(
                    m,
                    { className: i(I.splash, l), src: t, title: n },
                    "image"
                  );
            });
        }
      }
      var p = N;
    },
    79945: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("906069"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 18,
              height: n = 18,
              color: a = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, s.jsx)("path", {
                  className: l,
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M12.1151 2.00065C12.0768 2.00022 12.0384 2 12 2C6.477 2 2 6.477 2 12C2 17.522 6.477 22 12 22C17.523 22 22 17.522 22 12C22 11.9616 21.9998 11.9232 21.9993 11.8849C21.1882 12.1737 20.3146 12.3309 19.4043 12.3309C15.1323 12.3309 11.6691 8.86771 11.6691 4.59565C11.6691 3.68536 11.8263 2.8118 12.1151 2.00065ZM7.92105 11.8023C7.92105 12.7107 7.18468 13.4471 6.27631 13.4471C5.36795 13.4471 4.63158 12.7107 4.63158 11.8023C4.63158 10.894 5.36795 10.1576 6.27631 10.1576C7.18467 10.1576 7.92105 10.894 7.92105 11.8023ZM10.5217 14.5171C10.3859 13.9893 9.84786 13.6716 9.32005 13.8074C8.79223 13.9433 8.47448 14.4813 8.61033 15.0091C9.01196 16.5695 10.4273 17.7236 12.1147 17.7236C13.8021 17.7236 15.2174 16.5695 15.6191 15.0091C15.7549 14.4813 15.4372 13.9433 14.9093 13.8074C14.3815 13.6716 13.8435 13.9893 13.7077 14.5171C13.525 15.2267 12.8797 15.7499 12.1147 15.7499C11.3497 15.7499 10.7044 15.2267 10.5217 14.5171Z",
                  fill: a,
                }),
                (0, s.jsx)("path", {
                  d: "M18.5 2C17.9477 2 17.5 2.44772 17.5 3V4.5H16C15.4477 4.5 15 4.94771 15 5.5C15 6.05228 15.4477 6.5 16 6.5H17.5V8C17.5 8.55228 17.9477 9 18.5 9C19.0523 9 19.5 8.55229 19.5 8V6.5H21C21.5523 6.5 22 6.05229 22 5.5C22 4.94772 21.5523 4.5 21 4.5H19.5V3C19.5 2.44772 19.0523 2 18.5 2Z",
                  fill: a,
                }),
              ],
            });
          },
          l.ReactionIcon,
          void 0,
          { size: 18 }
        );
    },
    64791: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("607387"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let { width: t = 24, height: n = 24, ...a } = e;
            return (0, s.jsx)("svg", {
              ...(0, i.default)(a),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
            });
          },
          l.AppsIcon,
          void 0,
          { size: 24 }
        );
    },
    988150: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            className: i,
            fill: l,
            d: "M21 5V11.59L18 8.59L14 12.59L10 8.59L6 12.59L3 9.59V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5ZM18 11.42L21 14.42V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V12.42L6 15.42L10 11.42L14 15.42L18 11.42Z",
          }),
        });
      }
    },
    790950: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("856567"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 18,
              height: n = 18,
              color: a = "currentColor",
              ...l
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(l),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, s.jsx)("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M20.3397 14.2379C21.2318 14.4731 22.1292 14.5474 23 14.4789C22.9906 14.5151 22.9809 14.5514 22.9711 14.5876C21.5194 19.9201 15.9496 23.086 10.5309 21.6569C10.3451 21.6079 10.1619 21.5542 9.98145 21.4958C7.94618 20.8378 5.90941 20 3.77041 20H3.5C2.67157 20 2 19.3284 2 18.5C2 17.6716 2.67157 17 3.5 17C4.75918 17 3.9661 15.8584 3.47514 14.7655C3.28101 14.3334 2.86615 14 2.39244 14H1.5C0.671573 14 0 13.3284 0 12.5C0 11.6716 0.671573 11 1.5 11V11C2.38174 11 3.10559 10.3274 3.33171 9.47516C3.33726 9.45427 3.34287 9.43338 3.34856 9.41249V9.41249C3.53406 8.7311 2.9812 8.0187 2.44976 7.55366C2.17543 7.31362 2 6.96872 2 6.5C2 5.67157 2.67157 5 3.5 5V5C5.03983 5 6.4765 4.31861 7.78941 3.51404C10.0926 2.10261 12.9612 1.59744 15.7887 2.34316C15.827 2.35324 15.8651 2.36352 15.9031 2.374C15.4064 3.08271 15.0224 3.88574 14.7831 4.76493C13.6598 8.89108 16.1476 13.1323 20.3397 14.2379ZM9.26206 8.71607C8.70747 8.56981 8.13976 8.79579 7.83448 9.23964C7.62045 9.55083 7.19184 9.86027 6.69655 9.72964C6.24033 9.60932 5.88292 9.10507 6.13732 8.60064C6.78216 7.32202 8.27206 6.62396 9.72714 7.00771C11.1822 7.39146 12.1179 8.72923 12.0268 10.1539C11.9909 10.7159 11.4252 10.9767 10.969 10.8564C10.4737 10.7258 10.2597 10.2469 10.2324 9.87205C10.1935 9.33743 9.81666 8.86234 9.26206 8.71607ZM16.3671 14.9268C16.17 14.5422 15.7892 14.2404 15.3308 14.1195L10.6411 12.8827C10.1826 12.7618 9.69947 12.8357 9.33352 13.0718C8.95878 13.3135 8.70829 13.7284 8.7613 14.2422C8.93054 15.8827 10.1055 17.3278 11.821 17.7802C13.5365 18.2326 15.2881 17.5594 16.2681 16.222C16.575 15.8031 16.5688 15.3205 16.3671 14.9268Z",
                  fill: a,
                }),
                (0, s.jsx)("path", {
                  d: "M20.5 4C19.9477 4 19.5 4.44772 19.5 5V6.5H18C17.4477 6.5 17 6.94771 17 7.5C17 8.05228 17.4477 8.5 18 8.5H19.5V10C19.5 10.5523 19.9477 11 20.5 11C21.0523 11 21.5 10.5523 21.5 10V8.5H23C23.5523 8.5 24 8.05229 24 7.5C24 6.94772 23.5523 6.5 23 6.5H21.5V5C21.5 4.44772 21.0523 4 20.5 4Z",
                  fill: a,
                }),
              ],
            });
          },
          l.SuperReactionIcon,
          void 0,
          { size: 18 }
        );
    },
    85175: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 16,
          height: n = 16,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("g", {
            fill: l,
            className: i,
            fillRule: "evenodd",
            transform: "translate(7 4)",
            children: (0, s.jsx)("path", {
              d: "M0 4.3258427C0 5.06741573.616438356 5.68539326 1.35616438 5.68539326 2.09589041 5.68539326 2.71232877 5.06741573 2.71232877 4.3258427 2.71232877 2.84269663 4.31506849 2.78089888 4.5 2.78089888 4.68493151 2.78089888 6.28767123 2.84269663 6.28767123 4.3258427L6.28767123 4.63483146C6.28767123 5.25280899 5.97945205 5.74719101 5.42465753 6.05617978L4.19178082 6.73595506C3.51369863 7.10674157 3.14383562 7.78651685 3.14383562 8.52808989L3.14383562 9.64044944C3.14383562 10.3820225 3.76027397 11 4.5 11 5.23972603 11 5.85616438 10.3820225 5.85616438 9.64044944L5.85616438 8.96067416 6.71917808 8.52808989C8.1369863 7.78651685 9 6.30337079 9 4.69662921L9 4.3258427C9 1.48314607 6.71917808 0 4.5 0 2.21917808 0 0 1.48314607 0 4.3258427zM4.5 12C2.5 12 2.5 15 4.5 15 6.5 15 6.5 12 4.5 12L4.5 12z",
            }),
          }),
        });
      }
    },
    840817: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("851298"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: a = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              fill: "none",
              children: [
                (0, s.jsx)("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  className: l,
                  d: "M13.2899 2H6C3.79086 2 2 3.79086 2 6V18C2 20.2091 3.79086 22 6 22H18C20.2091 22 22 20.2091 22 18V10.7101C21.3663 10.8987 20.695 11 20 11C16.134 11 13 7.86599 13 4C13 3.30503 13.1013 2.63371 13.2899 2ZM8 6C9.1032 6 10 6.8952 10 8C10 9.1056 9.1032 10 8 10C6.8944 10 6 9.1056 6 8C6 6.8952 6.8944 6 8 6ZM6 18L9 14L11 16L15 11L18 18H6Z",
                  fill: a,
                }),
                (0, s.jsx)("path", {
                  d: "M21 0V3H24V5H21V8H19V5H16V3H19V0H21Z",
                  fill: a,
                }),
              ],
            });
          },
          l.ImagePlusIcon,
          void 0,
          { size: 24 }
        );
    },
    880013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("858994"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: a = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: (0, s.jsx)("path", {
                  className: l,
                  fill: a,
                  d: "M17,13.6 L17.3999992,13.6 C19.0406735,13.6 20.496781,12.8097754 21.4084757,11.5891722 L21.8198761,18.8298199 C21.913864,20.4840062 20.6490733,21.9011814 18.994887,21.9951692 C18.9382174,21.9983891 18.8814679,22 18.8247069,22 L5.1752931,22 C3.51843885,22 2.1752931,20.6568542 2.1752931,19 C2.1752931,18.943239 2.17690401,18.8864895 2.18012387,18.8298199 L2.59152425,11.5891732 C3.503219,12.8097758 4.95932613,13.6 6.6,13.6 L7,13.6 L7,15 L9,15 L9,13.6 L15,13.6 L15,15 L17,15 L17,13.6 Z M7,16 L7,18 L9,18 L9,16 L7,16 Z M15,16 L17,16 L17,18 L15,18 L15,16 Z M15,11.6 L9,11.6 L9,9 L7,9 L7,11.6 L6.6,11.6 C4.94314575,11.6 3.6,10.2568542 3.6,8.6 L3.6,5 C3.6,3.34314575 4.94314575,2 6.6,2 L17.3999992,2 C19.0568535,2 20.3999992,3.34314575 20.3999992,5 L20.3999992,8.6 C20.3999992,10.2568542 19.0568535,11.6 17.3999992,11.6 L17,11.6 L17,9 L15,9 L15,11.6 Z",
                }),
              }),
            });
          },
          l.InventoryIcon,
          void 0,
          { size: 24 }
        );
    },
    752531: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("249736"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: a = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              fill: "none",
              viewBox: "0 0 20 20",
              children: [
                (0, s.jsxs)("g", {
                  clipPath: "url(#clip0_1139_61312)",
                  children: [
                    (0, s.jsx)("path", {
                      transform: "translate(1.5, 0.5)",
                      d: "M14.5714 6.54545C14.3743 6.54545 14.2114 6.42273 14.16 6.24273L13.7743 4.89273C13.6543 4.47545 13.3114 4.14818 12.8743 4.03364L11.46 3.66545C11.2714 3.61636 11.1429 3.46091 11.1429 3.27273C11.1429 3.08455 11.2714 2.92909 11.46 2.88L12.8743 2.51182C13.3114 2.39727 13.6543 2.07 13.7743 1.65273L14.16 0.302727C14.2114 0.122727 14.3743 0 14.5714 0C14.7686 0 14.9314 0.122727 14.9829 0.302727L15.3686 1.65273C15.4886 2.07 15.8314 2.39727 16.2686 2.51182L17.6829 2.88C17.8714 2.92909 18 3.08455 18 3.27273C18 3.46091 17.8714 3.61636 17.6829 3.66545L16.2686 4.03364C15.8314 4.14818 15.4886 4.47545 15.3686 4.89273L14.9829 6.24273C14.9314 6.42273 14.7686 6.54545 14.5714 6.54545Z",
                      fill: "url(#paint0_linear_1139_61312)",
                    }),
                    (0, s.jsx)("path", {
                      transform: "translate(1.5, 0.5)",
                      fillRule: "evenodd",
                      clipRule: "evenodd",
                      d: "M8.8 1.63636H3.2C1.43269 1.63636 0 3.06905 0 4.83636V14.4364C0 16.2036 1.43269 17.6364 3.2 17.6364H12.8C14.5673 17.6364 16 16.2036 16 14.4364V8.03636H10.4C9.51632 8.03636 8.8 7.32002 8.8 6.43636V1.63636ZM4.8 4.83636C5.68256 4.83636 6.4 5.55252 6.4 6.43636C6.4 7.32084 5.68256 8.03636 4.8 8.03636C3.91552 8.03636 3.2 7.32084 3.2 6.43636C3.2 5.55252 3.91552 4.83636 4.8 4.83636ZM3.2 14.4364L5.6 11.2364L7.2 12.8364L10.4 8.83636L12.8 14.4364H3.2Z",
                      className: l,
                      fill: a,
                    }),
                  ],
                }),
                (0, s.jsxs)("defs", {
                  children: [
                    (0, s.jsxs)("linearGradient", {
                      id: "paint0_linear_1139_61312",
                      x1: "11.1429",
                      y1: "6.54546",
                      x2: "17.6812",
                      y2: "-0.304273",
                      gradientUnits: "userSpaceOnUse",
                      children: [
                        (0, s.jsx)("stop", { "stop-color": "#0B875E" }),
                        (0, s.jsx)("stop", {
                          offset: "1",
                          "stop-color": "#0075A8",
                        }),
                      ],
                    }),
                    (0, s.jsx)("clipPath", {
                      id: "clip0_1139_61312",
                      children: (0, s.jsx)("rect", {
                        width: "18",
                        height: "18",
                        fill: "white",
                      }),
                    }),
                  ],
                }),
              ],
            });
          },
          l.ImageSparkleIcon,
          void 0,
          { size: 24 }
        );
    },
    277174: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("729"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: a = "currentColor",
              ...l
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(l),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, s.jsxs)("g", {
                  clipPath: "url(#clip0)",
                  children: [
                    (0, s.jsx)("path", {
                      d: "M18.8648 1.13516L21.0013 3.27074H16V4.72926H21.0013L18.8648 6.86484L20 8L24 4L20 0L18.8648 1.13516Z",
                      fill: a,
                    }),
                    (0, s.jsx)("path", {
                      d: "M12 2C12.4342 2 12.8466 2.0917 13.2188 2.25683C13.0759 2.81411 13 3.39819 13 4C13 5.90397 13.7601 7.6304 14.9935 8.89235L14.99 11C14.99 12.66 13.66 14 12 14C10.34 14 9 12.66 9 11V5C9 3.34 10.34 2 12 2Z",
                      fill: a,
                    }),
                    (0, s.jsx)("path", {
                      d: "M12 16.1C14.76 16.1 17.3 14 17.3 11H19C19 14.42 16.28 17.24 13 17.72V22H11V17.72C7.72 17.23 5 14.41 5 11H6.7C6.7 14 9.24 16.1 12 16.1Z",
                      fill: a,
                    }),
                  ],
                }),
                (0, s.jsx)("defs", {
                  children: (0, s.jsx)("clipPath", {
                    id: "clip0",
                    children: (0, s.jsx)("rect", {
                      width: "24",
                      height: "24",
                      fill: a,
                    }),
                  }),
                }),
              ],
            });
          },
          l.MicrophoneArrowRightIcon,
          void 0,
          { size: 24 }
        );
    },
    943519: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let { color: t = "currentColor", foreground: n, ...l } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(l),
          viewBox: "0 0 136 56",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: (0, s.jsxs)("g", {
            className: n,
            fill: t,
            children: [
              (0, s.jsx)("path", {
                d: "M124.299 22.9512H107.187C106.75 22.9512 106.368 23.2787 106.313 23.7154L105.495 29.3918C105.413 29.9103 105.822 30.4015 106.368 30.4015H109.506C109.834 30.4015 110.025 30.729 109.916 31.0019C109.534 31.9025 109.234 32.9122 109.097 33.9766L107.514 44.9746C106.477 52.343 112.591 56 119.277 56C126.264 56 133.142 52.3157 134.179 44.9746L135.762 33.9766C136.744 26.7719 130.822 23.115 124.299 22.9512ZM127.574 34.0038L125.991 44.7563C125.636 47.2943 122.771 48.4678 120.123 48.4678C117.667 48.4678 115.265 47.2943 115.593 44.9746L117.176 33.9766C117.53 31.575 120.396 30.3469 123.043 30.3469C125.691 30.3469 127.956 31.575 127.574 34.0038Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M29.3491 22.9512H22.9627C22.526 22.9512 22.1439 23.2787 22.0894 23.7154L20.1243 37.7154V37.7427L20.2062 43.1462C20.2062 43.2553 20.1243 43.3645 20.0151 43.3918L18.1866 36.8694V36.8421L12.4825 23.497C12.346 23.1696 12.0185 22.9512 11.6637 22.9512H5.19545C4.75878 22.9512 4.37668 23.2787 4.3221 23.7154L0.00992229 54.5536C-0.0719545 55.0994 0.364722 55.5633 0.883275 55.5633H7.32425C7.76092 55.5633 8.14302 55.2358 8.1976 54.7992L9.88972 42.5458V42.5185L9.80784 36.2417L9.99889 36.1871L11.9366 42.7095V42.7368L17.2586 55.0448C17.3951 55.3723 17.7226 55.5906 18.0774 55.5906H25.0642C25.5009 55.5906 25.883 55.2631 25.9376 54.8265L30.2497 23.9883C30.3316 23.4425 29.8949 22.9512 29.3491 22.9512Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M43.322 22.9512H36.8814C36.4448 22.9512 36.0627 23.2787 36.0081 23.7154L31.6962 54.5263C31.6144 55.0721 32.051 55.536 32.5695 55.536H39.0101C39.4467 55.536 39.8288 55.2085 39.8834 54.7719L44.1953 23.961C44.2771 23.4424 43.8678 22.9512 43.322 22.9512Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M73.5353 22.9512H49.4363C48.9996 22.9512 48.6175 23.2787 48.5629 23.7154L47.7168 29.4736C47.635 30.0194 48.0443 30.4834 48.5902 30.4834H55.3314C55.8772 30.4834 56.2866 30.9473 56.2047 31.4931L53.0388 54.5263C52.957 55.0721 53.3936 55.536 53.9122 55.536H60.435C60.8717 55.536 61.2538 55.2085 61.3084 54.7719L64.5562 31.2475C64.6107 30.8109 64.9928 30.4834 65.4295 30.4834H72.662C73.0986 30.4834 73.4807 30.1559 73.5353 29.7192L74.3814 23.961C74.5178 23.4424 74.0812 22.9512 73.5353 22.9512Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M91.9575 22.9512H79.7033C79.2666 22.9512 78.8845 23.2787 78.8299 23.7154L74.5177 54.5263C74.4359 55.0721 74.8725 55.536 75.3911 55.536H81.9139C82.3506 55.536 82.7327 55.2085 82.7873 54.7719L84.0427 45.575C84.07 45.3567 84.2611 45.1929 84.4794 45.1929H85.3255C85.4892 45.1929 85.6257 45.2748 85.7076 45.4113L91.9302 55.1539C92.0939 55.3996 92.3669 55.5633 92.6944 55.5633H100.773C101.482 55.5633 101.919 54.7446 101.51 54.1715L94.9596 44.8109C94.7959 44.5925 94.8778 44.2651 95.1234 44.1559C99.2991 42.1091 101.728 40.035 102.52 34.1949C103.448 26.5536 98.6714 22.9512 91.9575 22.9512ZM94.1954 34.3313C93.9771 36.2144 92.5033 38.0974 89.9651 38.0974H86.1715C85.6257 38.0974 85.2163 37.6062 85.2982 37.0877L86.1169 31.4113C86.1715 30.9746 86.5536 30.6471 86.9903 30.6471H91.0568C93.4586 30.6471 94.4411 32.3664 94.1954 34.3313Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M29.1035 3.43858H33.7428C34.8617 3.43858 35.8169 3.60233 36.581 3.9571C37.2906 4.2573 37.891 4.77581 38.3276 5.43079C38.7097 6.08576 38.928 6.8226 38.9007 7.55944C38.9007 8.32357 38.7097 9.06041 38.3003 9.71539C37.8637 10.3976 37.2087 10.9162 36.4719 11.2437C35.6532 11.6257 34.6161 11.8167 33.4153 11.8167H29.1035V3.43858V3.43858ZM33.3881 9.66081C34.1522 9.66081 34.7253 9.46977 35.1346 9.08771C35.544 8.67835 35.7623 8.13254 35.735 7.53215C35.7623 6.98634 35.5713 6.46782 35.1892 6.08576C34.8345 5.73098 34.2886 5.53995 33.5518 5.53995H32.1054V9.63351H33.3881V9.66081Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M45.8881 11.7895C45.2877 11.6257 44.6873 11.3801 44.1415 11.0526V9.06043C44.6055 9.4152 45.1513 9.66082 45.6971 9.79727C46.3248 9.9883 46.9525 10.0702 47.6074 10.0975C47.8258 10.0975 48.0441 10.0702 48.2624 9.9883C48.3989 9.90643 48.4807 9.82456 48.4807 9.7154C48.4807 9.60624 48.4534 9.49707 48.3716 9.4152C48.2351 9.30604 48.0714 9.25146 47.9076 9.22417L46.4885 8.89668C45.6698 8.70565 45.0967 8.43275 44.7419 8.10526C44.3872 7.75049 44.1961 7.25926 44.2234 6.76803C44.2234 6.33138 44.3872 5.89473 44.6873 5.56725C45.0421 5.18518 45.4788 4.91228 45.97 4.77583C46.5977 4.58479 47.2527 4.47563 47.9349 4.50292C48.5626 4.50292 49.163 4.5575 49.7634 4.72124C50.2546 4.83041 50.7185 5.02144 51.1552 5.26705V7.1501C50.7458 6.90448 50.3092 6.74074 49.8725 6.63158C49.3813 6.49512 48.8628 6.44054 48.3716 6.44054C47.6347 6.44054 47.2527 6.577 47.2527 6.82261C47.2527 6.93177 47.3072 7.04093 47.4164 7.09551C47.6074 7.17739 47.8258 7.23197 48.0441 7.28655L49.2449 7.50487C50.009 7.64132 50.6094 7.88694 50.9914 8.21442C51.3735 8.54191 51.5645 9.06043 51.5645 9.7154C51.5645 10.4249 51.2098 11.0799 50.6094 11.4347C49.9817 11.8441 49.0811 12.0624 47.9076 12.0624C47.2254 12.0351 46.5431 11.9532 45.8881 11.7895Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M54.3486 11.5438C53.7209 11.2436 53.1751 10.7797 52.7931 10.1793C52.4383 9.60622 52.2745 8.92396 52.2745 8.2417C52.2745 7.55944 52.4383 6.90447 52.8203 6.33137C53.2024 5.73098 53.7482 5.29433 54.4032 4.99413C55.1946 4.66665 56.0406 4.47562 56.8866 4.50291C58.0874 4.50291 59.0699 4.74852 59.8613 5.26704V7.45027C59.5611 7.25924 59.2336 7.0955 58.8788 6.98634C58.4968 6.87718 58.0874 6.7953 57.678 6.7953C56.9412 6.7953 56.3681 6.93176 55.9315 7.20466C55.3311 7.53215 55.14 8.26899 55.4675 8.86938C55.5767 9.06041 55.7404 9.22415 55.9315 9.33332C56.3408 9.60622 56.9139 9.74267 57.7053 9.74267C58.1147 9.74267 58.4968 9.68809 58.8788 9.57893C59.2336 9.46977 59.5611 9.33332 59.8613 9.14228V11.2436C58.9334 11.7895 57.8964 12.0624 56.832 12.0351C55.986 12.0624 55.1127 11.8986 54.3486 11.5438Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M62.8365 11.5439C62.1816 11.2437 61.6358 10.7797 61.2537 10.1793C60.8989 9.60624 60.7079 8.92398 60.7079 8.24171C60.7079 7.55945 60.8716 6.90448 61.2537 6.33138C61.6358 5.75828 62.1816 5.29435 62.8365 5.02144C64.3921 4.39376 66.166 4.39376 67.7215 5.02144C68.3492 5.29435 68.895 5.75828 69.2771 6.33138C69.6319 6.90448 69.8229 7.58674 69.8229 8.24171C69.8229 8.92398 69.6319 9.60624 69.2771 10.1793C68.895 10.7797 68.3492 11.2437 67.7215 11.5439C66.1387 12.1988 64.3921 12.1988 62.8365 11.5439ZM66.4389 9.4152C66.7391 9.11501 66.9028 8.67836 66.8755 8.269C66.9028 7.83236 66.7391 7.423 66.4389 7.12281C66.1114 6.82261 65.6747 6.68616 65.2381 6.68616C64.8015 6.65887 64.3648 6.82261 64.0373 7.12281C63.7371 7.423 63.5734 7.83236 63.6007 8.269C63.5734 8.70565 63.7371 9.11501 64.0373 9.4152C64.3648 9.7154 64.8015 9.87914 65.2381 9.85185C65.702 9.87914 66.1387 9.7154 66.4389 9.4152Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M76.9736 4.93955V7.53214C76.6188 7.31381 76.2095 7.20465 75.8001 7.23194C75.1724 7.23194 74.6812 7.42298 74.3264 7.80504C73.999 8.18711 73.8079 8.7875 73.8079 9.60621V11.7894H70.8878V4.80309H73.7533V7.01362C73.9171 6.19491 74.1627 5.59452 74.5175 5.21245C74.8723 4.83038 75.3635 4.61206 75.882 4.63935C76.2641 4.63935 76.6461 4.74851 76.9736 4.93955Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M86.6895 3.19298V11.7895H83.7694V10.2339C83.5511 10.7797 83.1418 11.2709 82.6505 11.5711C82.0774 11.8986 81.4497 12.0624 80.7948 12.0351C80.1944 12.0624 79.594 11.8713 79.0755 11.5439C78.5842 11.2164 78.1749 10.7524 77.9293 10.2066C77.6564 9.60623 77.5199 8.95126 77.5199 8.29629C77.4926 7.61403 77.6564 6.93177 77.9293 6.33138C78.2022 5.75828 78.6388 5.29434 79.1573 4.96686C79.7032 4.63937 80.3308 4.47563 80.9585 4.47563C82.3503 4.47563 83.2782 5.07602 83.7694 6.2768V3.19298H86.6895ZM83.3328 9.36062C83.633 9.06042 83.7967 8.65107 83.7694 8.24171C83.7694 7.83235 83.6057 7.423 83.3328 7.15009C82.6505 6.57699 81.6681 6.57699 80.9585 7.15009C80.6583 7.45029 80.4946 7.83235 80.5219 8.24171C80.4946 8.65107 80.6583 9.06042 80.9585 9.36062C81.286 9.66081 81.6954 9.79727 82.132 9.79727C82.5959 9.82456 83.0053 9.66081 83.3328 9.36062Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M18.3503 1.36452C16.9311 0.736842 15.4301 0.272904 13.8744 0C13.6561 0.382066 13.465 0.764132 13.3013 1.17349C11.6637 0.927875 9.9716 0.927875 8.33407 1.17349C8.17031 0.764132 7.97927 0.382066 7.76093 0C6.23256 0.272904 4.73149 0.736842 3.285 1.39181C0.473899 5.56725 -0.290284 9.63353 0.0918077 13.6725C1.75664 14.9006 3.61251 15.8285 5.57755 16.4288C6.01423 15.8285 6.42361 15.2008 6.75112 14.5458C6.1234 14.3002 5.49567 14 4.89524 13.6725C5.059 13.5633 5.19546 13.4542 5.35921 13.345C8.82533 14.9825 12.8373 14.9825 16.3307 13.345C16.4672 13.4542 16.6309 13.5906 16.7947 13.6725C16.1942 14.0273 15.5938 14.3275 14.9388 14.5458C15.2663 15.2008 15.6757 15.8285 16.1124 16.4288C18.0774 15.8285 19.9333 14.9006 21.5981 13.6725C22.0348 9.00585 20.8066 4.96686 18.3503 1.36452ZM7.21509 11.1891C6.15069 11.1891 5.25004 10.2066 5.25004 9.03314C5.25004 7.85965 6.0961 6.8499 7.18779 6.8499C8.27948 6.8499 9.15284 7.83236 9.15284 9.03314C9.15284 10.2339 8.30678 11.1891 7.21509 11.1891ZM14.4202 11.1891C13.3558 11.1891 12.4825 10.2066 12.4825 9.03314C12.4825 7.85965 13.3285 6.8499 14.4202 6.8499C15.5119 6.8499 16.3853 7.83236 16.358 9.03314C16.358 10.2339 15.5119 11.1891 14.4202 11.1891Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M41.3849 5.56724C42.1837 5.56724 42.8313 4.98076 42.8313 4.2573C42.8313 3.53384 42.1837 2.94736 41.3849 2.94736C40.5861 2.94736 39.9385 3.53384 39.9385 4.2573C39.9385 4.98076 40.5861 5.56724 41.3849 5.56724Z",
                fill: t,
              }),
              (0, s.jsx)("path", {
                d: "M39.9385 6.46785C40.8664 6.84992 41.9307 6.84992 42.8586 6.46785V11.8441H39.9385V6.46785Z",
                fill: t,
              }),
            ],
          }),
        });
      }
    },
    84084: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsxs)("g", {
            fill: "none",
            fillRule: "evenodd",
            children: [
              (0, s.jsx)("path", {
                className: i,
                fill: l,
                d: "M14.62 8.35c-.42.28-1.75 1.04-1.95 1.19-.39.31-.75.29-1.14-.01-.2-.16-1.53-.92-1.95-1.19-.48-.31-.45-.7.08-.92 1.64-.69 3.28-.64 4.91.03.49.21.51.6.05.9m7.22 7.28c-.93-2.09-2.2-3.99-3.84-5.66a4.31 4.31 0 0 1-1.06-1.88c-.1-.33-.17-.67-.24-1.01-.2-.88-.29-1.78-.7-2.61-.73-1.58-2-2.4-3.84-2.47-1.81.05-3.16.81-3.95 2.4-.21.43-.36.88-.46 1.34-.17.76-.32 1.55-.5 2.32-.15.65-.45 1.21-.96 1.71-1.61 1.57-2.9 3.37-3.88 5.35-.14.29-.28.58-.37.88-.19.66.29 1.12.99.96.44-.09.88-.18 1.3-.31.41-.15.57-.05.67.35.65 2.15 2.07 3.66 4.24 4.5 4.12 1.56 8.93-.66 9.97-4.58.07-.27.17-.37.47-.27.46.14.93.24 1.4.35.49.09.85-.16.92-.64.03-.26-.06-.49-.16-.73",
              }),
              (0, s.jsx)("rect", { width: "24", height: "24" }),
            ],
          }),
        });
      }
    },
    260162: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsxs)("g", {
            fill: "none",
            fillRule: "evenodd",
            children: [
              (0, s.jsx)("path", {
                className: i,
                fill: l,
                d: "M18.64 19.499c-.82 1.24-1.687 2.45-3.008 2.47-1.322.03-1.746-.79-3.245-.79-1.508 0-1.972.77-3.224.82-1.292.05-2.268-1.32-3.097-2.53-1.686-2.47-2.978-7.02-1.242-10.08.858-1.52 2.396-2.48 4.063-2.51 1.262-.02 2.465.87 3.244.87.77 0 2.229-1.07 3.757-.91.64.03 2.436.26 3.59 1.98-.09.06-2.14 1.28-2.12 3.81.029 3.02 2.612 4.03 2.642 4.04-.03.07-.414 1.44-1.36 2.83zm-5.631-16c.72-.829 1.913-1.459 2.899-1.499.128 1.17-.336 2.35-1.026 3.19-.68.85-1.804 1.51-2.909 1.42-.148-1.15.404-2.35 1.036-3.11z",
              }),
              (0, s.jsx)("rect", { width: "24", height: "24" }),
            ],
          }),
        });
      }
    },
    415844: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsxs)("g", {
            fill: "none",
            fillRule: "evenodd",
            children: [
              (0, s.jsx)("path", {
                className: i,
                fill: l,
                d: "M4 11.526V6.553l5.684-1.25v6.138L4 11.526zM20.105 3v8.29l-9.473.142V5.094L20.105 3zM4 12.474l5.684.085v6.452L4 17.92v-5.447zm16.105.237V21l-9.473-1.81v-6.622l9.473.143z",
              }),
              (0, s.jsx)("rect", { width: "24", height: "24" }),
            ],
          }),
        });
      }
    },
    711486: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("469563"),
        l = n("216199"),
        i = n("75196"),
        r = (0, a.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: a = "currentColor",
              ...l
            } = e;
            return (0, s.jsxs)("svg", {
              ...(0, i.default)(l),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, s.jsx)("path", {
                  d: "M21.03 7.76998C20.955 7.60998 20.81 7.48998 20.635 7.44498C20.545 7.41998 20.445 7.39498 20.35 7.36998C19.805 7.22998 19.135 7.56498 18.85 8.11498L17.87 9.99998C17.585 10.55 17.225 10.51 17.07 9.90998L14.895 1.38498C14.74 0.779981 14.14 0.459981 13.55 0.664981C12.96 0.869981 12.595 1.52498 12.725 2.13498L13.995 7.95998C14.13 8.56998 14.075 9.11498 13.875 9.18498C13.675 9.25498 13.35 8.83498 13.15 8.24498L11.05 2.07498C10.85 1.48498 10.21 1.17498 9.62004 1.37998C9.03004 1.58498 8.71504 2.22998 8.91004 2.81998L10.97 8.99998C11.165 9.58998 11.165 10.125 10.965 10.195C10.765 10.265 10.385 9.86498 10.125 9.29998L7.77504 4.29998C7.51004 3.73998 6.82004 3.44498 6.23004 3.64998C5.64504 3.85498 5.37504 4.47498 5.64004 5.03998L8.60004 11.045C8.86004 11.61 8.91004 12.125 8.71004 12.195C8.51004 12.265 8.03004 11.93 7.64004 11.445L5.60504 8.82498C5.21504 8.33998 4.54004 8.07498 4.09504 8.22998C3.65504 8.38498 3.54004 8.94498 3.84504 9.48998L6.34504 13.865C6.40004 14.02 7.85504 16.8 7.96004 16.915C9.00004 18.565 10.645 19.51 12.73 18.79L14.91 18.035C16.145 17.605 17.095 16.735 17.63 15.7C17.64 15.69 20.15 10.205 21.03 8.28498C21.105 8.11498 21.105 7.92998 21.03 7.76998Z",
                  fill: a,
                }),
                (0, s.jsx)("path", {
                  d: "M21.3251 23.4001L19.1101 19.0301C18.8501 18.5201 18.2501 18.2851 17.7151 18.4851L12.3101 20.5101C12.0201 20.6201 11.7851 20.8451 11.6651 21.1351C11.5451 21.4251 11.5551 21.7501 11.6851 22.0301L12.3151 23.3951H21.3251V23.4001Z",
                  fill: a,
                }),
              ],
            });
          },
          l.HandRequestSpeakIcon,
          void 0,
          { size: 24 }
        );
    },
    478895: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 40,
          height: n = 40,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, a.default)(i),
          width: t,
          height: n,
          style: { minWidth: t, minHeight: n },
          viewBox: "0 0 40 40",
          children: [
            (0, s.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M20 4C15.5817 4 12 7.58172 12 12V20C12 24.4183 15.5817 28 20 28H28C32.4183 28 36 24.4183 36 20V12C36 7.58172 32.4183 4 28 4H20ZM19.5962 21.6084C19.5599 21.8126 19.717 22 19.9244 22H20.5806C20.7422 22 20.8806 21.8841 20.9088 21.7249L21.3333 19.3333H25.3333L24.9295 21.6084C24.8932 21.8126 25.0503 22 25.2577 22H25.9139C26.0756 22 26.2139 21.8841 26.2421 21.7249L26.6667 19.3333H29.0533C29.2152 19.3333 29.3537 19.217 29.3816 19.0575L29.4983 18.3908C29.534 18.1868 29.377 18 29.1699 18H26.9L27.6067 14H29.9933C30.1552 14 30.2937 13.8836 30.3216 13.7241L30.4383 13.0575C30.474 12.8535 30.317 12.6667 30.1099 12.6667H27.84L28.2438 10.3916C28.2801 10.1874 28.123 10 27.9156 10H27.2594C27.0977 10 26.9594 10.1159 26.9312 10.2751L26.5067 12.6667H22.5067L22.9105 10.3916C22.9467 10.1874 22.7897 10 22.5823 10H21.926C21.7644 10 21.6261 10.1159 21.5978 10.2751L21.1733 12.6667H18.7867C18.6248 12.6667 18.4863 12.783 18.4584 12.9425L18.3417 13.6092C18.306 13.8132 18.463 14 18.6701 14H20.94L20.2333 18H17.8467C17.6848 18 17.5463 18.1164 17.5184 18.2759L17.4017 18.9425C17.366 19.1465 17.523 19.3333 17.7301 19.3333H20L19.5962 21.6084ZM21.5669 18L22.2736 14H26.2736L25.5669 18H21.5669Z",
              fill: l,
            }),
            (0, s.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M9.33335 14.0208C6.11738 16.1734 4 19.8395 4 24C4 30.6274 9.37258 36 16 36C20.1604 36 23.8262 33.8829 25.979 30.6672H24.3268C22.372 33.1055 19.3683 34.6667 16 34.6667C10.109 34.6667 5.33333 29.8911 5.33333 24C5.33333 20.6315 6.89477 17.6277 9.33335 15.6729V14.0208Z",
              fill: l,
            }),
          ],
        });
      }
    },
    479020: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, a.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: l,
              d: "M12 14C7.289 14 4 16.467 4 20V22H20V20C20 16.467 16.711 14 12 14ZM11 19C10.447 19 10 18.553 10 18C10 17.447 10.447 17 11 17C11.553 17 12 17.447 12 18C12 18.553 11.553 19 11 19ZM14 19C13.447 19 13 18.553 13 18C13 17.447 13.447 17 14 17C14.553 17 15 17.447 15 18C15 18.553 14.553 19 14 19Z",
            }),
            (0, s.jsx)("path", {
              fill: l,
              d: "M18 6H17.91C17.432 3.167 14.967 1 12 1C9.033 1 6.568 3.167 6.09 6H6C4.896 6 4 6.896 4 8V9C4 10.104 4.896 11 6 11C6 12.102 6.897 13 8 13H16C17.104 13 18 12.102 18 11C19.104 11 20 10.104 20 9V8C20 6.896 19.104 6 18 6ZM16 10H8V6H16V10Z",
            }),
          ],
        });
      }
    },
    105017: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("819689"),
        o = n("850391"),
        u = n("41170"),
        d = n("300322"),
        c = n("26989"),
        E = n("957255"),
        f = n("697218"),
        _ = n("599110"),
        T = n("299039"),
        I = n("718422"),
        m = n("49111"),
        N = n("440178");
      function p(e) {
        let { assets: t, currentUser: n, message: s } = e,
          a =
            (T.default.extractTimestamp(n.id) +
              T.default.extractTimestamp(s.id)) %
            t.length;
        return t[a];
      }
      function S(e) {
        let {
            currentUser: t,
            channel: n,
            message: l,
            buttonLabels: d,
            stickers: c,
            event: E,
            eventProperties: f,
          } = e,
          [T, m] = a.useState(!1),
          S = a.useMemo(
            () => p({ assets: c, currentUser: t, message: l }),
            [c, t, l]
          ),
          C = a.useMemo(
            () => p({ assets: d, currentUser: t, message: l }),
            [d, t, l]
          ),
          A = a.useCallback(async () => {
            let { valid: e } = await (0, I.applyChatRestrictions)({
              type: o.ChatInputTypes.FORM,
              content: "",
              channel: n,
            });
            e &&
              (!(function (e) {
                let { channel: t, message: n, sticker: s } = e;
                r.default.sendGreetMessage(
                  t.id,
                  s.id,
                  r.default.getSendMessageOptionsForReply({
                    channel: t,
                    message: n,
                    shouldMention: !0,
                    showMentionToggle: !0,
                  })
                );
              })({ channel: n, message: l, sticker: S }),
              !(function (e) {
                let { sticker: t, event: n, eventProperties: s } = e;
                null != n && _.default.track(n, { ...s, sticker_id: t.id });
              })({ sticker: S, event: E, eventProperties: f }));
          }, [n, l, S, E, f]);
        return (0, s.jsxs)(i.Button, {
          className: N.CTAMessageButtonOuter,
          innerClassName: N.CTAMessageButton,
          color: i.ButtonColors.PRIMARY,
          onMouseEnter: () => m(!0),
          onMouseLeave: () => m(!1),
          onClick: A,
          children: [
            (0, s.jsx)(u.default, {
              className: N.CTAMessageSticker,
              isInteracting: T,
              sticker: S,
              size: 28,
            }),
            C,
          ],
        });
      }
      function C(e) {
        let {
            channel: t,
            message: n,
            buttonLabels: a,
            stickers: i,
            event: r,
            eventProperties: o,
          } = e,
          u = f.default.getCurrentUser(),
          _ = (function (e) {
            let { channel: t, message: n, currentUser: s } = e;
            return (0, l.useStateFromStores)([E.default, c.default], () => {
              var e;
              let a = t.guild_id;
              if (null == s || null == a) return !1;
              let l = (0, d.computeIsReadOnlyThread)(t),
                i = E.default.can(m.Permissions.SEND_MESSAGES, t),
                r =
                  null === (e = c.default.getMember(a, s.id)) || void 0 === e
                    ? void 0
                    : e.isPending,
                o = n.author.bot;
              return i && !l && !r && !o;
            });
          })({ channel: t, message: n, currentUser: u });
        return null != u && _
          ? (0, s.jsx)("div", {
              className: N.CTAMessage,
              children: (0, s.jsx)(S, {
                currentUser: u,
                channel: t,
                message: n,
                buttonLabels: a,
                stickers: i,
                event: r,
                eventProperties: o,
              }),
            })
          : null;
      }
    },
    759885: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("77078"),
        i = n("255397"),
        r = n("987317"),
        o = n("679653"),
        u = n("393414"),
        d = n("233069"),
        c = n("42203"),
        E = n("305961"),
        f = n("27618"),
        _ = n("697218"),
        T = n("666897"),
        I = n("404008"),
        m = n("794818"),
        N = n("49111");
      function p(e) {
        let {
            channel: t,
            onClick: n,
            beforeTransition: p,
            className: S,
            openChatWithoutConnecting: C,
          } = e,
          A = (0, a.useStateFromStores)(
            [_.default, f.default],
            () =>
              null == t
                ? ""
                : (0, o.computeChannelName)(t, _.default, f.default),
            [t]
          );
        return (0, s.jsx)(l.Tooltip, {
          text: A,
          position: "top",
          children: e => {
            let { onMouseEnter: a, onMouseLeave: o } = e;
            return (0, s.jsx)(T.default, {
              role: "link",
              className: S,
              onClick: e => {
                e.stopPropagation(),
                  null != n
                    ? n()
                    : (null != p && p(),
                      (0, l.closeAllModals)(),
                      !(function (e, t) {
                        let n =
                          arguments.length > 2 &&
                          void 0 !== arguments[2] &&
                          arguments[2];
                        if (null == e || null == t) return;
                        let s = E.default.getGuild(e);
                        if ((null == s ? void 0 : s.joinedAt) == null) {
                          m.startLurking(e, {}, { channelId: t });
                          return;
                        }
                        let a = c.default.getChannel(t);
                        if (
                          null != a &&
                          (0, d.isGuildVocalChannelType)(a.type)
                        ) {
                          if (n) {
                            i.default.updateChatOpen(a.id, !0),
                              (0, u.transitionTo)(N.Routes.CHANNEL(e, t));
                            return;
                          }
                          r.default.selectVoiceChannel(a.id);
                          return;
                        }
                        (0, u.transitionTo)(N.Routes.CHANNEL(e, t));
                      })(
                        null == t ? void 0 : t.guild_id,
                        null == t ? void 0 : t.id,
                        C
                      ));
              },
              onMouseEnter: a,
              onMouseLeave: o,
              iconType: (0, I.getMentionIconType)(t),
              children: A,
            });
          },
        });
      }
    },
    843194: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("574073"),
        r = n("780571"),
        o = n("497880"),
        u = n("93332"),
        d = n("93792");
      function c(e) {
        let {
            message: t,
            channel: n,
            content: a,
            className: c,
            compact: E,
            popoutProps: f,
            hideTimestamp: _ = !1,
            withFooter: T = !1,
            ...I
          } = e,
          m = (0, i.default)(t);
        return (0, s.jsx)("div", {
          className: l(
            { [d.withFooter]: T },
            d.embedCard,
            { [d.compact]: E },
            c
          ),
          children: (0, s.jsx)(r.default, {
            ...I,
            className: l(d.messageContainer, { [d.compact]: E }),
            childrenMessageContent: (0, s.jsx)(o.default, {
              className: l(d.messageContent, { [d.compact]: E }),
              message: t,
              content: a,
            }),
            childrenHeader: (0, s.jsx)(u.default, {
              message: t,
              channel: n,
              author: m,
              guildId: null == n ? void 0 : n.guild_id,
              compact: E,
              hideTimestamp: _,
              className: l(d.header, { [d.compact]: E }),
              ...(null != f ? f : {}),
            }),
            compact: E,
          }),
        });
      }
    },
    124297: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("656015"),
        l = n("462579"),
        i = n("701909"),
        r = n("49111"),
        o = n("782340"),
        u = n("498126");
      function d(e) {
        let t,
          { message: n, channel: d, onDeleteMessage: c, children: E } = e,
          f = (0, a.useIsMessageInteractionForcedEphemeral)(n, d, {
            location: "EphemeralAccessories",
          }),
          _ = () => c(n, !0);
        return (
          (t = f
            ? (0, s.jsx)("div", {
                className: u.userAppsBetaContent,
                children:
                  o.default.Messages.APPLICATION_COMMAND_USER_INSTALL_BETA_EPHEMERAL.format(
                    {
                      learnMoreUrl: i.default.getArticleURL(
                        r.HelpdeskArticles.USING_APPS_FAQ
                      ),
                      handleDelete: _,
                    }
                  ),
              })
            : n.type === r.MessageTypes.STAGE_RAISE_HAND
              ? o.default.Messages.STAGE_SYSTEM_MESSAGE_MODERATOR_VISIBILITY_MESSAGE.format(
                  { handleDelete: _ }
                )
              : o.default.Messages.ONLY_YOU_CAN_SEE_AND_DELETE_THESE.format({
                  count: 1,
                  countMessages: 1,
                  handleDelete: _,
                })),
          (0, s.jsxs)("div", {
            className: u.ephemeralMessage,
            onClick: e => e.stopPropagation(),
            children: [
              (0, s.jsx)(l.default, {
                className: u.icon,
                width: 16,
                height: 16,
              }),
              t,
              E,
            ],
          })
        );
      }
    },
    341716: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return D;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("866227"),
        d = n.n(u),
        c = n("77078"),
        E = n("427953"),
        f = n("550766"),
        _ = n("478272"),
        T = n("812204"),
        I = n("685665"),
        m = n("996554"),
        N = n("574073"),
        p = n("38600"),
        S = n("981601"),
        C = n("64791"),
        A = n("315102"),
        h = n("888400"),
        g = n("927632"),
        M = n("195483"),
        O = n("49111"),
        R = n("406291"),
        L = n("782340"),
        v = n("356296");
      function P(e) {
        let {
          width: t = 6,
          height: n = 10,
          color: a = "currentColor",
          className: l,
          foreground: i,
        } = e;
        return (0, s.jsx)("svg", {
          className: l,
          width: t,
          height: n,
          viewBox: "0 0 6 10",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: (0, s.jsx)("path", {
            d: "M4.61241 0L6 0.845294L1.38759 10L0 9.15471L4.61241 0Z",
            className: i,
            fill: a,
          }),
        });
      }
      function D(e) {
        var t;
        let n;
        let { message: l, channel: r } = e,
          { analyticsLocations: u } = (0, I.default)(
            T.default.EXECUTED_COMMAND
          ),
          D = a.useMemo(
            () => (e, t, n) => (
              o(
                null != r && null != t,
                "ExecuteCommand: user and channel cannot be undefined"
              ),
              (0, s.jsx)(S.default, {
                ...e,
                channelId: r.id,
                messageId: l.id,
                guildId: r.guild_id,
                userId: t.id,
                newAnalyticsLocations: n,
              })
            ),
            [r, l.id]
          ),
          x = a.useMemo(
            () => e => (
              o(null != r, "ExecutedCommand: channel cannot be null"),
              (0, s.jsx)(g.default, {
                ...e,
                channel: r,
                messageId: l.id,
                interactionData: l.interactionData,
              })
            ),
            [r, l.id, l.interactionData]
          ),
          y = (0, N.useNullableUserAuthor)(
            null === (t = l.interaction) || void 0 === t ? void 0 : t.user,
            r
          ),
          U = a.useMemo(
            () =>
              e.compact ? (0, p.default)((0, h.dateFormat)(d(), "LT")) : null,
            [e.compact]
          ),
          j = (0, E.useIsActivitiesInTextEnabled)(r.id, "ExecutedCommand"),
          { enabled: b } = m.AppLauncherOnboardingExperiment.useExperiment(
            { location: "Executed Command" },
            { autoTrackExposure: !1 }
          ),
          G = l.interaction;
        if (null == G || null == y) return null;
        let B = () => {
          let t = (function (e, t) {
              let n,
                {
                  message: a,
                  compact: l,
                  channel: r,
                  isInteractionUserBlocked: o,
                  showAvatarPopout: u,
                  onClickAvatar: d,
                  onUserContextMenu: E,
                  onPopoutRequestClose: f,
                } = e;
              if ((l && null == a.activityInstance) || o)
                return (0, s.jsx)("div", {
                  className: v.replyBadge,
                  children: (0, s.jsx)(P, { className: v.commandIcon }),
                });
              if (null != a.interaction) {
                var _, T, I;
                let e = (0, N.getUserAuthor)(a.interaction.user, r);
                n =
                  null !==
                    (I = A.default.getGuildMemberAvatarURL({
                      avatar:
                        null !== (_ = e.guildMemberAvatar) && void 0 !== _
                          ? _
                          : void 0,
                      userId: a.interaction.user.id,
                      guildId:
                        null !== (T = null == r ? void 0 : r.guild_id) &&
                        void 0 !== T
                          ? T
                          : "",
                    })) && void 0 !== I
                    ? I
                    : void 0;
              }
              let m = () =>
                null != a.interaction &&
                (function (e) {
                  let {
                    user: t,
                    guildId: n,
                    guildAvatar: a,
                    onClick: l,
                    onContextMenu: r,
                    onMouseDown: o,
                  } = e;
                  return (0, s.jsx)("img", {
                    alt: "",
                    src: null != a ? a : t.getAvatarURL(n, 16),
                    onClick: l,
                    onContextMenu: r,
                    onMouseDown: o,
                    className: i({
                      [v.executedCommandAvatar]: !0,
                      [v.clickable]: null != l,
                    }),
                  });
                })({
                  user: a.interaction.user,
                  guildId: r.guild_id,
                  guildAvatar: n,
                  onClick: d,
                  onContextMenu: E,
                });
              return null != t && null != u
                ? (0, s.jsx)(c.Popout, {
                    renderPopout: t,
                    shouldShow: u,
                    position: "right",
                    onRequestClose: f,
                    children: m,
                  })
                : m();
            })(e, e => D(e, G.user, [T.default.AVATAR])),
            n = (function (e, t, n) {
              var a;
              let {
                message: l,
                channel: i,
                showUsernamePopout: r,
                onClickUsername: o,
                onUserContextMenu: u,
                onPopoutRequestClose: d,
              } = e;
              return (0, s.jsx)(M.default, {
                compact: !0,
                author: t,
                message: l,
                channel: i,
                userOverride:
                  null === (a = l.interaction) || void 0 === a
                    ? void 0
                    : a.user,
                showPopout: r,
                renderPopout: n,
                onClick: o,
                onContextMenu: u,
                onPopoutRequestClose: d,
              });
            })(e, y, e => D(e, G.user));
          return (0, s.jsxs)(a.Fragment, { children: [t, n] }, "user");
        };
        if ((null == l ? void 0 : l.activityInstance) !== null) {
          let e = () => {
            (0, _.default)({
              channel: r,
              guildId: r.guild_id,
              locationObject: {
                page: r.isPrivate()
                  ? O.AnalyticsPages.DM_CHANNEL
                  : O.AnalyticsPages.GUILD_CHANNEL,
                section: O.AnalyticsSections.CHANNEL_TEXT_AREA,
                object: O.AnalyticsObjects.APP_COMMAND,
                objectType: O.AnalyticsObjectTypes.ACTIVITY,
              },
              openInPopout: !1,
              enableSelectedTextChannelInvite: !0,
              analyticsLocations: u,
            }),
              (0, f.fetchShelf)({ guildId: r.guild_id });
          };
          n = j
            ? L.default.Messages.APPLICATION_COMMAND_PRIMARY_ENTRY_POINT_USED.format(
                {
                  userHook: B,
                  activityHook: () =>
                    (0, s.jsx)(c.Clickable, {
                      tag: "span",
                      onClick: e,
                      children: (0, s.jsx)("div", {
                        className: i(v.commandName, v.clickable),
                        children:
                          L.default.Messages.EMBEDDED_ACTIVITIES_ACTIVITY,
                      }),
                    }),
                }
              )
            : L.default.Messages.APPLICATION_COMMAND_PRIMARY_ENTRY_POINT_USED_CANNOT_LAUNCH.format(
                { userHook: B }
              );
        } else
          n = L.default.Messages.APPLICATION_COMMAND_USED_SHORT.format({
            userHook: B,
            commandHook: () => {
              let t = (function (e, t, n) {
                let {
                    showDataPopout: a,
                    message: l,
                    onClickCommand: r,
                    onPopoutRequestClose: o,
                  } = e,
                  u = l.interaction.displayName;
                return (0, s.jsx)(c.Popout, {
                  renderPopout: t,
                  shouldShow: a,
                  position: "top",
                  align: "center",
                  onRequestClose: o,
                  animation: c.Popout.Animation.FADE,
                  positionKey: null != l.interactionData ? "ready" : "loading",
                  children: e => {
                    let { onClick: t, ...a } = e;
                    return l.type === O.MessageTypes.CHAT_INPUT_COMMAND ||
                      l.type === O.MessageTypes.INTERACTION_PREMIUM_UPSELL
                      ? (0, s.jsx)(c.Clickable, {
                          ...a,
                          tag: "span",
                          onClick: r,
                          children: (0, s.jsxs)("div", {
                            className: i(
                              { [v.commandName]: !n },
                              { [v.appLauncherOnboardingCommandName]: n },
                              v.clickable
                            ),
                            children: [
                              n &&
                                (0, s.jsx)(C.default, {
                                  height: 10,
                                  width: 10,
                                  className: v.appsIcon,
                                }),
                              n ? u : R.COMMAND_SENTINEL + u,
                            ],
                          }),
                        })
                      : (0, s.jsx)("div", {
                          className: v.commandName,
                          children: u,
                        });
                  },
                });
              })(e, x, b);
              return (0, s.jsx)(a.Fragment, { children: t }, "command");
            },
          });
        return (0, s.jsx)(I.AnalyticsLocationProvider, {
          value: u,
          children: (0, s.jsx)("div", {
            className: i(v.repliedMessage, v.executedCommand, U),
            "aria-hidden": !e.compact,
            children: n,
          }),
        });
      }
    },
    927632: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("798609"),
        d = n("685665"),
        c = n("175528"),
        E = n("274800"),
        f = n("574073"),
        _ = n("401642"),
        T = n("42203"),
        I = n("305961"),
        m = n("697218"),
        N = n("666897"),
        p = n("49111"),
        S = n("406291"),
        C = n("782340"),
        A = n("607602");
      let h = {
          tag: "span",
          variant: "text-md/normal",
          color: "header-secondary",
        },
        g = { className: i("mention", A.mention) };
      function M(e) {
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsx)(o.Text, {
            ...h,
            color: "header-primary",
            children: e,
          }),
        });
      }
      var O = a.memo(function (e) {
        var t, n, l, i, O, R;
        let L,
          { channel: v, messageId: P, interactionData: D } = e,
          { analyticsLocations: x } = (0, d.default)(),
          { onCopy: y, copyRef: U } = (0, c.default)(
            v,
            null == D
              ? void 0
              : null === (t = D.application_command) || void 0 === t
                ? void 0
                : t.id
          ),
          j = (0, r.useStateFromStores)(
            [I.default],
            () => I.default.getGuild(v.guild_id),
            [v.guild_id]
          );
        if (
          (a.useEffect(() => {
            (null == D ||
              (D.type === u.ApplicationCommandType.CHAT &&
                void 0 === D.application_command)) &&
              E.fetchMessageInteractionData(v.id, P);
          }, [v.id, P, D]),
          null == D)
        )
          L = (0, s.jsx)(o.Spinner, {
            type: o.Spinner.Type.SPINNING_CIRCLE,
            className: A.spinner,
          });
        else {
          let e = [],
            t = Object.fromEntries(
              (null !==
                (i =
                  null === (n = D.application_command) || void 0 === n
                    ? void 0
                    : n.options) && void 0 !== i
                ? i
                : []
              ).map(e => [e.name, e])
            );
          for (let n of null !== (O = D.options) && void 0 !== O ? O : [])
            e = e.concat(
              (function e(t) {
                var n, l, i, r, d, c, E;
                let A,
                  {
                    option: O,
                    channel: R,
                    guild: L,
                    messageId: v,
                    parentOptionKey: P,
                    commandOptionSpec: D,
                    sourceAnalyticsLocations: x,
                  } = t,
                  y = null != P ? P + " " + O.name : O.name;
                if (
                  O.type === u.ApplicationCommandOptionType.SUB_COMMAND ||
                  O.type === u.ApplicationCommandOptionType.SUB_COMMAND_GROUP
                ) {
                  let t = [
                      (0, s.jsxs)(
                        a.Fragment,
                        {
                          children: [
                            " ",
                            (0, s.jsx)(o.Text, {
                              ...h,
                              children:
                                null !==
                                  (l = null == D ? void 0 : D.name_localized) &&
                                void 0 !== l
                                  ? l
                                  : O.name,
                            }),
                          ],
                        },
                        y
                      ),
                    ],
                    u = Object.fromEntries(
                      null ===
                        (n =
                          null !== (i = null == D ? void 0 : D.options) &&
                          void 0 !== i
                            ? i
                            : []) || void 0 === n
                        ? void 0
                        : n.map(e => [e.name, e])
                    );
                  for (let n of null !== (r = O.options) && void 0 !== r
                    ? r
                    : [])
                    t = t.concat(
                      e({
                        option: n,
                        channel: R,
                        guild: L,
                        messageId: v,
                        parentOptionKey: y,
                        commandOptionSpec: u[n.name],
                        sourceAnalyticsLocations: x,
                      })
                    );
                  return t;
                }
                let U = O.value;
                if (null != O.value)
                  switch (O.type) {
                    case u.ApplicationCommandOptionType.USER: {
                      let e = O.value.toString(),
                        t = m.default.getUser(e);
                      if (null != t) {
                        let e = (0, f.getUserAuthor)(t, R);
                        A = (0, s.jsxs)(N.default, {
                          ...g,
                          onClick: () =>
                            (0, _.openUserProfileModal)({
                              userId: t.id,
                              guildId: R.guild_id,
                              channelId: R.id,
                              messageId: v,
                              sourceAnalyticsLocations: x,
                              analyticsLocation: {
                                section:
                                  p.AnalyticsSections
                                    .CHANNEL_TEXT_AREA_AUTOCOMPLETE,
                              },
                            }),
                          children: [S.MENTION_SENTINEL, e.nick],
                        });
                      }
                      break;
                    }
                    case u.ApplicationCommandOptionType.CHANNEL: {
                      let e = O.value.toString(),
                        t = T.default.getChannel(e);
                      null != t &&
                        (A = (0, s.jsxs)(N.default, {
                          ...g,
                          children: [S.CHANNEL_SENTINEL, t.name],
                        }));
                      break;
                    }
                    case u.ApplicationCommandOptionType.ROLE: {
                      let e = O.value.toString(),
                        t = null != L ? I.default.getRole(L.id, e) : void 0;
                      null != t &&
                        (A = (0, s.jsxs)(N.default, {
                          ...g,
                          children: [S.MENTION_SENTINEL, t.name],
                        }));
                      break;
                    }
                    case u.ApplicationCommandOptionType.MENTIONABLE: {
                      let e = O.value.toString(),
                        t = null != L ? I.default.getRole(L.id, e) : void 0;
                      if (null != t)
                        A = (0, s.jsxs)(N.default, {
                          children: [S.MENTION_SENTINEL, t.name],
                        });
                      else {
                        let t = m.default.getUser(e);
                        if (null != t) {
                          let e = (0, f.getUserAuthor)(t, R);
                          A = (0, s.jsxs)(N.default, {
                            ...g,
                            onClick: () =>
                              (0, _.openUserProfileModal)({
                                userId: t.id,
                                guildId: R.guild_id,
                                analyticsLocation: {
                                  section:
                                    p.AnalyticsSections
                                      .CHANNEL_TEXT_AREA_AUTOCOMPLETE,
                                },
                              }),
                            children: [S.MENTION_SENTINEL, e.nick],
                          });
                        }
                      }
                      break;
                    }
                    case u.ApplicationCommandOptionType.ATTACHMENT:
                      A = M(
                        C.default.Messages
                          .EXECUTED_COMMAND_POPOUT_ATTACHMENT_OPTION_VALUE
                      );
                      break;
                    default: {
                      let e =
                        null == D
                          ? void 0
                          : null === (d = D.choices) || void 0 === d
                            ? void 0
                            : d.find(e => e.value === O.value);
                      null != e &&
                        (U =
                          null !== (c = e.name_localized) && void 0 !== c
                            ? c
                            : e.name);
                    }
                  }
                return (
                  null == A && (A = M(null == U ? void 0 : U.toString())),
                  [
                    (0, s.jsxs)(
                      a.Fragment,
                      {
                        children: [
                          (0, s.jsxs)(o.Text, {
                            ...h,
                            children: [
                              " ",
                              null !==
                                (E = null == D ? void 0 : D.name_localized) &&
                              void 0 !== E
                                ? E
                                : O.name,
                              ": ",
                            ],
                          }),
                          A,
                        ],
                      },
                      y
                    ),
                  ]
                );
              })({
                option: n,
                channel: v,
                guild: j,
                messageId: P,
                parentOptionKey: null,
                commandOptionSpec: t[n.name],
                sourceAnalyticsLocations: x,
              })
            );
          L = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsxs)(o.Text, {
                ...h,
                children: [
                  "/",
                  null !==
                    (R =
                      null === (l = D.application_command) || void 0 === l
                        ? void 0
                        : l.name_localized) && void 0 !== R
                    ? R
                    : D.name,
                ],
              }),
              e,
            ],
          });
        }
        return (0, s.jsxs)("div", {
          className: A.container,
          onCopy: e => {
            var t, n, s;
            let a =
              null !==
                (s =
                  null === (n = window) || void 0 === n
                    ? void 0
                    : null === (t = n.getSelection()) || void 0 === t
                      ? void 0
                      : t.toString()) && void 0 !== s
                ? s
                : "";
            a.startsWith("/") && a.endsWith("\n") && y(e, D);
          },
          children: [
            (0, s.jsx)("div", { className: A.tooltip, ref: U, children: L }),
            (0, s.jsx)("div", { className: A.tooltipPointer }),
          ],
        });
      });
    },
    304198: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("587904"),
        o = n("957617");
      function u(e) {
        let {
          icon: t,
          iconNode: n,
          timestamp: a,
          className: i,
          children: u,
          contentClassName: d,
          iconClassName: c,
          iconContainerClassName: E,
          compact: f = !1,
        } = e;
        return (0, s.jsxs)("div", {
          className: l(i, { [o.container]: !0, [o.compact]: f, [o.cozy]: !f }),
          children: [
            null != n &&
              (0, s.jsx)("div", {
                className: l(o.iconContainer, E),
                children: n,
              }),
            null != t &&
              (0, s.jsx)("div", {
                className: o.iconContainer,
                children: (0, s.jsx)("div", {
                  "data-accessibility": "desaturate",
                  className: l(o.icon, o.iconSize, c),
                  style: { backgroundImage: "url('".concat(t, "')") },
                }),
              }),
            (0, s.jsxs)("div", {
              className: l(d, o.content),
              children: [
                u,
                null != a && (0, s.jsx)(r.default, { timestamp: a }),
              ],
            }),
          ],
        });
      }
      u.Action = e => {
        let { onClick: t, children: n } = e;
        return (0, s.jsxs)("span", {
          className: o.action,
          children: [
            "—",
            (0, s.jsx)(i.Anchor, {
              onClick: t,
              className: o.actionAnchor,
              children: n,
            }),
          ],
        });
      };
      var d = u;
    },
    292200: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Q;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("866227"),
        o = n.n(r),
        u = n("974667"),
        d = n("733724"),
        c = n("446674"),
        E = n("77078"),
        f = n("206230"),
        _ = n("228944"),
        T = n("201131"),
        I = n("928098"),
        m = n("702873"),
        N = n("537325"),
        p = n("95045"),
        S = n("909917"),
        C = n("380986"),
        A = n("969706"),
        h = n("957255"),
        g = n("697218"),
        M = n("79798"),
        O = n("36694"),
        R = n("907566"),
        L = n("561359"),
        v = n("228220"),
        P = n("759885"),
        D = n("843194"),
        x = n("93332"),
        y = n("304198"),
        U = n("387111"),
        j = n("158998"),
        b = n("250375"),
        G = n("49111"),
        B = n("988268"),
        k = n("903639"),
        F = n("894488"),
        w = n("782340"),
        H = n("864994");
      function V(e) {
        let { children: t, className: n, compact: a } = e;
        return (0, s.jsx)("div", {
          className: i(H.footerContainer, n, { [H.compact]: a }),
          children: t,
        });
      }
      function Y(e) {
        let { children: t, className: n } = e;
        return (0, s.jsx)("div", {
          className: i(H.annotationRow, n),
          children: t,
        });
      }
      function K(e, t) {
        switch (e) {
          case _.AutomodAlertActionType.DELETE_USER_MESSAGE:
            return (0, s.jsx)(v.default, {
              width: 16,
              height: 16,
              className: H.alertActionIcon,
              ...t,
            });
          case _.AutomodAlertActionType.SET_COMPLETED:
            return (0, s.jsx)(O.default, {
              width: 16,
              height: 16,
              className: i(H.alertActionIcon, H.alertActionSetCompletedIcon),
              ...t,
            });
          case _.AutomodAlertActionType.SUBMIT_FEEDBACK:
            return (0, s.jsx)(R.default, {
              width: 16,
              height: 16,
              className: i(H.alertActionIcon),
              ...t,
            });
          default:
            return null;
        }
      }
      function W(e) {
        let { alertAction: t, guildId: n } = e,
          a = (0, c.useStateFromStores)(
            [g.default],
            () => g.default.getUser(t.actor),
            [t.actor]
          );
        try {
          let e = parseInt(t.actionType);
          if (null == a) return K(e, {});
          let l = (function (e, t, n) {
            var s;
            let a =
                null !== (s = U.default.getNickname(n, null, t)) && void 0 !== s
                  ? s
                  : j.default.getUserTag(t),
              l = o(e.ts),
              i = "".concat(a, " ").concat(l.fromNow());
            try {
              let t = parseInt(e.actionType);
              switch (t) {
                case _.AutomodAlertActionType.DELETE_USER_MESSAGE:
                  return w.default.Messages.GUILD_AUTOMOD_ALERT_ACTION_ICON_TOOLTIP_DELETE_MESSAGE.format(
                    { userName: a, timestamp: l.fromNow() }
                  );
                case _.AutomodAlertActionType.SET_COMPLETED:
                  return w.default.Messages.GUILD_AUTOMOD_ALERT_ACTION_ICON_TOOLTIP_SET_COMPLETED.format(
                    { userName: a, timestamp: l.fromNow() }
                  );
                case _.AutomodAlertActionType.SUBMIT_FEEDBACK:
                  return w.default.Messages.GUILD_AUTOMOD_ALERT_ACTION_ICON_TOOLTIP_SUBMIT_FEEDBACK.format(
                    { userName: a, timestamp: l.fromNow() }
                  );
                default:
                  return i;
              }
            } catch (e) {
              return i;
            }
          })(t, a, n);
          return (0, s.jsx)(E.Tooltip, { text: l, children: t => K(e, t) });
        } catch (e) {
          return null;
        }
      }
      function z(e) {
        let { alertActionsExecution: t, guildId: n } = e,
          a = Object.values(t.actions).sort((e, t) =>
            e.actionType < t.actionType ? 1 : -1
          );
        return (0, s.jsx)("div", {
          className: H.alertActionsIconContainer,
          children: a.map(e =>
            (0, s.jsx)(W, { alertAction: e, guildId: n }, e.actionType)
          ),
        });
      }
      function Q(e) {
        let { id: t, compact: n, message: l, channel: r } = e,
          {
            avatarSrc: o,
            eventHandlers: { onMouseEnter: g, onMouseLeave: O },
          } = (0, b.useAutomodAvatar)(!0),
          { onFocus: R, ...v } = (0, u.useListItem)(null != t ? t : ""),
          {
            isFocused: U,
            handleFocus: j,
            handleBlur: K,
          } = (0, C.useFocusInside)(R),
          W = (0, c.useStateFromStores)(
            [f.default],
            () => f.default.keyboardModeEnabled
          ),
          Q = (0, c.useStateFromStores)(
            [h.default],
            () => h.default.can(G.Permissions.MANAGE_MESSAGES, r),
            [r]
          ),
          {
            ruleName: Z,
            embedChannel: J,
            decisionId: q,
            keywordMatchedContent: X,
            keyword: $,
            content: ee,
            flaggedMessageId: et,
            timeoutDuration: en,
            decisionReason: es,
            alertActionsExecution: ea,
            quarantineType: el,
          } = (0, T.default)(l),
          ei = a.useMemo(
            () => (0, p.renderAutomodMessageMarkup)(ee, X, r.id),
            [ee, X, r]
          ),
          { selected: er, ...eo } = (function (e, t) {
            let {
                popouts: n,
                selected: s,
                setPopout: l,
              } = (0, A.default)(e.id, F.DEFAULT_POPOUTS),
              { usernameProfile: i, avatarProfile: r } = n,
              o = (0, C.useContextMenuUser)(e.author.id, t.id),
              u = (0, C.useContextMenuModerateUser)(e.author.id, t.id, e.id),
              d = (0, C.useClickMessageAuthorUsername)(e, t, i, l),
              c = (0, C.useClickMessageAuthorAvatar)(r, l),
              E = a.useCallback(
                () =>
                  l({
                    usernameProfile: !1,
                    avatarProfile: !1,
                    referencedUsernameProfile: !1,
                  }),
                [l]
              );
            return {
              selected: s,
              onContextMenu: o,
              onContextMenuModerateUser: u,
              onClickUsername: d,
              onClickAvatar: c,
              onPopoutRequestClose: E,
              renderPopout: S.default,
              showAvatarPopout: r,
              showUsernamePopout: i,
            };
          })(l, r),
          eu = a.useCallback(() => {
            (0, I.openSubmitFeedback)(l.id, ee, q, r);
          }, [l.id, ee, q, r]),
          ed = a.useCallback(
            e => {
              null != et &&
                null != J &&
                (e.stopPropagation(),
                e.preventDefault(),
                (0, N.default)(
                  G.Routes.CHANNEL(
                    null == J ? void 0 : J.guild_id,
                    null == J ? void 0 : J.id,
                    et
                  )
                ));
            },
            [J, et]
          ),
          ec = a.useCallback(() => {
            (0, m.executeAlertAction)(
              l.id,
              r,
              _.AutomodAlertActionType.DELETE_USER_MESSAGE
            );
          }, [r, l.id]),
          eE = a.useMemo(
            () =>
              (0, T.getActionHeaderText)(l, J, () =>
                (0, s.jsx)("div", {
                  className: H.channelNameContainer,
                  children: (0, s.jsx)(P.default, {
                    channel: J,
                    className: H.channelName,
                    openChatWithoutConnecting: !0,
                  }),
                })
              ),
            [l, J]
          ),
          ef = (0, k.getFriendlyDurationString)(Number(en)),
          e_ = null != es,
          eT =
            Q &&
            null != et &&
            (null == ea ||
              !ea.actions.hasOwnProperty(
                _.AutomodAlertActionType.DELETE_USER_MESSAGE
              ));
        return (0, s.jsx)("div", {
          onMouseEnter: g,
          onMouseLeave: O,
          children: (0, s.jsx)(y.default, {
            className: i(H.mainContainer, { [H.compact]: n }),
            iconNode: n ? null : (0, s.jsx)(b.AutomodAvatar, { src: o }),
            iconContainerClassName: H.iconContainer,
            compact: n,
            children: (0, s.jsxs)("div", {
              className: i(H.content, { [H.compact]: n }),
              children: [
                (0, s.jsx)(x.BaseMessageHeader, {
                  message: l,
                  messageClassname: H.spanCorrection,
                  className: i(H.usernameContainer, H.spanCorrection, {
                    [H.compact]: n,
                  }),
                  username: (0, s.jsxs)("div", {
                    className: H.spanCorrection,
                    children: [
                      (0, s.jsx)(E.Text, {
                        variant: "text-md/normal",
                        color: "text-brand",
                        tag: "span",
                        className: H.username,
                        children: w.default.Messages.GUILD_AUTOMOD_USERNAME,
                      }),
                      (0, s.jsx)(M.default, {
                        type: B.BotTagTypes.SYSTEM_DM,
                        className: H.systemTag,
                      }),
                      (0, s.jsx)(E.Text, {
                        variant: "text-md/normal",
                        color: "header-primary",
                        tag: "span",
                        className: H.spanCorrection,
                        children: eE,
                      }),
                    ],
                  }),
                  compact: n,
                  showTimestamp: !0,
                }),
                (0, s.jsx)("div", {
                  className: i(H.messageContent, { [H.compact]: n }),
                  children: (0, s.jsx)(D.default, {
                    ...v,
                    message: l,
                    channel: J,
                    content: ei,
                    compact: n,
                    withFooter: !0,
                    hideTimestamp: !0,
                    className: i(H.embedCard, {
                      [H.compact]: n,
                      [H.selected]: er || (W && U),
                      [H.isClickable]: null != et && null != J,
                    }),
                    childrenAccessories: (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsxs)("div", {
                          className: H.centeredRowContainer,
                          children: [
                            null != $ &&
                              (0, s.jsxs)(s.Fragment, {
                                children: [
                                  (0, s.jsx)(E.Text, {
                                    variant: "text-xs/medium",
                                    color: "text-muted",
                                    tag: "span",
                                    children:
                                      w.default.Messages.GUILD_AUTOMOD_POST_TO_CHANNEL_KEYWORD.format(
                                        { keyword: $ }
                                      ),
                                  }),
                                  (0, s.jsx)("div", {
                                    className: i(H.dot, H.dotMargin),
                                  }),
                                ],
                              }),
                            null != Z &&
                              (0, s.jsx)(E.Text, {
                                variant: "text-xs/medium",
                                color: "text-muted",
                                tag: "span",
                                children:
                                  w.default.Messages.GUILD_AUTOMOD_POST_TO_CHANNEL_RULE_NAME.format(
                                    { ruleName: Z }
                                  ),
                              }),
                            null != ef &&
                              (0, s.jsxs)(s.Fragment, {
                                children: [
                                  (0, s.jsx)("div", {
                                    className: i(H.dot, H.dotMargin),
                                  }),
                                  (0, s.jsx)(E.Text, {
                                    variant: "text-xs/medium",
                                    color: "text-muted",
                                    tag: "span",
                                    className: H.footerText,
                                    children:
                                      w.default.Messages.GUILD_AUTOMOD_POST_TO_CHANNEL_TIMEOUT_DURATION.format(
                                        { duration: ef }
                                      ),
                                  }),
                                ],
                              }),
                            null != el &&
                              (0, s.jsxs)(s.Fragment, {
                                children: [
                                  (0, s.jsx)("div", {
                                    className: i(H.dot, H.dotMargin),
                                  }),
                                  (0, s.jsx)(E.Text, {
                                    variant: "text-xs/medium",
                                    color: "text-muted",
                                    tag: "span",
                                    className: H.titleCase,
                                    children:
                                      w.default.Messages.GUILD_AUTOMOD_POST_TO_CHANNEL_REASON.format(
                                        {
                                          reason: (0,
                                          T.getQuarantineReasonString)(el),
                                        }
                                      ),
                                  }),
                                ],
                              }),
                          ],
                        }),
                        e_
                          ? (0, s.jsx)(Y, {
                              children: (0, s.jsx)(E.Text, {
                                variant: "text-xs/medium",
                                color: "text-normal",
                                tag: "span",
                                children: es,
                              }),
                            })
                          : null,
                      ],
                    }),
                    popoutProps: eo,
                    zalgo: !0,
                    onFocus: j,
                    onBlur: K,
                    onClick: ed,
                  }),
                }),
                (0, s.jsx)(V, {
                  compact: n,
                  children: (0, s.jsxs)("div", {
                    className: i(H.centeredRowContainer, H.buttonContainer, {
                      [H.compact]: n,
                    }),
                    children: [
                      (0, s.jsx)(E.Button, {
                        onClick: e => {
                          var t;
                          null === (t = eo.onContextMenuModerateUser) ||
                            void 0 === t ||
                            t.call(eo, e);
                        },
                        color: E.Button.Colors.LINK,
                        look: E.Button.Looks.LINK,
                        size: E.Button.Sizes.SMALL,
                        className: H.buttonStyle,
                        children: (0, s.jsxs)("div", {
                          className: H.footerAction,
                          children: [
                            (0, s.jsx)(L.default, {
                              width: 16,
                              height: 16,
                              color: d.default.BLUE_345,
                              className: H.footerIcon,
                            }),
                            (0, s.jsx)(E.Text, {
                              variant: "text-xs/normal",
                              color: "text-link",
                              children: w.default.Messages.ACTIONS,
                            }),
                          ],
                        }),
                      }),
                      (0, s.jsx)("div", { className: H.dot }),
                      (0, s.jsx)(E.Button, {
                        onClick: eu,
                        color: E.Button.Colors.LINK,
                        look: E.Button.Looks.LINK,
                        size: E.Button.Sizes.SMALL,
                        className: H.buttonStyle,
                        children: (0, s.jsx)("div", {
                          className: H.footerAction,
                          children: (0, s.jsx)(E.Text, {
                            variant: "text-xs/normal",
                            color: "text-link",
                            children:
                              w.default.Messages.GUILD_AUTOMOD_REPORT_ISSUES,
                          }),
                        }),
                      }),
                      eT
                        ? (0, s.jsxs)(s.Fragment, {
                            children: [
                              (0, s.jsx)("div", { className: H.dot }),
                              (0, s.jsx)(E.Button, {
                                onClick: ec,
                                color: E.Button.Colors.LINK,
                                look: E.Button.Looks.LINK,
                                size: E.Button.Sizes.SMALL,
                                className: H.buttonStyle,
                                children: (0, s.jsx)("div", {
                                  className: H.footerAction,
                                  children: (0, s.jsx)(E.Text, {
                                    variant: "text-xs/normal",
                                    color: "text-link",
                                    children:
                                      w.default.Messages
                                        .GUILD_AUTOMOD_ALERT_DELETE_MEMBERS_MESSAGE,
                                  }),
                                }),
                              }),
                            ],
                          })
                        : null,
                      null != ea
                        ? (0, s.jsx)(z, {
                            alertActionsExecution: ea,
                            guildId: r.guild_id,
                          })
                        : null,
                    ],
                  }),
                }),
              ],
            }),
          }),
        });
      }
    },
    944662: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("201131"),
        l = n("292200"),
        i = n("119715");
      function r(e) {
        let { message: t, ...n } = e;
        return (0, a.isAutomodNotification)(t)
          ? (0, s.jsx)(i.default, { message: t, ...n })
          : (0, s.jsx)(l.default, { message: t, ...n });
      }
    },
    250375: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useAutomodAvatar: function () {
            return f;
          },
          AutomodAvatar: function () {
            return _;
          },
        }),
        n("222007");
      var s = n("37983"),
        a = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("206230"),
        o = n("523096"),
        u = n("50885"),
        d = n("782340"),
        c = n("864994");
      let E = u.default.getEnableHardwareAcceleration()
        ? i.AnimatedAvatar
        : i.Avatar;
      function f() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          [t, n] = a.useState(!1),
          s = (0, l.useStateFromStores)(
            [r.default],
            () => r.default.useReducedMotion
          ),
          i = a.useMemo(() => {
            let n = t || (!s && !e);
            return (0, o.getAutomodAvatarURL)(n);
          }, [t, s, e]),
          u = a.useCallback(() => n(!0), []),
          d = a.useCallback(() => n(!1), []);
        return {
          avatarSrc: i,
          eventHandlers: { onMouseEnter: u, onMouseLeave: d },
        };
      }
      function _(e) {
        let { src: t } = e;
        return (0, s.jsx)("div", {
          className: c.avatarContainer,
          children: (0, s.jsx)(E, {
            src: t,
            size: i.AvatarSizes.SIZE_40,
            "aria-label": d.default.Messages.GUILD_AUTOMOD_USERNAME,
          }),
        });
      }
    },
    119715: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Z;
          },
        });
      var s = n("37983"),
        a = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("866227"),
        o = n.n(r),
        u = n("733724"),
        d = n("6938"),
        c = n("417796"),
        E = n("446674"),
        f = n("669491"),
        _ = n("167338"),
        T = n("582601"),
        I = n("77078"),
        m = n("455555"),
        N = n("398654"),
        p = n("712125"),
        S = n("311161"),
        C = n("201131"),
        A = n("928098"),
        h = n("702873"),
        g = n("592407"),
        M = n("380986"),
        O = n("981601"),
        R = n("106435"),
        L = n("42203"),
        v = n("26989"),
        P = n("697218"),
        D = n("79798"),
        x = n("45029"),
        y = n("561359"),
        U = n("423487"),
        j = n("93332"),
        b = n("304198"),
        G = n("250375"),
        B = n("49111"),
        k = n("988268"),
        F = n("782340"),
        w = n("950912");
      function H() {
        return (0, s.jsx)("div", { className: w.dot });
      }
      function V(e) {
        let { message: t, compact: n } = e,
          { notificationType: a } = (0, C.extractAutomodNotificationFields)(t);
        switch (a) {
          case C.IS_BACKWARDS_COMPAT_RAID_TYPE:
          case d.AutomodNotificationEmbedTypeKeys.RAID:
            return (0, s.jsx)(W, { message: t, compact: n });
          case d.AutomodNotificationEmbedTypeKeys.MENTION_RAID:
            return (0, s.jsx)(z, { message: t, compact: n });
          case d.AutomodNotificationEmbedTypeKeys.ACTIVITY_ALERTS_ENABLED:
            return (0, s.jsx)(K, { message: t, compact: n });
          default:
            return (0, s.jsx)(Y, { compact: n });
        }
      }
      function Y(e) {
        let { compact: t } = e;
        return (0, s.jsx)(Q, {
          compact: t,
          header: (0, s.jsxs)(a.Fragment, {
            children: [
              (0, s.jsx)(U.default, {
                width: 16,
                height: 16,
                color: f.default.colors.HEADER_SECONDARY.css,
              }),
              (0, s.jsx)(I.Text, {
                variant: "text-md/semibold",
                color: "header-secondary",
                children:
                  F.default.Messages
                    .GUILD_AUTOMOD_NOTFICATION_UNSUPPORTED_TITLE,
              }),
            ],
          }),
          content: (0, s.jsx)(I.Text, {
            variant: "text-md/normal",
            color: "text-muted",
            children:
              F.default.Messages
                .GUILD_AUTOMOD_NOTFICATION_UNSUPPORTED_DESCRIPTION,
          }),
        });
      }
      function K(e) {
        var t;
        let { message: n, compact: l } = e,
          i = P.default.getUser((0, C.getUserIdOfAutomodAction)(n)),
          r =
            null === (t = L.default.getBasicChannel(n.channel_id)) ||
            void 0 === t
              ? void 0
              : t.guild_id,
          u = null != r && null != i,
          d = u ? v.default.getMember(r, i.id) : null,
          {
            avatarSrc: c,
            avatarDecorationSrc: E,
            eventHandlers: _,
          } = (0, R.default)({ user: i, guildId: r, size: 12 });
        return (0, s.jsx)(Q, {
          compact: l,
          header: (0, s.jsxs)(a.Fragment, {
            children: [
              (0, s.jsx)(T.SettingsInfoIcon, {
                width: 16,
                height: 16,
                color: f.default.colors.TEXT_POSITIVE.css,
              }),
              (0, s.jsx)(I.Text, {
                variant: "text-md/semibold",
                color: "text-positive",
                children:
                  F.default.Messages
                    .GUILD_AUTOMOD_NOTIFICATION_ACTIVITY_ALERTS_ENABLED_TITLE,
              }),
            ],
          }),
          subheader: (0, s.jsxs)("div", {
            className: w.dotSeparatedRow,
            children: [
              (0, s.jsx)("div", {
                className: w.alertsEnabledSubHeader,
                children:
                  null != d &&
                  null != i &&
                  (0, s.jsxs)(a.Fragment, {
                    children: [
                      (0, s.jsx)(I.Text, {
                        variant: "text-xs/medium",
                        color: "text-normal",
                        children:
                          F.default.Messages
                            .GUILD_AUTOMOD_NOTIFICATION_ACTIVITY_ALERTS_ENABLED_BY_PREFIX,
                      }),
                      (0, s.jsx)(I.Popout, {
                        renderPopout: function (e) {
                          return null == i
                            ? (0, s.jsx)(s.Fragment, {})
                            : (0, s.jsx)(O.default, {
                                ...e,
                                userId: i.id,
                                user: i,
                                guildId: r,
                                channelId: n.channel_id,
                                messageId: n.id,
                              });
                        },
                        children: e =>
                          (0, s.jsxs)(I.Clickable, {
                            className: w.alertsEnabledSubHeaderAvatarUsername,
                            ...e,
                            children: [
                              (0, s.jsx)("div", {
                                ..._,
                                children: (0, s.jsx)(I.Avatar, {
                                  src: c,
                                  avatarDecoration: E,
                                  size: I.AvatarSizes.SIZE_16,
                                  "aria-label": "TODO",
                                }),
                              }),
                              (0, s.jsxs)(I.Text, {
                                variant: "text-xs/medium",
                                style: {
                                  color:
                                    null != d.colorString
                                      ? d.colorString
                                      : f.default.colors.TEXT_NORMAL.css,
                                },
                                children: [" ", "@", i.username],
                              }),
                            ],
                          }),
                      }),
                    ],
                  }),
              }),
              (0, s.jsx)(H, {}),
              (0, s.jsx)(I.Text, {
                variant: "text-xs/medium",
                color: "text-normal",
                children: o(n.timestamp).fromNow(),
              }),
            ],
          }),
          content: (0, s.jsx)(I.Text, {
            variant: "text-md/normal",
            color: "text-muted",
            children:
              F.default.Messages
                .GUILD_AUTOMOD_NOTIFICATION_ACTIVITY_ALERTS_ENABLED_DESCRIPTION,
          }),
        });
      }
      function W(e) {
        var t;
        let { message: l, compact: i } = e,
          {
            joinAttempts: r,
            raidDatetime: d,
            dmsSent: T,
            raidType: m,
            resolvedReason: h,
          } = (0, C.extractAutomodNotificationFields)(l),
          g = (0, E.useStateFromStores)(
            [L.default],
            () => L.default.getChannel(l.channel_id),
            [l.channel_id]
          ),
          O =
            null !== (t = null == g ? void 0 : g.guild_id) && void 0 !== t
              ? t
              : null,
          { incidentData: R, shouldShowIncidentActions: v } = (0,
          N.useGuildIncidentsState)(O),
          P = (0, M.useContextMenuRaidAlert)(l.author.id, l.channel_id),
          D = a.useCallback(() => {
            let e = null == g ? void 0 : g.guild_id;
            null != e && (0, A.openRaidResolveModal)(l.id, e);
          }, [l.id, g]),
          j = m === c.AutomodRaidAlertTypes.DM_RAID,
          b = j ? U.default : _.ChatAlertIcon;
        return (0, s.jsx)(Q, {
          compact: i,
          header: (0, s.jsxs)(a.Fragment, {
            children: [
              (0, s.jsx)(b, {
                width: 16,
                height: 16,
                color: f.default.colors.TEXT_DANGER.css,
              }),
              (0, s.jsx)(I.Text, {
                variant: "text-md/semibold",
                color: "text-danger",
                children: j
                  ? F.default.Messages.GUILD_AUTOMOD_NOTIFICATION_DM_RAID_TITLE
                  : F.default.Messages.GUILD_AUTOMOD_NOTIFICATION_RAID_TITLE,
              }),
            ],
          }),
          subheader: (0, s.jsxs)("div", {
            className: w.dotSeparatedRow,
            children: [
              null != r &&
                (0, s.jsx)(I.Text, {
                  variant: "text-xs/medium",
                  color: "text-normal",
                  children:
                    F.default.Messages.GUILD_AUTOMOD_NOTIFICATION_RAID_JOINS.format(
                      { joinCount: r }
                    ),
                }),
              null != T &&
                (0, s.jsx)(I.Text, {
                  variant: "text-xs/medium",
                  color: "text-normal",
                  children:
                    F.default.Messages.GUILD_AUTOMOD_NOTIFICATION_RAID_DMS.format(
                      { dmsSent: T }
                    ),
                }),
              null != d &&
                (0, s.jsxs)(a.Fragment, {
                  children: [
                    (0, s.jsx)(H, {}),
                    (0, s.jsx)(I.Text, {
                      variant: "text-xs/medium",
                      color: "text-normal",
                      children: o(d).fromNow(),
                    }),
                  ],
                }),
            ],
          }),
          content:
            null != d
              ? (0, s.jsx)(I.Text, {
                  variant: "text-md/normal",
                  color: "text-muted",
                  children:
                    F.default.Messages.GUILD_AUTOMOD_NOTIFICATION_RAID_ACTION_DESCRIPTION.format(
                      {
                        dateTime: d.toLocaleString(
                          F.default.getLocale(),
                          S.DATE_CONFIG
                        ),
                      }
                    ),
                })
              : null,
          footerButtons: (0, s.jsxs)("div", {
            className: w.dotSeparatedRow,
            children: [
              (0, s.jsx)(I.Button, {
                onClick: e => {
                  if (null != O && v) {
                    let e = {
                      source: p.GuildIncidentActionSources.MESSAGE,
                      messageId: l.id,
                      alertType: (0, S.getIncidentAlertType)(R),
                    };
                    (0, I.openModalLazy)(async () => {
                      let { default: t } = await n
                        .el("186638")
                        .then(n.bind(n, "186638"));
                      return n =>
                        (0, s.jsx)(t, { ...n, guildId: O, analyticsData: e });
                    });
                  } else P(e);
                },
                color: I.Button.Colors.LINK,
                look: I.Button.Looks.LINK,
                size: I.Button.Sizes.SMALL,
                className: w.buttonStyle,
                children: (0, s.jsx)("div", {
                  className: w.footerAction,
                  children: v
                    ? (0, s.jsxs)(s.Fragment, {
                        children: [
                          (0, s.jsx)(x.default, {
                            width: 16,
                            height: 16,
                            color: u.default.BLUE_345,
                            className: w.footerIcon,
                          }),
                          (0, s.jsx)(I.Text, {
                            variant: "text-xs/medium",
                            color: "text-link",
                            children:
                              F.default.Messages.GUILD_ANTIRAID_NAGBAR_ACTION,
                          }),
                        ],
                      })
                    : (0, s.jsxs)(s.Fragment, {
                        children: [
                          (0, s.jsx)(y.default, {
                            width: 16,
                            height: 16,
                            color: u.default.BLUE_345,
                            className: w.footerIcon,
                          }),
                          (0, s.jsx)(I.Text, {
                            variant: "text-xs/medium",
                            color: "text-link",
                            children: F.default.Messages.ACTIONS,
                          }),
                        ],
                      }),
                }),
              }),
              (0, s.jsx)(H, {}),
              (0, s.jsx)(I.Button, {
                onClick: D,
                color: I.Button.Colors.LINK,
                look: I.Button.Looks.LINK,
                size: I.Button.Sizes.SMALL,
                className: w.buttonStyle,
                children: (0, s.jsx)("div", {
                  className: w.footerAction,
                  children: (0, s.jsx)(I.Text, {
                    variant: "text-xs/medium",
                    color: "text-link",
                    children: (0, C.getRaidAlertResolveCTAText)(h),
                  }),
                }),
              }),
            ],
          }),
        });
      }
      function z(e) {
        var t;
        let { message: n, compact: l } = e,
          i =
            null === (t = L.default.getBasicChannel(n.channel_id)) ||
            void 0 === t
              ? void 0
              : t.guild_id,
          {
            raidDatetime: r,
            decisionId: u,
            suspiciousMentionActivityUntil: d,
          } = (0, C.extractAutomodNotificationFields)(n);
        return (0, s.jsx)(Q, {
          compact: l,
          header: (0, s.jsxs)(a.Fragment, {
            children: [
              (0, s.jsx)(U.default, {
                width: 16,
                height: 16,
                color: f.default.colors.TEXT_DANGER.css,
              }),
              (0, s.jsx)(I.Text, {
                variant: "text-md/semibold",
                color: "text-danger",
                children:
                  F.default.Messages
                    .GUILD_AUTOMOD_NOTIFICATION_MENTION_RAID_TITLE,
              }),
            ],
          }),
          subheader: (0, s.jsx)("div", {
            className: w.dotSeparatedRow,
            children:
              null != r &&
              (0, s.jsx)(I.Text, {
                variant: "text-xs/medium",
                color: "text-normal",
                children: o(r).fromNow(),
              }),
          }),
          content: (0, s.jsx)(I.Text, {
            variant: "text-md/normal",
            color: "text-muted",
            children:
              F.default.Messages
                .GUILD_AUTOMOD_NOTIFICATION_MENTION_RAID_DESCRIPTION,
          }),
          footerButtons: (0, s.jsxs)("div", {
            className: w.dotSeparatedRow,
            children: [
              (0, s.jsx)(I.Button, {
                onClick: function () {
                  null != i &&
                    null != u &&
                    (0, h.removeMentionRaidRestrictionWithFeedback)(
                      i,
                      u,
                      () => {
                        (0, m.dismissCurrentNotice)(d),
                          (0, h.clearMentionRaidDetected)(i);
                      }
                    );
                },
                color: I.Button.Colors.LINK,
                look: I.Button.Looks.LINK,
                size: I.Button.Sizes.SMALL,
                className: w.buttonStyle,
                children: (0, s.jsx)("div", {
                  className: w.footerAction,
                  children: (0, s.jsx)(I.Text, {
                    variant: "text-xs/medium",
                    color: "text-link",
                    children:
                      F.default.Messages
                        .GUILD_AUTOMOD_MENTION_SPAM_NOTICE_REMOVE_RESTRICTION,
                  }),
                }),
              }),
              (0, s.jsx)(H, {}),
              (0, s.jsx)(I.Button, {
                onClick: function () {
                  null != i &&
                    g.default.open(
                      i,
                      B.GuildSettingsSections.GUILD_AUTOMOD,
                      void 0,
                      B.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM
                    );
                },
                color: I.Button.Colors.LINK,
                look: I.Button.Looks.LINK,
                size: I.Button.Sizes.SMALL,
                className: w.buttonStyle,
                children: (0, s.jsx)("div", {
                  className: w.footerAction,
                  children: (0, s.jsx)(I.Text, {
                    variant: "text-xs/medium",
                    color: "text-link",
                    children:
                      F.default.Messages
                        .GUILD_AUTOMOD_MENTION_SPAM_NOTICE_CONFIGURE_SETTINGS,
                  }),
                }),
              }),
            ],
          }),
        });
      }
      function Q(e) {
        let {
          compact: t,
          header: n,
          subheader: a,
          content: l,
          footerButtons: r,
        } = e;
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: i(w.embedCard, { [w.compact]: t }),
            children: [
              (0, s.jsxs)("div", {
                className: w.cardContent,
                children: [
                  (0, s.jsxs)("div", {
                    className: w.cardHeaderContianer,
                    children: [
                      (0, s.jsx)("div", {
                        className: w.cardHeader,
                        children: n,
                      }),
                      null != a &&
                        (0, s.jsx)("div", {
                          className: w.subheader,
                          children: a,
                        }),
                    ],
                  }),
                  l,
                ],
              }),
              null != r &&
                (0, s.jsx)("div", {
                  className: i(w.centeredRowContainer, w.cardFooter, {
                    [w.compact]: t,
                  }),
                  children: r,
                }),
            ],
          }),
        });
      }
      function Z(e) {
        let { id: t, compact: n, message: a, channel: l } = e,
          {
            avatarSrc: r,
            eventHandlers: { onMouseEnter: o, onMouseLeave: u },
          } = (0, G.useAutomodAvatar)(!0),
          { notificationType: c } = (0, C.extractAutomodNotificationFields)(a),
          E = null == c || c === d.AutomodNotificationEmbedTypeKeys.RAID;
        return (0, s.jsx)("div", {
          onMouseEnter: o,
          onMouseLeave: u,
          children: (0, s.jsx)(b.default, {
            className: i(w.mainContainer, { [w.compact]: n }),
            iconNode: n ? null : (0, s.jsx)(G.AutomodAvatar, { src: r }),
            iconContainerClassName: w.iconContainer,
            compact: n,
            children: (0, s.jsxs)("div", {
              className: i(w.content, { [w.compact]: n }),
              children: [
                (0, s.jsx)(j.BaseMessageHeader, {
                  message: a,
                  messageClassname: w.spanCorrection,
                  className: i(w.usernameContainer, w.spanCorrection, {
                    [w.compact]: n,
                  }),
                  username: (0, s.jsxs)("div", {
                    className: w.spanCorrection,
                    children: [
                      (0, s.jsx)(I.Text, {
                        variant: "text-md/normal",
                        color: "text-brand",
                        tag: "span",
                        className: w.username,
                        children: F.default.Messages.GUILD_AUTOMOD_USERNAME,
                      }),
                      (0, s.jsx)(D.default, {
                        type: k.BotTagTypes.SYSTEM_DM,
                        className: w.systemTag,
                      }),
                      E &&
                        (0, s.jsx)(I.Text, {
                          variant: "text-md/normal",
                          color: "header-primary",
                          tag: "span",
                          className: w.spanCorrection,
                          children:
                            F.default.Messages
                              .GUILD_AUTOMOD_NOTFICATION_ALERT_TITLE,
                        }),
                    ],
                  }),
                  compact: n,
                  showTimestamp: !0,
                }),
                (0, s.jsx)("div", { className: w.flexLineBreak }),
                (0, s.jsx)(V, { message: a, compact: n }),
              ],
            }),
          }),
        });
      }
    },
    748880: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let {
            message: t,
            compact: r,
            missed: o,
            joinable: u,
            usernameHook: d,
            onClickJoinCall: c,
          } = e,
          E = (0, a.default)(t),
          f = E.nick,
          _ = d(E),
          T = (function (e) {
            let t = null != e.call ? e.call.duration : null;
            return null != t ? t.humanize() : null;
          })(t);
        return o
          ? (0, s.jsx)(l.default, {
              icon: n("349745"),
              timestamp: t.timestamp,
              compact: r,
              children:
                null != T
                  ? i.default.Messages.SYSTEM_MESSAGE_CALL_MISSED_WITH_DURATION_HOOK.format(
                      { username: f, usernameHook: _, callDuration: T }
                    )
                  : i.default.Messages.SYSTEM_MESSAGE_CALL_MISSED_HOOK.format({
                      username: f,
                      usernameHook: _,
                    }),
            })
          : (0, s.jsxs)(l.default, {
              icon: n("309541"),
              timestamp: t.timestamp,
              compact: r,
              children: [
                null != T
                  ? i.default.Messages.SYSTEM_MESSAGE_CALL_STARTED_WITH_DURATION_HOOK.format(
                      { username: f, usernameHook: _, callDuration: T }
                    )
                  : i.default.Messages.SYSTEM_MESSAGE_CALL_STARTED_HOOK.format({
                      username: f,
                      usernameHook: _,
                    }),
                u
                  ? (0, s.jsx)(l.default.Action, {
                      onClick: c,
                      children: i.default.Messages.SYSTEM_MESSAGE_JOIN_CALL,
                    })
                  : null,
              ],
            });
      }
    },
    888393: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("687521"),
        i = n("574073"),
        r = n("304198"),
        o = n("782340");
      function u(e) {
        let { children: t, messageReference: n } = e;
        if (null == n) return (0, s.jsx)(a.Anchor, { children: t });
        let { guild_id: i, channel_id: r, message_id: o } = n;
        return null == i
          ? (0, s.jsx)(a.Anchor, { children: t })
          : (0, s.jsx)(l.default, {
              guildId: i,
              channelId: r,
              messageId: o,
              children: e => {
                let { "aria-controls": n, "aria-expanded": l, ...i } = e;
                return (0, s.jsx)(a.Anchor, { ...i, children: t });
              },
            });
      }
      function d(e) {
        let { usernameHook: t, message: a, compact: l } = e,
          { content: d, timestamp: c, messageReference: E } = a,
          f = (0, i.default)(a),
          _ = t(f),
          T = o.default.Messages.SYSTEM_MESSAGE_CHANNEL_FOLLOW_ADD_HOOK.format({
            username: f.nick,
            usernameHook: _,
            webhookName: d,
            webhookNameHook: (e, t) =>
              (0, s.jsx)(u, { messageReference: E, children: e }, t),
          });
        return (0, s.jsx)(r.default, {
          icon: n("127067"),
          timestamp: c,
          compact: l,
          children: T,
        });
      }
    },
    548703: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let { message: t, usernameHook: r, compact: o } = e,
          u = (0, a.default)(t),
          d = r(u);
        return (0, s.jsx)(l.default, {
          icon: n("544484"),
          timestamp: t.timestamp,
          compact: o,
          children:
            i.default.Messages.SYSTEM_MESSAGE_CHANNEL_ICON_CHANGE_HOOK.format({
              username: u.nick,
              usernameHook: d,
            }),
        });
      }
    },
    859316: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340"),
        r = n("746507");
      function o(e) {
        let { message: t, usernameHook: o, compact: u, isForumPost: d } = e,
          c = (0, a.default)(t),
          E = o(c);
        return (0, s.jsx)(l.default, {
          compact: u,
          className: r.channelNameChange,
          icon: n("544484"),
          timestamp: t.timestamp,
          children: (d
            ? i.default.Messages.SYSTEM_MESSAGE_FORUM_POST_TITLE_CHANGE2
            : i.default.Messages.SYSTEM_MESSAGE_CHANNEL_NAME_CHANGE2
          ).format({
            username: c.nick,
            usernameHook: E,
            channelName: t.content,
          }),
        });
      }
    },
    427655: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("281862"),
        l = n("77078"),
        i = n("819689"),
        r = n("574073"),
        o = n("304198"),
        u = n("782340");
      function d(e) {
        let { message: t, usernameHook: d, onClickPins: c, compact: E } = e,
          f = (0, r.default)(t),
          _ = f.nick,
          T = d(f),
          I = () => {
            if (null == t.messageReference) return;
            let { channel_id: e, message_id: n } = t.messageReference;
            i.default.jumpToMessage({ channelId: e, messageId: n, flash: !0 });
          },
          m = (0, l.useRedesignIconContext)().enabled,
          N = m
            ? {
                iconNode: (0, s.jsx)(a.PinIcon, {
                  width: 18,
                  height: 18,
                  color: "currentColor",
                }),
              }
            : { icon: n("728963") };
        return (0, s.jsx)(o.default, {
          ...N,
          timestamp: t.timestamp,
          compact: E,
          children:
            null != t.messageReference
              ? null == c
                ? u.default.Messages.SYSTEM_MESSAGE_PINNED_MESSAGE_NO_CTA_FORMATTED_WITH_MESSAGE_HOOK.format(
                    { usernameHook: T, username: _, messageOnClick: I }
                  )
                : u.default.Messages.SYSTEM_MESSAGE_PINNED_MESSAGE_WITH_MESSAGE.format(
                    {
                      usernameHook: T,
                      username: _,
                      pinsActionOnClick: c,
                      messageOnClick: I,
                    }
                  )
              : null == c
                ? u.default.Messages.SYSTEM_MESSAGE_PINNED_MESSAGE_NO_CTA_FORMATTED_HOOK.format(
                    { usernameHook: T, username: _ }
                  )
                : u.default.Messages.SYSTEM_MESSAGE_PINNED_MESSAGE.format({
                    usernameHook: T,
                    username: _,
                    pinsActionOnClick: c,
                  }),
        });
      }
    },
    161225: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("574073"),
        o = n("79798"),
        u = n("93332"),
        d = n("304198"),
        c = n("250375"),
        E = n("49111"),
        f = n("988268"),
        _ = n("782340"),
        T = n("950912");
      function I(e) {
        let { message: t, compact: n, usernameHook: a } = e,
          I = (0, r.default)(t),
          m = a(I),
          {
            avatarSrc: N,
            eventHandlers: { onMouseEnter: p, onMouseLeave: S },
          } = (0, c.useAutomodAvatar)(!0),
          C =
            "" !== t.content
              ? new Date(t.content).toLocaleString(_.default.getLocale(), {
                  hour: "numeric",
                  minute: "2-digit",
                  month: "2-digit",
                  day: "2-digit",
                  year: "numeric",
                })
              : "";
        return (0, s.jsx)("div", {
          onMouseEnter: p,
          onMouseLeave: S,
          children: (0, s.jsx)(d.default, {
            className: l(T.mainContainer, { [T.compact]: n }),
            iconNode: n ? null : (0, s.jsx)(c.AutomodAvatar, { src: N }),
            iconContainerClassName: T.iconContainer,
            compact: n,
            children: (0, s.jsxs)("div", {
              className: l(T.content, { [T.compact]: n }),
              children: [
                (0, s.jsx)(u.BaseMessageHeader, {
                  message: t,
                  messageClassname: T.spanCorrection,
                  className: l(T.usernameContainer, T.spanCorrection, {
                    [T.compact]: n,
                  }),
                  username: (0, s.jsxs)("div", {
                    className: T.spanCorrection,
                    children: [
                      (0, s.jsx)(i.Text, {
                        variant: "text-md/normal",
                        color: "text-brand",
                        tag: "span",
                        className: T.username,
                        children: _.default.Messages.GUILD_AUTOMOD_USERNAME,
                      }),
                      (0, s.jsx)(o.default, {
                        type: f.BotTagTypes.SYSTEM_DM,
                        className: T.systemTag,
                      }),
                    ],
                  }),
                  compact: n,
                  showTimestamp: !0,
                }),
                (0, s.jsx)("div", {
                  className: l(T.messageContent, { [T.compact]: n }),
                  children:
                    t.type === E.MessageTypes.GUILD_INCIDENT_ALERT_MODE_ENABLED
                      ? _.default.Messages.GUILD_SERVER_LOCKDOWN_ENABLED_SYSTEM_MESSAGE_SHORT.format(
                          { username: I.nick, usernameHook: m, time: C }
                        )
                      : _.default.Messages.GUILD_SERVER_LOCKDOWN_DISABLED_SYSTEM_MESSAGE.format(
                          { username: I.nick, usernameHook: m }
                        ),
                }),
              ],
            }),
          }),
        });
      }
    },
    41163: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UIKitGuildDiscoveryDisqualified: function () {
            return o;
          },
          UIKitGuildDiscoveryRequalified: function () {
            return u;
          },
          UIKitGuildDiscoveryGracePeriodInitialWarning: function () {
            return d;
          },
          UIKitGuildDiscoveryGracePeriodFinalWarning: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("423487"),
        l = n("304198"),
        i = n("782340"),
        r = n("694252");
      function o(e) {
        let { message: t, compact: a, onClick: o } = e;
        return (0, s.jsx)(l.default, {
          icon: n("768074"),
          timestamp: t.timestamp,
          compact: a,
          contentClassName: r.messageContent,
          children:
            i.default.Messages.SYSTEM_MESSAGE_GUILD_DISCOVERY_DISQUALIFIED.format(
              { onClick: o }
            ),
        });
      }
      function u(e) {
        let { message: t, compact: a } = e;
        return (0, s.jsx)(l.default, {
          icon: n("228165"),
          timestamp: t.timestamp,
          compact: a,
          contentClassName: r.messageContent,
          children:
            i.default.Messages.SYSTEM_MESSAGE_GUILD_DISCOVERY_REQUALIFIED,
        });
      }
      function d(e) {
        let { message: t, compact: n } = e;
        return (0, s.jsx)(l.default, {
          iconNode: (0, s.jsx)(a.default, { className: r.alertIcon }),
          timestamp: t.timestamp,
          compact: n,
          contentClassName: r.messageContent,
          children:
            i.default.Messages
              .SYSTEM_MESSAGE_GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING,
        });
      }
      function c(e) {
        let { message: t, compact: n } = e;
        return (0, s.jsx)(l.default, {
          iconNode: (0, s.jsx)(a.default, { className: r.alertIcon }),
          timestamp: t.timestamp,
          compact: n,
          contentClassName: r.messageContent,
          children:
            i.default.Messages
              .SYSTEM_MESSAGE_GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING,
        });
      }
    },
    830220: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("77078"),
        r = n("574073"),
        o = n("79798"),
        u = n("93332"),
        d = n("304198"),
        c = n("250375"),
        E = n("988268"),
        f = n("782340"),
        _ = n("950912");
      function T(e) {
        let { message: t, compact: n, usernameHook: a } = e,
          T = (0, r.default)(t),
          I = a(T),
          {
            avatarSrc: m,
            eventHandlers: { onMouseEnter: N, onMouseLeave: p },
          } = (0, c.useAutomodAvatar)(!0);
        return (0, s.jsx)("div", {
          onMouseEnter: N,
          onMouseLeave: p,
          children: (0, s.jsx)(d.default, {
            className: l(_.mainContainer, { [_.compact]: n }),
            iconNode: n ? null : (0, s.jsx)(c.AutomodAvatar, { src: m }),
            iconContainerClassName: _.iconContainer,
            compact: n,
            children: (0, s.jsxs)("div", {
              className: l(_.content, { [_.compact]: n }),
              children: [
                (0, s.jsx)(u.BaseMessageHeader, {
                  message: t,
                  messageClassname: _.spanCorrection,
                  className: l(_.usernameContainer, _.spanCorrection, {
                    [_.compact]: n,
                  }),
                  username: (0, s.jsxs)("div", {
                    className: _.spanCorrection,
                    children: [
                      (0, s.jsx)(i.Text, {
                        variant: "text-md/normal",
                        color: "text-brand",
                        tag: "span",
                        className: _.username,
                        children: f.default.Messages.GUILD_AUTOMOD_USERNAME,
                      }),
                      (0, s.jsx)(o.default, {
                        type: E.BotTagTypes.SYSTEM_DM,
                        className: _.systemTag,
                      }),
                    ],
                  }),
                  compact: n,
                  showTimestamp: !0,
                }),
                (0, s.jsx)("div", {
                  className: l(_.messageContent, { [_.compact]: n }),
                  children:
                    f.default.Messages.GUILD_REPORT_FALSE_ALARM_SYSTEM_MESSAGE_SHORT.format(
                      { username: T.nick, usernameHook: I }
                    ),
                }),
              ],
            }),
          }),
        });
      }
    },
    924399: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("414456"),
        l = n.n(a),
        i = n("446674"),
        r = n("77078"),
        o = n("574073"),
        u = n("305961"),
        d = n("79798"),
        c = n("93332"),
        E = n("304198"),
        f = n("250375"),
        _ = n("988268"),
        T = n("782340"),
        I = n("950912");
      function m(e) {
        var t;
        let { message: n, compact: a, usernameHook: m, channel: N } = e,
          p = (0, i.useStateFromStores)([u.default], () =>
            u.default.getGuild(N.guild_id)
          ),
          S = (0, o.default)(n),
          C = m(S),
          {
            avatarSrc: A,
            eventHandlers: { onMouseEnter: h, onMouseLeave: g },
          } = (0, f.useAutomodAvatar)(!0);
        return (0, s.jsx)("div", {
          onMouseEnter: h,
          onMouseLeave: g,
          children: (0, s.jsx)(E.default, {
            className: l(I.mainContainer, { [I.compact]: a }),
            iconNode: a ? null : (0, s.jsx)(f.AutomodAvatar, { src: A }),
            iconContainerClassName: I.iconContainer,
            compact: a,
            children: (0, s.jsxs)("div", {
              className: l(I.content, { [I.compact]: a }),
              children: [
                (0, s.jsx)(c.BaseMessageHeader, {
                  message: n,
                  messageClassname: I.spanCorrection,
                  className: l(I.usernameContainer, I.spanCorrection, {
                    [I.compact]: a,
                  }),
                  username: (0, s.jsxs)("div", {
                    className: I.spanCorrection,
                    children: [
                      (0, s.jsx)(r.Text, {
                        variant: "text-md/normal",
                        color: "text-brand",
                        tag: "span",
                        className: I.username,
                        children: T.default.Messages.GUILD_AUTOMOD_USERNAME,
                      }),
                      (0, s.jsx)(d.default, {
                        type: _.BotTagTypes.SYSTEM_DM,
                        className: I.systemTag,
                      }),
                    ],
                  }),
                  compact: a,
                  showTimestamp: !0,
                }),
                (0, s.jsx)("div", {
                  className: l(I.messageContent, { [I.compact]: a }),
                  children:
                    T.default.Messages.GUILD_RAID_REPORT_SYSTEM_MESSAGE.format({
                      username: S.nick,
                      usernameHook: C,
                      guildName:
                        null !== (t = null == p ? void 0 : p.name) &&
                        void 0 !== t
                          ? t
                          : "",
                    }),
                }),
              ],
            }),
          }),
        });
      }
    },
    954060: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("985622"),
        i = n("304198"),
        r = n("980423"),
        o = n("782340");
      function u(e) {
        var t;
        let {
            message: n,
            channel: u,
            playingActivity: d,
            onJoinStream: c,
            usernameHook: E,
            compact: f,
          } = e,
          _ = (0, a.default)(n),
          T = null === (t = n.call) || void 0 === t ? void 0 : t.duration,
          I = E(_),
          m = o.default.Messages.SYSTEM_MESSAGE_GUILD_STREAM_ACTIVE.format({
            username: _.nick,
            activityName: null != d ? d.name : "unknown",
            onJoinStream: c,
            usernameHook: I,
          });
        return (
          null != T &&
            (m = o.default.Messages.SYSTEM_MESSAGE_GUILD_STREAM_ENDED.format({
              username: _.nick,
              duration: T.humanize(),
              channelName: u.name,
              usernameHook: I,
            })),
          (0, s.jsx)(i.default, {
            iconNode:
              null != T
                ? (0, s.jsx)(l.default, { width: 20, height: 20 })
                : (0, s.jsx)(r.default, { size: r.default.Sizes.SMALL }),
            timestamp: n.timestamp,
            compact: f,
            children: m,
          })
        );
      }
    },
    178889: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("77078"),
        l = n("129953"),
        i = n("305961"),
        r = n("304198"),
        o = n("49111"),
        u = n("782340"),
        d = n("645278");
      function c(e) {
        let t,
          { compact: c, isOwner: E, channel: f } = e,
          _ = () => {
            let e = i.default.getGuild(f.getGuildId());
            null != e &&
              ((0, a.openModalLazy)(async () => {
                let { default: t } = await n
                  .el("310688")
                  .then(n.bind(n, "310688"));
                return n =>
                  (0, s.jsx)(t, {
                    ...n,
                    guild: e,
                    channel: f,
                    source: o.InstantInviteSources.INVITE_SYSTEM_MESSAGE,
                  });
              }),
              (0, l.trackGuildInviteNotificationAction)());
          },
          T = (e, t) =>
            (0, s.jsx)(
              a.Anchor,
              { className: d.inviteLink, onClick: _, children: e },
              t
            );
        return (
          (t = c
            ? (0, s.jsx)("div", {
                className: d.inviteContent,
                children: E
                  ? u.default.Messages.SYSTEM_MESSAGE_INVITE_USERS_OWNER_COMPACT.format(
                      { inviteHook: T }
                    )
                  : u.default.Messages.SYSTEM_MESSAGE_INVITE_USERS_COMPACT.format(
                      { inviteHook: T }
                    ),
              })
            : (0, s.jsxs)("div", {
                className: d.content,
                children: [
                  (0, s.jsx)("div", {
                    className: d.inviteHeader,
                    children: E
                      ? u.default.Messages.SYSTEM_MESSAGE_INVITE_USERS_OWNER
                      : u.default.Messages.SYSTEM_MESSAGE_INVITE_USERS,
                  }),
                  (0, s.jsx)("div", {
                    className: d.inviteContent,
                    children: E
                      ? u.default.Messages
                          .SYSTEM_MESSAGE_INVITE_USERS_DESCRIPTION_OWNER
                      : u.default.Messages
                          .SYSTEM_MESSAGE_INVITE_USERS_DESCRIPTION,
                  }),
                  (0, s.jsx)(a.Button, {
                    onClick: _,
                    size: a.Button.Sizes.SMALL,
                    className: d.inviteButton,
                    children:
                      u.default.Messages.SYSTEM_MESSAGE_INVITE_USERS_BUTTON,
                  }),
                ],
              })),
          (0, s.jsx)(r.default, {
            className: c ? d.compact : d.inviteContent,
            iconNode: c
              ? null
              : (0, s.jsx)("img", {
                  alt: "",
                  src: n("190368"),
                  width: 40,
                  height: 40,
                }),
            iconContainerClassName: d.iconContainer,
            compact: c,
            children: t,
          })
        );
      }
    },
    52538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let {
            message: t,
            otherUsername: r,
            usernameHook: o,
            otherUsernameHook: u,
            compact: d,
          } = e,
          { nick: c } = (0, a.default)(t),
          E = o(),
          f = u(),
          _ = i.default.Messages.SYSTEM_MESSAGE_RECIPIENT_ADD_HOOK.format({
            username: c,
            usernameHook: E,
            otherUsername: r,
            otherUsernameHook: f,
          });
        return (0, s.jsx)(l.default, {
          icon: n("127067"),
          timestamp: t.timestamp,
          compact: d,
          children: _,
        });
      }
    },
    879033: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let t,
          {
            message: r,
            usernameHook: o,
            otherUser: u,
            otherUsernameHook: d,
            compact: c,
            channel: E,
          } = e,
          f = (0, a.default)(r),
          _ = f.nick,
          T = o(f),
          I = (0, a.useNullableUserAuthor)(u, E);
        if (null != I && null != d) {
          let e = d(I);
          t = i.default.Messages.SYSTEM_MESSAGE_RECIPIENT_REMOVE_HOOK.format({
            username: _,
            usernameHook: T,
            otherUsername: I.nick,
            otherUsernameHook: e,
          });
        } else
          t =
            i.default.Messages.SYSTEM_MESSAGE_RECIPIENT_REMOVE_SELF_HOOK.format(
              { username: _, usernameHook: T }
            );
        return (0, s.jsx)(l.default, {
          icon: n("226315"),
          timestamp: r.timestamp,
          compact: c,
          children: t,
        });
      }
    },
    523257: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("228427"),
        i = n("304198"),
        r = n("782340"),
        o = n("714478");
      function u(e) {
        let { message: t, compact: n, usernameHook: u } = e,
          d = (0, a.default)(t),
          c = u(d),
          E = r.default.Messages.SYSTEM_MESSAGE_STAGE_END_HOOK.format({
            username: d.nick,
            usernameHook: c,
            topic: t.content,
          });
        return (0, s.jsx)(i.default, {
          className: o.stageSystemMessage,
          iconNode: (0, s.jsx)(l.default, { height: 24, width: 24 }),
          iconContainerClassName: o.iconContainer,
          timestamp: t.timestamp,
          compact: n,
          children: E,
        });
      }
    },
    14733: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("711486"),
        i = n("304198"),
        r = n("782340"),
        o = n("714478");
      function u(e) {
        let { message: t, compact: n, usernameHook: u } = e,
          d = (0, a.default)(t),
          c = u(d),
          E = r.default.Messages.SYSTEM_MESSAGE_STAGE_RAISE_HAND_HOOK.format({
            username: d.nick,
            usernameHook: c,
          });
        return (0, s.jsx)(i.default, {
          className: o.stageSystemMessage,
          iconNode: (0, s.jsx)(l.default, { height: 24, width: 24 }),
          iconContainerClassName: o.iconContainer,
          timestamp: t.timestamp,
          compact: n,
          children: E,
        });
      }
    },
    513448: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("277174"),
        i = n("304198"),
        r = n("782340"),
        o = n("714478");
      function u(e) {
        let { message: t, compact: n, usernameHook: u } = e,
          d = (0, a.default)(t),
          c = u(d),
          E = r.default.Messages.SYSTEM_MESSAGE_STAGE_SPEAKER_HOOK.format({
            username: d.nick,
            usernameHook: c,
          });
        return (0, s.jsx)(i.default, {
          className: o.stageSystemMessage,
          iconNode: (0, s.jsx)(l.default, { height: 24, width: 24 }),
          iconContainerClassName: o.iconContainer,
          timestamp: t.timestamp,
          compact: n,
          children: E,
        });
      }
    },
    606099: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("574073"),
        i = n("228427"),
        r = n("304198"),
        o = n("782340"),
        u = n("714478");
      function d(e) {
        let { message: t, compact: n, usernameHook: d } = e,
          c = (0, l.default)(t),
          E = d(c),
          f = o.default.Messages.SYSTEM_MESSAGE_STAGE_START_HOOK.format({
            username: c.nick,
            usernameHook: E,
            topic: t.content,
          });
        return (0, s.jsx)(r.default, {
          className: u.stageSystemMessage,
          iconNode: (0, s.jsx)(i.default, {
            height: 24,
            width: 24,
            color: a.default.unsafe_rawColors.GREEN_360.css,
          }),
          iconContainerClassName: u.iconContainer,
          timestamp: t.timestamp,
          compact: n,
          children: f,
        });
      }
    },
    151218: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("228427"),
        i = n("304198"),
        r = n("782340"),
        o = n("714478");
      function u(e) {
        let { message: t, compact: n, usernameHook: u } = e,
          d = (0, a.default)(t),
          c = u(d),
          E = r.default.Messages.SYSTEM_MESSAGE_STAGE_TOPIC_HOOK.format({
            username: d.nick,
            usernameHook: c,
            topic: t.content,
          });
        return (0, s.jsx)(i.default, {
          className: o.stageSystemMessage,
          iconNode: (0, s.jsx)(l.default, { height: 24, width: 24 }),
          iconContainerClassName: o.iconContainer,
          timestamp: t.timestamp,
          compact: n,
          children: E,
        });
      }
    },
    423509: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("446674"),
        l = n("574073"),
        i = n("42203"),
        r = n("959097"),
        o = n("304198"),
        u = n("782340"),
        d = n("291391");
      function c(e) {
        var t;
        let {
            message: n,
            compact: c,
            usernameHook: E,
            onClickThread: f,
            onClickViewThreads: _,
            onContextMenuThread: T,
          } = e,
          I = (0, l.default)(n),
          m = E(I),
          N = (0, a.useStateFromStores)([i.default], () => {
            var e;
            return i.default.getChannel(
              null === (e = n.messageReference) || void 0 === e
                ? void 0
                : e.channel_id
            );
          }),
          p = u.default.Messages.SYSTEM_MESSAGE_THREAD_CREATED.format({
            actorName: I.nick,
            actorHook: m,
            threadName:
              null !== (t = null == N ? void 0 : N.name) && void 0 !== t
                ? t
                : n.content,
            threadOnClick: { onClick: f, onContextMenu: T },
            viewThreadsOnClick: _,
          });
        return (0, s.jsx)(o.default, {
          iconNode: (0, s.jsx)(r.default, { className: d.icon }),
          timestamp: n.timestamp,
          compact: c,
          children: p,
        });
      }
    },
    80301: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let {
            message: t,
            channel: r,
            targetUser: o,
            actorUsernameHook: u,
            targetUsernameHook: d,
            compact: c,
          } = e,
          E = (0, a.default)(t),
          f = (0, a.useNullableUserAuthor)(o, r),
          _ = u(E),
          T = d(null != f ? f : void 0),
          I = i.default.Messages.SYSTEM_MESSAGE_THREAD_MEMBER_ADD.format({
            actorName: E.nick,
            actorHook: _,
            targetName: null == f ? void 0 : f.nick,
            targetHook: T,
          });
        return (0, s.jsx)(l.default, {
          icon: n("127067"),
          timestamp: t.timestamp,
          compact: c,
          children: I,
        });
      }
    },
    210977: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("782340");
      function r(e) {
        let {
            message: t,
            channel: r,
            targetUser: o,
            actorUsernameHook: u,
            targetUsernameHook: d,
            compact: c,
          } = e,
          E = (0, a.default)(t),
          f = (0, a.useNullableUserAuthor)(o, r),
          _ = u(E),
          T = d(null != f ? f : void 0),
          I = i.default.Messages.SYSTEM_MESSAGE_THREAD_MEMBER_REMOVE.format({
            actorName: E.nick,
            actorHook: _,
            targetName: null == f ? void 0 : f.nick,
            targetHook: T,
          });
        return (0, s.jsx)(l.default, {
          icon: n("226315"),
          timestamp: t.timestamp,
          compact: c,
          children: I,
        });
      }
    },
    512622: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("959097"),
        l = n("304198"),
        i = n("782340"),
        r = n("334524");
      function o(e) {
        let { message: t, compact: n } = e;
        return (0, s.jsx)(l.default, {
          iconNode: (0, s.jsx)(a.default, { className: r.icon }),
          timestamp: t.timestamp,
          compact: n,
          children: i.default.Messages.THREAD_STARTER_MESSAGE_NOT_LOADED,
        });
      }
    },
    874612: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("574073"),
        l = n("304198"),
        i = n("700097");
      function r(e) {
        let { message: t, usernameHook: r, compact: o } = e,
          u = (0, a.default)(t),
          d = r(u),
          c = i.default.getSystemMessageUserJoin(t.id),
          E = c.format({ username: u.nick, usernameHook: d });
        return (0, s.jsx)(l.default, {
          icon: n("127067"),
          timestamp: t.timestamp,
          compact: o,
          children: E,
        });
      }
    },
    703712: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EasterEggPosition: function () {
            return a;
          },
          EasterEggAnimation: function () {
            return F;
          },
          default: function () {
            return w;
          },
        }),
        n("222007");
      var s,
        a,
        l,
        i,
        r = n("37983"),
        o = n("884691"),
        u = n("414456"),
        d = n.n(u),
        c = n("516555"),
        E = n("748820"),
        f = n("617258"),
        _ = n("769846"),
        T = n("77078"),
        I = n("79112"),
        m = n("526887"),
        N = n("574073"),
        p = n("28007"),
        S = n("367594"),
        C = n("273108"),
        A = n("118503"),
        h = n("659186"),
        g = n("304198"),
        M = n("427459"),
        O = n("49111"),
        R = n("782340"),
        L = n("363790");
      ((l = s || (s = {})).ENTER = "enter"),
        (l.CONFETTI = "confetti"),
        (l.LEAF_PEEL = "leaf_peel"),
        (l.LEAF_FALL = "leaf_fall"),
        (l.EXIT = "exit");
      let v = {
        enter: { BEG: 0, END: 22 },
        confetti: { BEG: 23, END: 119 },
        leaf_peel: { BEG: 120, END: 160 },
        leaf_fall: { BEG: 161, END: 163 },
        exit: { BEG: 164, END: 200 },
      };
      ((i = a || (a = {})).TOP_LEFT = "TOP_LEFT"),
        (i.TOP_RIGHT = "TOP_RIGHT"),
        (i.BOTTOM_LEFT = "BOTTOM_LEFT"),
        (i.BOTTOM_RIGHT = "BOTTOM_RIGHT");
      let P = ["TOP_LEFT", "TOP_RIGHT"],
        D = (0, f.cssValueToNumber)(
          _.default.USER_PREMIUM_GUILD_SUBSCRIPTION_EASTER_EGG_SIZE
        ),
        x = { leafPosition: { x: 85, y: 125 }, leafRotationDirection: 1 },
        y = Object.freeze({
          TOP_LEFT: {
            getConfettiPosition: e => ({ x: e - 11, y: e - 125 }),
            confettiVelocityDirection: { x: 1, y: 1 },
            leafPosition: { x: 100, y: 144 },
            leafRotationDirection: 1,
          },
          TOP_RIGHT: {
            getConfettiPosition: e => ({ x: 11, y: e - 125 }),
            confettiVelocityDirection: { x: -1, y: 1 },
            leafPosition: { x: 90, y: 144 },
            leafRotationDirection: -1,
          },
          BOTTOM_LEFT: {
            ...x,
            getConfettiPosition: e => ({ x: e - 11, y: 125 }),
            confettiVelocityDirection: { x: 1, y: -1 },
          },
          BOTTOM_RIGHT: {
            ...x,
            getConfettiPosition: e => ({ x: 11, y: 125 }),
            confettiVelocityDirection: { x: -1, y: -1 },
          },
        }),
        U = "falling-leaf",
        j = ["#61D5B2"],
        b = n("761545"),
        G = n("689888"),
        B = [b, G];
      function k() {
        return n
          .el("510370")
          .then(n.t.bind(n, "510370", 19))
          .then(e => {
            let { default: t } = e;
            return t;
          });
      }
      function F(e) {
        let { onAnimationComplete: t, onClick: n, position: s, size: l } = e,
          i = o.useRef(null),
          [u, f] = o.useState(null),
          [_] = o.useState(
            null != s
              ? s
              : (function () {
                  let e = Math.floor(Math.random() * Object.keys(a).length);
                  switch (e) {
                    case 0:
                      return "TOP_LEFT";
                    case 2:
                      return "TOP_RIGHT";
                    case 3:
                      return "BOTTOM_LEFT";
                    default:
                      return "BOTTOM_RIGHT";
                  }
                })()
          ),
          { createMultipleConfettiAt: I, confettiCanvas: N } = o.useContext(
            m.ConfettiCannonContext
          ),
          [p, S] = o.useState(null),
          A = (0, c.useConfettiCannon)(N, p),
          h = (function (e, t) {
            if (null == e) return "enter";
            switch (e) {
              case "enter":
                return "confetti";
              case "confetti":
                if (P.includes(t)) return "leaf_peel";
                return "exit";
              case "leaf_peel":
                return "leaf_fall";
              case "leaf_fall":
                return "exit";
              case "exit":
                return "enter";
            }
          })(u, _),
          g = P.includes(_),
          M = g && "exit" === u,
          O = o.useCallback(e => {
            f(e);
          }, []),
          R = o.useCallback(() => {
            "exit" === u && (null == t || t());
          }, [t, u]),
          x = o.useCallback(e => {
            i.current = e;
          }, []);
        return (
          o.useEffect(() => {
            if ("confetti" === u) {
              let { confettiVelocityDirection: e } = y[_],
                t = (function (e, t) {
                  let n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : D,
                    s = null == e ? void 0 : e.getBoundingClientRect();
                  if (null == s) return { x: 0, y: 0 };
                  let a = y[t],
                    l = a.getConfettiPosition(n);
                  return { x: s.left + l.x, y: s.top + l.y };
                })(i.current, _, l);
              I(t.x, t.y, {
                velocity: {
                  type: "static-random",
                  minValue: { x: 10 * e.x, y: 80 * e.y },
                  maxValue: { x: 80 * e.x, y: 180 * e.y },
                },
              });
            }
          }, [I, _, u, l]),
          o.useEffect(() => {
            if (g && "leaf_fall" === u) {
              let e = y[_].leafRotationDirection;
              A.createConfetti(
                {
                  id: "".concat(U, "-").concat((0, E.v4)()),
                  position: {
                    type: "static",
                    value: (function (e, t) {
                      let n = null == e ? void 0 : e.getBoundingClientRect();
                      if (null == n) return { x: 0, y: 0 };
                      let s = y[t];
                      return {
                        x: n.left + s.leafPosition.x,
                        y: n.top + s.leafPosition.y,
                      };
                    })(i.current, _),
                  },
                  size: { type: "static", value: 45 },
                  rotation: {
                    type: "linear-random",
                    minValue: { x: 0, y: 0, z: 0 },
                    maxValue: { x: 0, y: 0, z: 0 },
                    minAddValue: { x: 0, y: 0, z: 8 * e },
                    maxAddValue: { x: 0, y: 0, z: 12 * e },
                  },
                },
                { sprite: "TOP_LEFT" === _ ? b : G }
              );
            }
          }, [g, A, _, u]),
          (0, r.jsxs)(r.Fragment, {
            children: [
              (0, r.jsx)(c.SpriteCanvas, {
                ref: S,
                sprites: B,
                colors: j,
                spriteWidth: 45,
                spriteHeight: 45,
              }),
              (0, r.jsx)(T.Clickable, {
                onClick: n,
                className: d(L.easterEggAnimationClickTarget, {
                  [L.easterEggAnimationClickTargetTopLeft]: "TOP_LEFT" === _,
                  [L.easterEggAnimationClickTargetTopRight]: "TOP_RIGHT" === _,
                  [L.easterEggAnimationClickTargetBottomLeft]:
                    "BOTTOM_LEFT" === _,
                  [L.easterEggAnimationClickTargetBottomRight]:
                    "BOTTOM_RIGHT" === _,
                }),
                children: (0, r.jsx)(C.default, {
                  animationRef: x,
                  className: d(L.easterEggAnimation, {
                    [L.easterEggAnimationHideLeaf]: M,
                  }),
                  nextScene: h,
                  sceneSegments: v,
                  onScenePlay: O,
                  onSceneComplete: R,
                  importData: k,
                  pauseWhileUnfocused: !1,
                }),
              }),
            ],
          })
        );
      }
      function w(e) {
        let t,
          {
            message: n,
            compact: s,
            guild: a,
            usernameHook: l,
            onClickMessage: i,
          } = e,
          u = (function (e) {
            switch (e.type) {
              case O.MessageTypes.GUILD_BOOST_TIER_1:
                return O.BoostedGuildTiers.TIER_1;
              case O.MessageTypes.GUILD_BOOST_TIER_2:
                return O.BoostedGuildTiers.TIER_2;
              case O.MessageTypes.GUILD_BOOST_TIER_3:
                return O.BoostedGuildTiers.TIER_3;
            }
            return null;
          })(n),
          d = (0, S.default)(n),
          { createMultipleConfettiAt: c, addClickListener: E } = o.useContext(
            m.ConfettiCannonContext
          ),
          [f, _] = o.useState(!1),
          C = o.useRef(null),
          { reducedMotion: v } = o.useContext(
            T.AccessibilityPreferencesContext
          ),
          P = (0, N.getMessageAuthor)(n),
          D = P.nick,
          x = l(P);
        t =
          null == u || null == a
            ? d > 1
              ? R.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED_MANY_HOOK.format(
                  { username: D, usernameHook: x, numSubscriptions: d }
                )
              : R.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED_HOOK.format(
                  { username: D, usernameHook: x }
                )
            : d > 1
              ? R.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED_MANY_ACHIEVED_TIER_HOOK.format(
                  {
                    username: D,
                    usernameHook: x,
                    numSubscriptions: d,
                    guildName: a.name,
                    newTierName: (0, M.getTierName)(u),
                  }
                )
              : R.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED_ACHIEVED_TIER_HOOK.format(
                  {
                    username: D,
                    usernameHook: x,
                    guildName: a.name,
                    newTierName: (0, M.getTierName)(u),
                  }
                );
        let y = o.useCallback(() => {
            if (!v.enabled) {
              if (f || 0 !== Math.floor(50 * Math.random())) {
                var e;
                let t =
                  null === (e = C.current) || void 0 === e
                    ? void 0
                    : e.getBoundingClientRect();
                if (null != t) c(t.left + t.width / 2, t.top + t.height / 2);
              } else _(!0);
            }
          }, [c, v, f]),
          j = o.useCallback(() => {
            _(!1);
          }, []),
          b = o.useCallback(() => {
            (0, p.updatePoggermodeSettings)({ settingsVisible: !0 }),
              I.default.open(O.UserSettingsSections.POGGERMODE),
              _(!1);
          }, []),
          G = o.useCallback(
            (e, t) => {
              (null == t ? void 0 : t.id.startsWith(U)) && b();
            },
            [b]
          );
        o.useEffect(() => {
          let e = E(G);
          return e;
        });
        let B = (0, r.jsx)(T.Clickable, {
          className: L.iconWrapper,
          innerRef: C,
          onClick: i,
          children: (0, r.jsx)(A.default, {
            className: L.icon,
            onMouseEnter: y,
          }),
        });
        return (0, r.jsxs)(g.default, {
          iconNode: B,
          timestamp: n.timestamp,
          compact: s,
          children: [
            (0, r.jsx)("div", {
              onClick: i,
              className: L.message,
              children: t,
            }),
            f
              ? (0, r.jsx)(h.default, {
                  children: (0, r.jsx)("div", {
                    className: L.cannonWrapper,
                    children: (0, r.jsx)(F, {
                      onAnimationComplete: j,
                      onClick: b,
                    }),
                  }),
                })
              : null,
          ],
        });
      }
    },
    980423: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LiveIndicatorLooks: function () {
            return a;
          },
          LiveIndicatorShapes: function () {
            return f;
          },
          default: function () {
            return T;
          },
        });
      var s,
        a,
        l = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        o = n("669491"),
        u = n("956089"),
        d = n("782340"),
        c = n("895925");
      ((s = a || (a = {})).RED = "RED"), (s.GRAY = "GRAY");
      let E = { LARGE: c.liveLarge, SMALL: c.liveSmall },
        f = {
          [u.BadgeShapes.ROUND]: c.liveShapeRound,
          [u.BadgeShapes.ROUND_LEFT]: c.liveShapeRoundLeft,
          [u.BadgeShapes.ROUND_RIGHT]: c.liveShapeRoundRight,
          [u.BadgeShapes.SQUARE]: "",
        };
      function _(e) {
        let {
          className: t,
          style: n,
          shape: s = u.BadgeShapes.ROUND,
          look: a = "RED",
          size: i = E.LARGE,
        } = e;
        return "RED" === a
          ? (0, l.jsx)(u.TextBadge, {
              text: d.default.Messages.LIVE,
              className: r(t, c.live, i),
              color: o.default.unsafe_rawColors.RED_400.css,
              shape: f[s],
              style: n,
            })
          : (0, l.jsx)(u.TextBadge, {
              text: d.default.Messages.LIVE,
              className: r(t, c.live, i, c.grey),
              disableColor: !0,
              shape: f[s],
              style: n,
            });
      }
      (_.Looks = a), (_.Sizes = E);
      var T = _;
    },
    883029: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getDescriptiveInviteError: function () {
            return o;
          },
          getInviteError: function () {
            return u;
          },
        });
      var s = n("697218"),
        a = n("701909"),
        l = n("719923"),
        i = n("49111"),
        r = n("782340");
      function o(e) {
        switch (e) {
          case i.AbortCodes.TOO_MANY_USER_GUILDS:
            let t = s.default.getCurrentUser(),
              n =
                l.default.canUseIncreasedGuildCap(t) ||
                (null == t ? void 0 : t.isStaff()),
              a = n ? i.MAX_USER_GUILDS_PREMIUM : i.MAX_USER_GUILDS;
            return {
              title: r.default.Messages.TOO_MANY_USER_GUILDS_TITLE_2.format({
                quantity: a,
              }),
              description: r.default.Messages.TOO_MANY_USER_GUILDS_DESCRIPTION,
            };
          case i.AbortCodes.GUILD_AT_CAPACITY:
            return {
              title: r.default.Messages.SERVER_IS_CURRENTLY_FULL,
              description: r.default.Messages.PLEASE_TRY_AGAIN_LATER,
            };
          case i.AbortCodes.GUILD_JOIN_INVITE_LIMITED_ACCESS:
            return {
              title: r.default.Messages.GUILD_LIMITED_ACCESS_INFO_MODAL_HEADING,
              description: r.default.Messages.PLEASE_TRY_AGAIN_LATER,
            };
          default:
            return null;
        }
      }
      function u(e) {
        switch (e) {
          case i.AbortCodes.TOO_MANY_USER_GUILDS:
            return r.default.Messages.TOO_MANY_USER_GUILDS_DESCRIPTION;
          case i.AbortCodes.GUILD_AT_CAPACITY:
            return r.default.Messages.MAX_GUILD_MEMBERS_REACHED_ERROR;
          case i.AbortCodes.INVALID_COUNTRY_CODE:
            return r.default.Messages.INVALID_COUNTRY_CODE;
          case i.AbortCodes.INVALID_CANNOT_FRIEND_SELF:
            return r.default.Messages.INVALID_CANNOT_FRIEND_SELF;
          case i.AbortCodes.INVITES_DISABLED:
            return r.default.Messages.INVITES_DISABLED_MODAL_DESCRIPTION.format(
              {
                articleLink: a.default.getArticleURL(
                  i.HelpdeskArticles.INVITE_DISABLED
                ),
              }
            );
          default:
            return r.default.Messages.INVITE_MODAL_ERROR_DEFAULT;
        }
      }
    },
    882941: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getSKUIdFromURL: function () {
            return E;
          },
          canUserInstall: function () {
            return f;
          },
          getReadablePreorderReleaseDate: function () {
            return T;
          },
        }),
        n("781738"),
        n("222007");
      var s = n("866227"),
        a = n.n(s),
        l = n("803182"),
        i = n("773336"),
        r = n("271560"),
        o = n("49111");
      n("782340");
      let u = {},
        d = {},
        c = Object.freeze({ ALL: -1, ...o.SKUGenres });
      function E(e) {
        let t = (0, l.matchPath)(e, {
          path: o.Routes.APPLICATION_STORE_LISTING_SKU(":skuId", ":slug"),
        });
        return null != t ? t.params.skuId : null;
      }
      function f(e) {
        let t = (0, r.nativePlatformTypeToSKUOperatingSystem)(
          (0, i.getPlatform)()
        );
        return (
          e.type === o.SKUTypes.DURABLE_PRIMARY &&
          null != t &&
          e.supportedOperatingSystems.includes(t)
        );
      }
      Object.keys(c).forEach(e => {
        let t = e.toLowerCase().replace(/_/g, "-"),
          n = c[e];
        (u[t] = n), (d[n] = t);
      });
      let _ = [
        ["YYYY-MM-DD", "MMMM DD, Y"],
        ["YYYY-MM", "MMMM Y"],
        ["MM-DD", "MMMM DD"],
        ["MM", "MMMM"],
        ["YYYY", "Y"],
      ];
      function T(e) {
        let { preorderReleaseAt: t, preorderApproximateReleaseDate: n } = e;
        if (null != t) return t.format("MMMM DD");
        if (null == n) return null;
        for (let e = 0; e < _.length; e++) {
          let [t, s] = _[e],
            l = a(n, t, !0);
          if (l.isValid()) return l.format(s);
        }
        return n;
      }
    },
    380186: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getSubscriptionSKUs: function () {
            return f;
          },
          subscriptionCanSwitchImmediately: function () {
            return _;
          },
          subscriptionCanDowngrade: function () {
            return T;
          },
          getOrFetchSubscriptionPlan: function () {
            return I;
          },
          getSubscriptionPauseDurations: function () {
            return m;
          },
        }),
        n("222007"),
        n("424973"),
        n("884691");
      var s = n("627445"),
        a = n.n(s),
        l = n("866227"),
        i = n.n(l),
        r = n("216721");
      n("446674");
      var o = n("775433"),
        u = n("10514"),
        d = n("719923"),
        c = n("49111"),
        E = n("646718");
      function f(e) {
        return e.items
          .map(e => {
            let t = u.default.get(e.planId);
            return a(null != t, "Unable to fetch plan"), t;
          })
          .map(e => e.skuId);
      }
      function _(e, t, n) {
        let s = e.getCurrentSubscriptionPlanIdForGroup(n);
        return (
          (e.type === c.SubscriptionTypes.PREMIUM && null == s) ||
          (a(null != s, "Current subscription has no plan in group"),
          a(
            !(
              s === E.SubscriptionPlans.PREMIUM_YEAR_TIER_1 &&
              t === E.SubscriptionPlans.PREMIUM_MONTH_TIER_2
            ),
            "Unexpected plan switch"
          ),
          n.indexOf(s) < n.indexOf(t))
        );
      }
      function T(e, t, n) {
        return !_(e, t, n);
      }
      function I(e, t) {
        let n = u.default.get(e);
        if (null == n) {
          let n = E.SubscriptionPlanInfo[e];
          a(null != n, "Missing hardcoded subscriptionPlan: ".concat(e));
          let s = (0, d.castPremiumSubscriptionAsSkuId)(n.skuId);
          !u.default.isFetchingForSKU(s) &&
            (0, o.fetchSubscriptionPlansForSKU)(s, t);
        }
        return n;
      }
      function m(e) {
        let t = Object.keys(r.PauseDuration).filter(e => isNaN(Number(e)));
        if (e.status !== c.SubscriptionStatusTypes.PAUSED)
          return { durations: t, currentDaysPaused: 0 };
        if (null == e.pauseEndsAt)
          return { durations: [], currentDaysPaused: 0 };
        {
          let n = i(e.currentPeriodStart),
            s = i(e.pauseEndsAt),
            a = Math.round(s.diff(n, "days", !0)),
            l = [];
          for (let e of t) {
            let t = r.PauseDuration[e];
            t > a && l.push(e);
          }
          return { durations: l, currentDaysPaused: a };
        }
      }
    },
    700097: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        });
      var s = n("933805"),
        a = n("277683"),
        l = n("843257"),
        i = n("692038"),
        r = n("574073"),
        o = n("846564"),
        u = n("950576"),
        d = n("719926"),
        c = n("271938"),
        E = n("42203"),
        f = n("305961"),
        _ = n("697218"),
        T = n("387111"),
        I = n("299039"),
        m = n("49111"),
        N = n("782340");
      let p = {
          "234395307759108106": "https://groovy.bot/commands",
          "365975655608745985": "https://www.pokecord.com/getting-started",
          512412940897484800: "http://jameslantz.net/smilebot",
        },
        S = () => [
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_001_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_002_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_003_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_004_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_005_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_006_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_007_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_008_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_009_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_010_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_011_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_012_HOOK,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_013_HOOK,
        ],
        C = () => [
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_001,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_002,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_003,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_004,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_005,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_006,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_007,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_008,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_009,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_010,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_011,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_012,
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_JOIN_013,
        ];
      function A(e) {
        let t = C(),
          n = I.default.extractTimestamp(e) % t.length;
        return t[n];
      }
      function h(e) {
        return (0, s.astToString)(
          N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED.astFormat({
            username: e,
            usernameOnClick: m.NOOP,
          })
        );
      }
      function g(e, t) {
        let n = E.default.getChannel(t);
        if (null == n) return h(e);
        let a = f.default.getGuild(n.getGuildId());
        return null == a
          ? h(e)
          : (0, s.astToString)(
              N.default.Messages.SYSTEM_MESSAGE_GUILD_MEMBER_SUBSCRIBED.astFormat(
                { username: e, usernameOnClick: m.NOOP }
              )
            );
      }
      var M = {
        stringify: function (e, t) {
          var n, I, p, S;
          let C = null === (n = e.mentions) || void 0 === n ? void 0 : n[0],
            M =
              null != C && "string" != typeof C
                ? _.default.getUser(C.id)
                : void 0,
            O = e.channel_id,
            R = T.default.getName(null, O, e.author);
          switch (e.type) {
            case m.MessageTypes.RECIPIENT_ADD:
              if (null == M) return;
              return (0, s.astToString)(
                N.default.Messages.SYSTEM_MESSAGE_RECIPIENT_ADD.astFormat({
                  username: R,
                  usernameOnClick: m.NOOP,
                  otherUsername: T.default.getName(null, O, M),
                  otherUsernameOnClick: m.NOOP,
                })
              );
            case m.MessageTypes.RECIPIENT_REMOVE:
              if (null == M) return;
              let L = e.author;
              if (null == L || L.id === M.id)
                return (0, s.astToString)(
                  N.default.Messages.SYSTEM_MESSAGE_RECIPIENT_REMOVE_SELF.astFormat(
                    { username: R, usernameOnClick: m.NOOP }
                  )
                );
              return (0, s.astToString)(
                N.default.Messages.SYSTEM_MESSAGE_RECIPIENT_REMOVE.astFormat({
                  username: R,
                  usernameOnClick: m.NOOP,
                  otherUsername: T.default.getName(null, O, M),
                  otherUsernameOnClick: m.NOOP,
                })
              );
            case m.MessageTypes.CALL:
              let { call: v } = e;
              if (null != v && -1 === v.participants.indexOf(c.default.getId()))
                return (0, s.astToString)(
                  N.default.Messages.SYSTEM_MESSAGE_CALL_STARTED.astFormat({
                    username: R,
                    usernameOnClick: m.NOOP,
                  })
                );
              return;
            case m.MessageTypes.CHANNEL_NAME_CHANGE:
              return (0, s.astToString)(
                (t.isForumPost()
                  ? N.default.Messages.SYSTEM_MESSAGE_FORUM_POST_TITLE_CHANGE
                  : N.default.Messages.SYSTEM_MESSAGE_CHANNEL_NAME_CHANGE
                ).astFormat({
                  username: R,
                  usernameOnClick: m.NOOP,
                  channelName: e.content,
                })
              );
            case m.MessageTypes.CHANNEL_ICON_CHANGE:
              return (0, s.astToString)(
                N.default.Messages.SYSTEM_MESSAGE_CHANNEL_ICON_CHANGE.astFormat(
                  { username: R, usernameOnClick: m.NOOP }
                )
              );
            case m.MessageTypes.CHANNEL_PINNED_MESSAGE:
              return (0, s.astToString)(
                N.default.Messages.SYSTEM_MESSAGE_PINNED_MESSAGE_NO_CTA.astFormat(
                  { username: R, usernameOnClick: m.NOOP }
                )
              );
            case m.MessageTypes.USER_JOIN:
              return (0, s.astToString)(
                A(e.id).astFormat({ username: R, usernameOnClick: m.NOOP })
              );
            case m.MessageTypes.GUILD_BOOST:
              return h(R);
            case m.MessageTypes.GUILD_BOOST_TIER_1:
            case m.MessageTypes.GUILD_BOOST_TIER_2:
            case m.MessageTypes.GUILD_BOOST_TIER_3:
              return g(R, O);
            case m.MessageTypes.GUILD_INVITE_REMINDER:
              return N.default.Messages.SYSTEM_MESSAGE_INVITE_NOTIFICATION;
            case m.MessageTypes.THREAD_STARTER_MESSAGE:
              return N.default.Messages.THREAD_STARTER_MESSAGE_NOTIFICATION.format(
                { username: R, threadName: t.name }
              );
            case m.MessageTypes.ROLE_SUBSCRIPTION_PURCHASE:
              if (e instanceof d.default) return null;
              return (0, s.astToString)(
                (0, l.getRoleSubscriptionPurchaseSystemMessageContentMobile)({
                  username: R,
                  guildId: t.guild_id,
                  roleSubscriptionData: e.role_subscription_data,
                })
              );
            case m.MessageTypes.PURCHASE_NOTIFICATION:
              if (
                e instanceof d.default ||
                (null === (p = e.purchase_notification) || void 0 === p
                  ? void 0
                  : null === (I = p.guild_product_purchase) || void 0 === I
                    ? void 0
                    : I.product_name) == null
              )
                return null;
              return (0, s.astToString)(
                (0, a.getGuildProductPurchaseSystemMessageContentMobile)({
                  username: R,
                  productName:
                    e.purchase_notification.guild_product_purchase.product_name,
                })
              );
            case m.MessageTypes.GUILD_APPLICATION_PREMIUM_SUBSCRIPTION:
              if (e instanceof d.default) return null;
              let P = (0, r.getMessageAuthor)((0, i.createMessageRecord)(e));
              return (0, s.astToString)(
                (0, o.getApplicationSubscriptionSystemMessageASTContent)({
                  application: e.application,
                  username: P.nick,
                })
              );
            case m.MessageTypes.PRIVATE_CHANNEL_INTEGRATION_ADDED:
              if (e instanceof d.default) return null;
              return (0, s.astToString)(
                (0, u.getPrivateChannelIntegrationAddedSystemMessageASTContent)(
                  {
                    application: e.application,
                    username: (0, r.getMessageAuthor)(
                      (0, i.createMessageRecord)(e)
                    ).nick,
                  }
                )
              );
            case m.MessageTypes.PRIVATE_CHANNEL_INTEGRATION_REMOVED:
              if (e instanceof d.default) return null;
              return (0, s.astToString)(
                (0,
                u.getPrivateChannelIntegrationRemovedSystemMessageASTContent)({
                  application: e.application,
                  username: (0, r.getMessageAuthor)(
                    (0, i.createMessageRecord)(e)
                  ).nick,
                })
              );
            case m.MessageTypes.AUTO_MODERATION_ACTION:
              if (
                null === (S = e.embeds) || void 0 === S
                  ? void 0
                  : S.some(e => {
                      let { type: t } = e;
                      return (
                        t === m.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION
                      );
                    })
              )
                return (function (e) {
                  let t = E.default.getChannel(e);
                  if (null == t) return null;
                  let n = f.default.getGuild(t.getGuildId());
                  return null == n
                    ? null
                    : (0, s.astToString)(
                        N.default.Messages.GUILD_SERVER_RAID_ALERT_NOTIFICATION.astFormat(
                          { guildName: n.name }
                        )
                      );
                })(O);
              return e.content;
            case m.MessageTypes.GUILD_INCIDENT_ALERT_MODE_ENABLED:
              return (function (e, t, n) {
                let a = E.default.getChannel(t);
                if (null == a) return null;
                let l = f.default.getGuild(a.getGuildId());
                return null == l
                  ? null
                  : (0, s.astToString)(
                      N.default.Messages.GUILD_SERVER_LOCKDOWN_ENABLED_NOTIFICATION.astFormat(
                        {
                          username: e,
                          guildName: l.name,
                          time:
                            "" !== n
                              ? new Date(n).toLocaleString(
                                  N.default.getLocale(),
                                  { hour: "numeric", minute: "2-digit" }
                                )
                              : "",
                        }
                      )
                    );
              })(R, O, e.content);
            case m.MessageTypes.GUILD_INCIDENT_ALERT_MODE_DISABLED:
              return (function (e, t) {
                let n = E.default.getChannel(t);
                if (null == n) return null;
                let a = f.default.getGuild(n.getGuildId());
                return null == a
                  ? null
                  : (0, s.astToString)(
                      N.default.Messages.GUILD_SERVER_LOCKDOWN_DISABLED_NOTIFICATION.astFormat(
                        { username: e, guildName: a.name }
                      )
                    );
              })(R, O);
            default:
              return e.content;
          }
        },
        getSystemMessageUserJoin: function (e) {
          let t = S(),
            n = I.default.extractTimestamp(e) % t.length;
          return t[n];
        },
        getSystemMessageUserJoinMobile: A,
        getSystemMessageBotJoin: function (e) {
          return null == p[e]
            ? null
            : N.default.Messages.SYSTEM_MESSAGE_GUILD_BOT_JOIN.format({
                learnOnClick: { onClick: () => window.open(p[e]) },
              });
        },
      };
    },
    711444: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AppsIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M2.06 7.61c-.25.95.31 1.92 1.26 2.18l4.3 1.15c.94.25 1.91-.31 2.17-1.26l1.15-4.3c.25-.94-.31-1.91-1.26-2.17l-4.3-1.15c-.94-.25-1.91.31-2.17 1.26l-1.15 4.3ZM12.98 7.87a2 2 0 0 0 1.75 2.95H20a2 2 0 0 0 1.76-2.95l-2.63-4.83a2 2 0 0 0-3.51 0l-2.63 4.83ZM5.86 13.27a.89.89 0 0 1 1.28 0l.75.77a.9.9 0 0 0 .54.26l1.06.12c.5.06.85.52.8 1.02l-.13 1.08c-.02.2.03.42.14.6l.56.92c.27.43.14 1-.28 1.26l-.9.58a.92.92 0 0 0-.37.48l-.36 1.02a.9.9 0 0 1-1.15.57l-1-.36a.89.89 0 0 0-.6 0l-1 .36a.9.9 0 0 1-1.15-.57l-.36-1.02a.92.92 0 0 0-.37-.48l-.9-.58a.93.93 0 0 1-.28-1.26l.56-.93c.11-.17.16-.38.14-.59l-.12-1.08c-.06-.5.3-.96.8-1.02l1.05-.12a.9.9 0 0 0 .54-.26l.75-.77ZM18.52 13.71a1.1 1.1 0 0 0-2.04 0l-.46 1.24c-.19.5-.57.88-1.07 1.07l-1.24.46a1.1 1.1 0 0 0 0 2.04l1.24.46c.5.19.88.57 1.07 1.07l.46 1.24c.35.95 1.7.95 2.04 0l.46-1.24c.19-.5.57-.88 1.07-1.07l1.24-.46a1.1 1.1 0 0 0 0-2.04l-1.24-.46a1.8 1.8 0 0 1-1.07-1.07l-.46-1.24Z",
            className: r,
          }),
        });
      };
    },
    457646: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HandRequestSpeakIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M16.02 3.06a1.23 1.23 0 0 0-2.39-.6l-2.14 7.76-.61-.24.83-6.97a1.26 1.26 0 0 0-2.49-.34L8.13 9.65l-.47 2.86a.42.42 0 0 1-.8.1l-.66-1.47a3.92 3.92 0 0 0-1.85-1.9l-.32-.17a1.53 1.53 0 0 0-1.91.47.61.61 0 0 0-.05.65l1.33 2.5c.06.12.12.24.16.37l1.26 4.11a7.47 7.47 0 0 0 14.28.03l.95-3.05 1.85-4.36a1.19 1.19 0 0 0-2.17-.96l-1.8 3.87-.56-.22 2.4-7.64a1.17 1.17 0 0 0-2.21-.75l-2.78 7.4-.67-.26 1.9-8.17Z",
            className: r,
          }),
        });
      };
    },
    266415: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ImageSparkleIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M20.14.8a1.21 1.21 0 0 0-2.28 0l-.5 1.37a2 2 0 0 1-1.19 1.18l-1.38.51a1.21 1.21 0 0 0 0 2.28l1.38.5a2 2 0 0 1 1.18 1.19l.51 1.38a1.21 1.21 0 0 0 2.28 0l.5-1.38a2 2 0 0 1 1.19-1.18l1.38-.51a1.21 1.21 0 0 0 0-2.28l-1.38-.5a2 2 0 0 1-1.18-1.19L20.14.79Z",
              className: r,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M13.25 2c.17 0 .23.28.1.38A3.22 3.22 0 0 0 14.1 8l1.38.51.5 1.38a3.22 3.22 0 0 0 5.64.76c.1-.14.38-.08.38.09V19a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V5a3 3 0 0 1 3-3h8.25Zm2.1 11.13 3.5 4.67c.37.5.02 1.2-.6 1.2H5.81a.75.75 0 0 1-.59-1.22l1.86-2.32a1.5 1.5 0 0 1 2.34 0l.5.64 2.23-2.97a2 2 0 0 1 3.2 0ZM10.2 5.98c.23-.91-.88-1.55-1.55-.9a.93.93 0 0 1-1.3 0c-.67-.65-1.78-.01-1.55.9a.93.93 0 0 1-.65 1.12c-.9.26-.9 1.54 0 1.8.48.14.77.63.65 1.12-.23.91.88 1.55 1.55.9a.93.93 0 0 1 1.3 0c.67.65 1.78.01 1.55-.9a.93.93 0 0 1 .65-1.12c.9-.26.9-1.54 0-1.8a.93.93 0 0 1-.65-1.12Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    970738: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          InventoryIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M6.69 2A3 3 0 0 0 3.7 4.67l-.33 3A3 3 0 0 0 6.35 11H7V9a1 1 0 1 1 2 0v2h6V9a1 1 0 1 1 2 0v2h.65a3.05 3.05 0 0 0 .9-.14 3 3 0 0 0 2.08-3.2l-.33-3A3 3 0 0 0 17.32 2H6.69Z",
              className: r,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M15 13v1a1 1 0 1 0 2 0v-1h.65c1.44 0 2.72-.6 3.62-1.56l.04.22.68 5.88A4 4 0 0 1 18 22H6A4 4 0 0 1 2 17.54l.68-5.88.04-.22c.9.96 2.19 1.56 3.62 1.56H7v1a1 1 0 1 0 2 0v-1h6Zm-6 4a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm7 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    254845: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LinkExternalMediumIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M7 4a1 1 0 0 0 0 2h9.59L4.29 18.3a1 1 0 1 0 1.42 1.4L18 7.42V17a1 1 0 1 0 2 0V5a1 1 0 0 0-1-1H7Z",
            className: r,
          }),
        });
      };
    },
    157082: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MicrophoneArrowRightIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              d: "m19.7.3 4 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-1.4-1.4L20.58 6H15a1 1 0 1 1 0-2h5.59l-2.3-2.3A1 1 0 0 1 19.71.3Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, s.jsx)("path", {
              d: "M12.62 2.05c.41.06.46.61.17.92A3 3 0 0 0 15 8h.51c.28 0 .5.22.5.5V10a4 4 0 1 1-8 0V6a4 4 0 0 1 4.62-3.95Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, s.jsx)("path", {
              d: "M17.56 12.27a.63.63 0 0 1 .73-.35c.21.05.43.08.65.08.38 0 .72.35.6.7A8 8 0 0 1 13 17.94V20h2a1 1 0 1 1 0 2H9a1 1 0 1 1 0-2h2v-2.06A8 8 0 0 1 4 10a1 1 0 0 1 2 0 6 6 0 0 0 11.56 2.27Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
          ],
        });
      };
    },
    331801: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SettingsInfoIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              d: "M10.56 1.1c-.46.05-.7.53-.64.98.18 1.16-.19 2.2-.98 2.53-.8.33-1.79-.15-2.49-1.1-.27-.36-.78-.52-1.14-.24-.77.59-1.45 1.27-2.04 2.04-.28.36-.12.87.24 1.14.96.7 1.43 1.7 1.1 2.49-.33.8-1.37 1.16-2.53.98-.45-.07-.93.18-.99.64a11.1 11.1 0 0 0 0 2.88c.06.46.54.7.99.64 1.16-.18 2.2.19 2.53.98.33.8-.14 1.79-1.1 2.49-.36.27-.52.78-.24 1.14.59.77 1.27 1.45 2.04 2.04.36.28.87.12 1.14-.24.7-.95 1.7-1.43 2.49-1.1.8.33 1.16 1.37.98 2.53-.07.45.18.93.64.99a11.1 11.1 0 0 0 1.82.08c.38 0 .58-.43.4-.77a6.97 6.97 0 0 1-.35-5.63c.1-.28-.14-.59-.43-.59a4 4 0 1 1 4-4c0 .3.31.53.59.43a6.99 6.99 0 0 1 5.63.35c.34.18.76-.02.77-.4a11.39 11.39 0 0 0-.08-1.82c-.06-.46-.54-.7-.99-.64-1.16.18-2.2-.19-2.53-.98-.33-.8.14-1.79 1.1-2.49.36-.27.52-.78.24-1.14a11.07 11.07 0 0 0-2.04-2.04c-.36-.28-.87-.12-1.14.24-.7.96-1.7 1.43-2.49 1.1-.8-.33-1.16-1.37-.98-2.53.07-.45-.18-.93-.64-.99a11.1 11.1 0 0 0-2.88 0Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, s.jsx)("path", {
              fillRule: "evenodd",
              d: "M19 24a5 5 0 1 0 0-10 5 5 0 0 0 0 10Zm1-4a1 1 0 1 0-2 0v1a1 1 0 1 0 2 0v-1Zm0-3a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z",
              clipRule: "evenodd",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
          ],
        });
      };
    },
    528993: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          WarningIcon: function () {
            return i;
          },
        });
      var s = n("37983");
      n("884691");
      var a = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = a.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            fillRule: "evenodd",
            d: "M10 3.1a2.37 2.37 0 0 1 4 0l8.71 14.75c.84 1.41-.26 3.15-2 3.15H3.29c-1.74 0-2.84-1.74-2-3.15L9.99 3.1Zm3.25 14.65a1.25 1.25 0 1 1-2.5 0 1.25 1.25 0 0 1 2.5 0ZM13.06 14l.37-5.94a1 1 0 0 0-1-1.06h-.87a1 1 0 0 0-1 1.06l.38 5.94a1.06 1.06 0 0 0 2.12 0Z",
            clipRule: "evenodd",
            className: r,
          }),
        });
      };
    },
    6938: function (e, t, n) {
      "use strict";
      var s, a;
      n.r(t),
        n.d(t, {
          AutomodNotificationEmbedTypeKeys: function () {
            return s;
          },
        }),
        ((a = s || (s = {})).RAID = "raid"),
        (a.MENTION_RAID = "mention_raid"),
        (a.ACTIVITY_ALERTS_ENABLED = "activity_alerts_enabled");
    },
    417796: function (e, t, n) {
      "use strict";
      var s, a;
      n.r(t),
        n.d(t, {
          AutomodRaidAlertTypes: function () {
            return s;
          },
        }),
        ((a = s || (s = {})).JOIN_RAID = "JOIN_RAID"),
        (a.DM_RAID = "DM_RAID"),
        (a.MENTION_RAID = "MENTION_RAID");
    },
    216721: function (e, t, n) {
      "use strict";
      var s, a;
      n.r(t),
        n.d(t, {
          PauseDuration: function () {
            return s;
          },
        }),
        ((a = s || (s = {}))[(a.ONE_MONTH = 30)] = "ONE_MONTH"),
        (a[(a.TWO_MONTHS = 60)] = "TWO_MONTHS"),
        (a[(a.THREE_MONTHS = 90)] = "THREE_MONTHS");
    },
  },
]);
//# sourceMappingURL=a023865a3277164b1b4c.js.map
